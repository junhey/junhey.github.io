/*
Navicat MySQL Data Transfer

Source Server         : localhost_3306
Source Server Version : 50505
Source Host           : localhost:3306
Source Database       : app_junhey

Target Server Type    : MYSQL
Target Server Version : 50505
File Encoding         : 65001

Date: 2017-02-25 17:17:28
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `typecho_comments`
-- ----------------------------
DROP TABLE IF EXISTS `typecho_comments`;
CREATE TABLE `typecho_comments` (
  `coid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cid` int(10) unsigned DEFAULT '0',
  `created` int(10) unsigned DEFAULT '0',
  `author` varchar(200) DEFAULT NULL,
  `authorId` int(10) unsigned DEFAULT '0',
  `ownerId` int(10) unsigned DEFAULT '0',
  `mail` varchar(200) DEFAULT NULL,
  `url` varchar(200) DEFAULT NULL,
  `ip` varchar(64) DEFAULT NULL,
  `agent` varchar(200) DEFAULT NULL,
  `text` text,
  `type` varchar(16) DEFAULT 'comment',
  `status` varchar(16) DEFAULT 'approved',
  `parent` int(10) unsigned DEFAULT '0',
  PRIMARY KEY (`coid`),
  KEY `cid` (`cid`),
  KEY `created` (`created`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of typecho_comments
-- ----------------------------
INSERT INTO `typecho_comments` VALUES ('2', '2', '1457937522', 'pascal', '0', '1', 'pascaling@163.com', null, '183.60.191.104', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:44.0) Gecko/20100101 Firefox/44.0', '找个设计妹子帮你把这个网站重新设计一下呗', 'comment', 'approved', '0');
INSERT INTO `typecho_comments` VALUES ('3', '203', '1465890785', 'Carl', '0', '1', 'wo@houyang.org', 'http://houyang.org', '106.39.118.254', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.84 Safari/537.36', '\r\n这代码需要这么复杂？为啥不用类似取一个数十位百位的个位的写法\r\n\r\nPS:这主题不错，我喜欢，哇哈哈哈哈', 'comment', 'approved', '0');
INSERT INTO `typecho_comments` VALUES ('4', '203', '1466132813', 'junhey', '1', '1', 'junhey@qq.com', 'http://www.junhey.com', '14.154.160.112', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.22 Safari/537.36 SE 2.X MetaSr 1.0', 'js处理Data都很复杂，没办法  T  。T', 'comment', 'approved', '3');
INSERT INTO `typecho_comments` VALUES ('5', '35', '1468307525', 'Smithf659', '0', '1', 'smithf346@gmail.com', 'http://geekffdfcgccdfed.blogspot.com/', '192.210.201.3', 'Mozilla/4.0 (Windows NT 6.2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.70 Safari/537.17', 'I loved your blog article. Really Cool. geekffdfcgccdfed', 'comment', 'approved', '0');
INSERT INTO `typecho_comments` VALUES ('6', '35', '1471122572', 'Smithe725', '0', '1', 'smithe406@gmail.com', 'http://geagddafdgceckff.blogspot.com/', '197.15.76.21', 'Mozilla/4.0 (Windows NT 6.2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.70 Safari/537.17', 'Really informative article post.Thanks Again. Awesome. geagddafdgceckff', 'comment', 'approved', '0');
INSERT INTO `typecho_comments` VALUES ('7', '35', '1483003184', 'Smithk849', '0', '1', 'smithk817@gmail.com', 'http://bcgcddkffabdfcdg.blogspot.com/', '41.161.92.130', 'Mozilla/4.0 (Windows NT 6.2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.70 Safari/537.17', 'Hello to all, how is everything, I think every one is getting more from this website, and your views are fastidious in support of new viewers. bcgcddkffabdfcdg', 'comment', 'waiting', '6');
INSERT INTO `typecho_comments` VALUES ('8', '35', '1486799854', 'Smithf358', '0', '1', 'smithf152@gmail.com', 'http://bffkeeefecedggcb.blogspot.com/', '52.25.201.221', 'Mozilla/4.0 (Windows NT 6.2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.70 Safari/537.17', 'That is some inspirational stuff. Never knew that opinions could be this varied. Be certain to keep writing. bffkeeefecedggcb', 'comment', 'waiting', '5');

-- ----------------------------
-- Table structure for `typecho_contents`
-- ----------------------------
DROP TABLE IF EXISTS `typecho_contents`;
CREATE TABLE `typecho_contents` (
  `cid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(200) DEFAULT NULL,
  `slug` varchar(200) DEFAULT NULL,
  `created` int(10) unsigned DEFAULT '0',
  `modified` int(10) unsigned DEFAULT '0',
  `text` text,
  `order` int(10) unsigned DEFAULT '0',
  `authorId` int(10) unsigned DEFAULT '0',
  `template` varchar(32) DEFAULT NULL,
  `type` varchar(16) DEFAULT 'post',
  `status` varchar(16) DEFAULT 'publish',
  `password` varchar(32) DEFAULT NULL,
  `commentsNum` int(10) unsigned DEFAULT '0',
  `allowComment` char(1) DEFAULT '0',
  `allowPing` char(1) DEFAULT '0',
  `allowFeed` char(1) DEFAULT '0',
  `parent` int(10) unsigned DEFAULT '0',
  PRIMARY KEY (`cid`),
  UNIQUE KEY `slug` (`slug`),
  KEY `created` (`created`)
) ENGINE=MyISAM AUTO_INCREMENT=228 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of typecho_contents
-- ----------------------------
INSERT INTO `typecho_contents` VALUES ('6', 'CSS3-浏览器相关', '6', '1441090680', '1446707935', '<!--markdown--># 浏览器前缀 \r\n> IE：-ms-\r\n  Firefox：-moz-\r\n  Chrome：-webkit-\r\n  Safari：-webkit-\r\n  Opera：-o-\r\n\r\n# css3的三个动画属性\r\n\r\n- 变形transform\r\n旋转 div 元素：\r\n  ```\r\n    div\r\n    {\r\n        transform:rotate(7deg);\r\n        -ms-transform:rotate(7deg); 	/* IE 9 */\r\n        -moz-transform:rotate(7deg); 	/* Firefox */\r\n        -webkit-transform:rotate(7deg); /* Safari 和 Chrome */\r\n        -o-transform:rotate(7deg); 	/* Opera */\r\n    }\r\n\r\n  ```\r\n\r\n- 转换transition\r\n把鼠标指针放到 div 元素上，其宽度会从 100px 逐渐变为 300px：\r\n```\r\n	div\r\n	{\r\n		transform:rotate(7deg);\r\n		-ms-transform:rotate(7deg); 	/* IE 9 */\r\n		-moz-transform:rotate(7deg); 	/* Firefox */\r\n		-webkit-transform:rotate(7deg); /* Safari 和 Chrome */\r\n		-o-transform:rotate(7deg); 	/* Opera */\r\n	}\r\n\r\n```\r\n\r\n\r\n- 动画animation\r\n使用简写属性，将动画与 div 元素绑定(Internet Explorer 9 以及更早的版本不支持 animation 属性)：\r\n```\r\n	div\r\n	{\r\n	animation:mymove 5s infinite;\r\n	-webkit-animation:mymove 5s infinite; /* Safari 和 Chrome */\r\n	}\r\n\r\n```', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('2', '关于', 'about', '1357399020', '1473860973', '<!--markdown-->### 关于我 / About Me\r\n\r\nMy name is junhey.  I come from China, Xinyu City, Jiangxi Province, and now working in web development.\r\n\r\nLife is colorful, this website was, is and will be my window which used to present the color of my life.\r\n\r\nI like programming, reading book, surfing internet, traveling. And I love making friends very much, if you want to be my friend, I will be pleasure.\r\n\r\n### 关于内容 / About The Website\r\n\r\n版权声明：「自由转载-非商用-非衍生-保持署名」（[创意共享3.0许可证](http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh)）\r\n\r\n所有文章非特别说明皆为原创。由于文章表述或者内容可能存在诸多错误，所以部分内容会作修改，为保证转载信息与源同步，转载请注明文章出处！谢谢合作 :-)\r\n\r\n文章为个人观点，不代表服务的公司。\r\n\r\n### 订阅地址 / The RSS Address\r\n\r\n本网站 RSS 订阅地址：[http://junhey.com/feed](http://junhey.com/feed)\r\n\r\n### 其他信息 / External Links\r\n\r\n- github : [https://github.com/junhey](https://github.com/junhey)\r\n- email : [junhey(at)qq.com](mailto:junhey@qq.com)', '3', '1', null, 'page', 'publish', null, '1', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('9', ' java环境变量最佳配置', '9', '1362224160', '1446632775', '<!--markdown-->----------\r\n\r\n\r\n1.  打开我的电脑--属性--高级--环境变量 \r\n\r\n![1.png][1]\r\n\r\n![2.png][2]\r\n\r\n2.  新建系统变量JAVA_HOME 和CLASSPATH \r\n变量名：JAVA_HOME \r\n变量值：C:\\Program Files\\Java\\jdk1.7.0（注意：此行不要复制粘贴，这个地址是你安装的jdk地址）\r\n变量名：CLASSPATH \r\n变量值：.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;\r\n\r\n![3.png][3]\r\n\r\n![4.png][4]\r\n\r\n![5.png][5]\r\n\r\n3.  选择“系统变量”中变量名为“Path”的环境变量，双击该变量，把JDK安装路径中bin目录的绝对路径，添加到Path变量的值中，并使用半角的分号和已有的路径进行分隔。 \r\n变量名：Path \r\n变量值：%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;\r\n这是java的环境配置，配置完成后直接启动eclipse，它会自动完成java环境的配置\r\n\r\n![6.png][6]\r\n\r\n\r\n \r\n附上图\r\n\r\n\r\n  [1]: http://junhey-typechoupload.stor.sinaapp.com/630176156.png\r\n  [2]: http://junhey-typechoupload.stor.sinaapp.com/2974353504.png\r\n  [3]: http://junhey-typechoupload.stor.sinaapp.com/1488111455.png\r\n  [4]: http://junhey-typechoupload.stor.sinaapp.com/4277181160.png\r\n  [5]: http://junhey-typechoupload.stor.sinaapp.com/2535074637.png\r\n  [6]: http://junhey-typechoupload.stor.sinaapp.com/1213196307.png', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('10', 'Eclipse中如何显示代码行', '10', '1374212820', '1446530519', '<!--markdown--># 方法一 \r\n\r\n快捷键方式：\r\n按住 Ctrl + F10 选择 show  Line Numbers\r\n\r\n# 方法二 手动操作：\r\n\r\nWindow -- Prefences -- General -- Editors -- Text Editors -- show line numbers\r\n\r\n# 方法三 \r\n\r\n打开代码文件的左边框右键--->选择 Show Line Numbers 即可', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('11', '【珍藏】eclipse快捷键', '11', '1374049560', '1446530647', '<!--markdown-->提示所有快捷键的快捷键是 \r\nctrl+shift+L \r\n\r\n菜单是在: \r\nwindow-->preferences-->general-->keys \r\n\r\n提供能容帮助是 \r\nalt+/\r\n\r\nCtrl+1 快速修复(最经典的快捷键,就不用多说了)\r\nCtrl+D: 删除当前行 \r\nCtrl+Alt+↓ 复制当前行到下一行(复制增加)\r\nCtrl+Alt+↑ 复制当前行到上一行(复制增加)\r\nAlt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)\r\nAlt+↑ 当前行和上面一行交互位置(同上)\r\nAlt+← 前一个编辑的页面\r\nAlt+→ 下一个编辑的页面(当然是针对上面那条来说了)\r\nAlt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性\r\nShift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)\r\nShift+Ctrl+Enter 在当前行插入空行(原理同上条)\r\nCtrl+Q 定位到最后编辑的地方\r\nCtrl+L 定位在某行 (对于程序超过100的人就有福音了)\r\nCtrl+M 最大化当前的Edit或View (再按则反之)\r\nCtrl+/ 注释当前行,再按则取消注释\r\nCtrl+O 快速显示 OutLine\r\nCtrl+T 快速显示当前类的继承结构\r\nCtrl+W 关闭当前Editer\r\nCtrl+K 参照选中的Word快速定位到下一个\r\nCtrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示)\r\nCtrl+/(小键盘) 折叠当前类中的所有代码\r\nCtrl+×(小键盘) 展开当前类中的所有代码\r\nCtrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用Alt+/来代替)\r\nCtrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作)\r\nCtrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了)\r\nCtrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查)\r\nCtrl+Shift+F4 关闭所有打开的Editer\r\nCtrl+Shift+X 把当前选中的文本全部变味小写\r\nCtrl+Shift+Y 把当前选中的文本全部变为小写\r\nCtrl+Shift+F 格式化当前代码\r\nCtrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之)\r\n\r\n下面的快捷键是重构里面常用的,本人就自己喜欢且常用的整理一下(注:一般重构的快捷键都是Alt+Shift开头的了)\r\nAlt+Shift+R 重命名 (是我自己最爱用的一个了,尤其是变量和类的Rename,比手工方法能节省很多劳动力)\r\nAlt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用)\r\nAlt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定)\r\nAlt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候)\r\nAlt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能)\r\nAlt+Shift+I 合并变量(可能这样说有点不妥Inline)\r\nAlt+Shift+V 移动函数和变量(不怎么常用)\r\nAlt+Shift+Z 重构的后悔药(Undo)\r\n\r\n编辑\r\n作用域 功能 快捷键 \r\n全局 查找并替换 Ctrl+F \r\n文本编辑器 查找上一个 Ctrl+Shift+K \r\n文本编辑器 查找下一个 Ctrl+K \r\n全局 撤销 Ctrl+Z \r\n全局 复制 Ctrl+C \r\n全局 恢复上一个选择 Alt+Shift+↓ \r\n全局 剪切 Ctrl+X \r\n全局 快速修正 Ctrl1+1 \r\n全局 内容辅助 Alt+/ \r\n全局 全部选中 Ctrl+A \r\n全局 删除 Delete \r\n全局 上下文信息 Alt+？\r\nAlt+Shift+?\r\nCtrl+Shift+Space \r\nJava编辑器 显示工具提示描述 F2 \r\nJava编辑器 选择封装元素 Alt+Shift+↑ \r\nJava编辑器 选择上一个元素 Alt+Shift+← \r\nJava编辑器 选择下一个元素 Alt+Shift+→ \r\n文本编辑器 增量查找 Ctrl+J \r\n文本编辑器 增量逆向查找 Ctrl+Shift+J \r\n全局 粘贴 Ctrl+V \r\n全局 重做 Ctrl+Y \r\n\r\n查看\r\n作用域 功能 快捷键 \r\n全局 放大 Ctrl+= \r\n全局 缩小 Ctrl+- \r\n\r\n窗口\r\n作用域 功能 快捷键 \r\n全局 激活编辑器 F12 \r\n全局 切换编辑器 Ctrl+Shift+W \r\n全局 上一个编辑器 Ctrl+Shift+F6 \r\n全局 上一个视图 Ctrl+Shift+F7 \r\n全局 上一个透视图 Ctrl+Shift+F8 \r\n全局 下一个编辑器 Ctrl+F6 \r\n全局 下一个视图 Ctrl+F7 \r\n全局 下一个透视图 Ctrl+F8 \r\n文本编辑器 显示标尺上下文菜单 Ctrl+W \r\n全局 显示视图菜单 Ctrl+F10 \r\n全局 显示系统菜单 Alt+- \r\n\r\n导航\r\n作用域 功能 快捷键 \r\nJava编辑器 打开结构 Ctrl+F3 \r\n全局 打开类型 Ctrl+Shift+T \r\n全局 打开类型层次结构 F4 \r\n全局 打开声明 F3 \r\n全局 打开外部javadoc Shift+F2 \r\n全局 打开资源 Ctrl+Shift+R \r\n全局 后退历史记录 Alt+← \r\n全局 前进历史记录 Alt+→ \r\n全局 上一个 Ctrl+, \r\n全局 下一个 Ctrl+. \r\nJava编辑器 显示大纲 Ctrl+O \r\n全局 在层次结构中打开类型 Ctrl+Shift+H \r\n全局 转至匹配的括号 Ctrl+Shift+P \r\n全局 转至上一个编辑位置 Ctrl+Q \r\nJava编辑器 转至上一个成员 Ctrl+Shift+↑ \r\nJava编辑器 转至下一个成员 Ctrl+Shift+↓ \r\n文本编辑器 转至行 Ctrl+L \r\n\r\n搜索\r\n作用域 功能 快捷键 \r\n全局 出现在文件中 Ctrl+Shift+U \r\n全局 打开搜索对话框 Ctrl+H \r\n全局 工作区中的声明 Ctrl+G \r\n全局 工作区中的引用 Ctrl+Shift+G \r\n\r\n文本编辑\r\n作用域 功能 快捷键 \r\n文本编辑器 改写切换 Insert \r\n文本编辑器 上滚行 Ctrl+↑ \r\n文本编辑器 下滚行 Ctrl+↓ \r\n\r\n文件\r\n作用域 功能 快捷键 \r\n全局 保存 Ctrl+X \r\nCtrl+S \r\n全局 打印 Ctrl+P \r\n全局 关闭 Ctrl+F4 \r\n全局 全部保存 Ctrl+Shift+S \r\n全局 全部关闭 Ctrl+Shift+F4 \r\n全局 属性 Alt+Enter \r\n全局 新建 Ctrl+N \r\n\r\n项目\r\n作用域 功能 快捷键 \r\n全局 全部构建 Ctrl+B \r\n\r\n源代码\r\n作用域 功能 快捷键 \r\nJava编辑器 格式化 Ctrl+Shift+F \r\nJava编辑器 取消注释 Ctrl+\\ \r\nJava编辑器 注释 Ctrl+/ \r\nJava编辑器 添加导入 Ctrl+Shift+M \r\nJava编辑器 组织导入 Ctrl+Shift+O \r\nJava编辑器 使用try/catch块来包围 未设置，太常用了，所以在这里列出,建议自己设置。\r\n也可以使用Ctrl+1自动修正。 \r\n\r\n运行\r\n作用域 功能 快捷键 \r\n全局 单步返回 F7 \r\n全局 单步跳过 F6 \r\n全局 单步跳入 F5 \r\n全局 单步跳入选择 Ctrl+F5 \r\n全局 调试上次启动 F11 \r\n全局 继续 F8 \r\n全局 使用过滤器单步执行 Shift+F5 \r\n全局 添加/去除断点 Ctrl+Shift+B \r\n全局 显示 Ctrl+D \r\n全局 运行上次启动 Ctrl+F11 \r\n全局 运行至行 Ctrl+R \r\n全局 执行 Ctrl+U \r\n\r\n重构\r\n作用域 功能 快捷键 \r\n全局 撤销重构 Alt+Shift+Z \r\n全局 抽取方法 Alt+Shift+M \r\n全局 抽取局部变量 Alt+Shift+L \r\n全局 内联 Alt+Shift+I \r\n全局 移动 Alt+Shift+V \r\n全局 重命名 Alt+Shift+R \r\n全局 重做 Alt+Shift+Y', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('5', 'CSS样式命名', '5', '1446268920', '1446357604', '<!--markdown--># 页面结构\r\n- 容器 container/wrap\r\n- 整体宽度 wrapper\r\n- 页头 header\r\n- 内容 content\r\n- 页面主体 main\r\n- 页尾 footer\r\n- 导航 nav\r\n- 侧栏 sidebar\r\n- 栏目 column\r\n- 中间内容 center\r\n# 导航\r\n- 导航 nav\r\n- 导航 mainbav/globalnav\r\n- 子导航 subnav\r\n- 顶导航 topnav\r\n- 边导航 sidebar\r\n- 左导航 leftsidebar\r\n- 右导航 rightsidebar\r\n- 边导航图标 sidebarIcon\r\n- 菜单 menu\r\n- 子菜单 submenu\r\n- 标题 title\r\n# 功能\r\n- 标志 logo\r\n- 登陆 login\r\n- 登录条 loginbar\r\n- 注册 register\r\n- 常见问题 faqs\r\n- 关键词 keyword\r\n- 博客 blog\r\n- 论坛 forum\r\n- 搜索 search\r\n- 搜索输入框 searchInput\r\n- 搜索输出 searchOutput\r\n- 搜索结果 searchResults\r\n- 加入我们 joinUs\r\n- 状态 status\r\n- 按钮 btn\r\n- 滚动 scroll\r\n- 标签页 tab\r\n- 文章列表 list\r\n- 提示信息 msg/message\r\n- 当前的 current\r\n- 小提示 tips\r\n- 皮肤 skin\r\n- 充值 pay\r\n- 产品 products\r\n- 产品价格 productsPrices\r\n- 产品评论 productsReview\r\n- 编辑评论 editorReview\r\n- 最新产品 newsRelease\r\n- 广告/标语 banner\r\n- 摘要 summary\r\n- 生产商 publisher\r\n- 缩图 screenshot\r\n- 活动 activities\r\n- 推广 promotion\r\n- 公告 announcement\r\n- 排行 ranking\r\n- 公司简介 companyProfile\r\n- 公司设备 glories\r\n- 企业文化 culture\r\n- 企业规模 scaleScale\r\n- 营销网络 salesNetwork\r\n- 组织机构 organization\r\n- 技术力量 techology\r\n- 分支机构 branches\r\n- 联系我们 contactUs\r\n- 版权所有 copyRight\r\n- 地址 ADD/Add\r\n- 友情链接 friendLink\r\n- 电话 TEL/Tel\r\n- 图标 icon\r\n- 注释 note\r\n- 指南 guild\r\n- 服务 service\r\n- 热点 hot\r\n- 新闻 news\r\n- 下载 download\r\n- 投票 vote\r\n- 商标 label/branding\r\n- 当前位置 baeadcrumb/location\r\n- 购物车 shop\r\n- 标签 tag\r\n- 网站信息 siteinfo\r\n- 法律声明 siteinfo-legal\r\n- 合作伙伴 partner', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('7', 'css3实现让图片旋转的效果', '7', '1438235400', '1446357613', '<!--markdown-->> 代码如下\r\n```css\r\n/* 图片旋转start */\r\n@keyframes rotate{\r\n	from{-webkit-transform:rotate(0deg)}\r\n	to{-webkit-transform:rotate(360deg)}\r\n}\r\n@-webkit-keyframes rotate{\r\n	from{-webkit-transform:rotate(0deg)}\r\n	to{-webkit-transform:rotate(360deg)}\r\n}\r\n@-moz-keyframes rotate{\r\n	from{-moz-transform:rotate(0deg)}\r\n	to{-moz-transform:rotate(360deg)}\r\n}\r\n@-ms-keyframes rotate{\r\n	from{-ms-transform:rotate(0deg)}\r\n	to{-ms-transform:rotate(360deg)}\r\n}\r\n@-o-keyframes rotate{\r\n	from{-o-transform:rotate(0deg)}\r\n	to{-o-transform:rotate(360deg)}\r\n}\r\n\r\n#logo h1 a.logo-animation{\r\n	animation: 9.5s linear 0s normal none infinite rotate;\r\n	-webkit-animation:9.5s linear 0s normal none infinite rotate;\r\n}\r\n/* 图片旋转end */\r\n\r\n```', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('30', '6.png', '6-png', '1446535151', '1446535151', 'a:5:{s:4:\"name\";s:5:\"6.png\";s:4:\"path\";s:14:\"1213196307.png\";s:4:\"size\";i:15105;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '6', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '9');
INSERT INTO `typecho_contents` VALUES ('29', '5.png', '5-png', '1446535145', '1446535145', 'a:5:{s:4:\"name\";s:5:\"5.png\";s:4:\"path\";s:14:\"2535074637.png\";s:4:\"size\";i:15576;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '5', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '9');
INSERT INTO `typecho_contents` VALUES ('28', '4.png', '4-png', '1446535131', '1446535131', 'a:5:{s:4:\"name\";s:5:\"4.png\";s:4:\"path\";s:14:\"4277181160.png\";s:4:\"size\";i:15821;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '4', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '9');
INSERT INTO `typecho_contents` VALUES ('33', 'js跳转页面的方法', '33', '1404443280', '1446607349', '<!--markdown-->1. 脚本式\r\n```\r\n<span id=\"tiao\">3</span><a href=\"javascript:countDown\"></a>秒后自动跳转……\r\n<meta http-equiv=refresh content=3;url=\'/tiao.php\'>\r\n\r\n<!--脚本开始-->\r\n<script language=\"javascript\" type=\"\">\r\nfunction countDown(secs){\r\n  tiao.innerText=secs;\r\n  if(--secs>0)\r\n   setTimeout(\"countDown(\"+secs+\")\",1000);\r\n  }\r\n  countDown(3);\r\n</script>\r\n<!--脚本结束-->\r\n```\r\n\r\n2. 按钮式\r\n```\r\n<input name=\"pclog\" type=\"button\" value=\"GO\" onClick=\"location.href=\'http://www.baidu.com/\'\">\r\n```\r\n3.链接式\r\n```\r\n<a href=\"javascript:history.go(-1)\">返回上一步</a>\r\n<a href=\"<%=Request.ServerVariables(\"HTTP_REFERER\")%>\">返回上一步</a>\r\n```\r\n4.直接跳转式\r\n```\r\n<script>window.location.href=\'http://www.ddhbb.com\';</script>\r\n```\r\n5.开新窗口\r\n```\r\n<a href=\"javascript:\" onClick=\"window.open(\'http://www.ddhbb.com/blog/guestbook.asp\',\'\',\'height=500,width=611,scrollbars=yes,status=yes\')\">足迹</a>\r\n```\r\n\r\n#  以下为网络摘抄\r\n\r\nJS跳转页面参考代码\r\n第一种：\r\n```\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nwindow.location.href=\"login.jsp?backurl=\"+window.location.href;\r\n</script>\r\n```\r\n第二种：\r\n```\r\n<script language=\"javascript\">\r\nalert(\"返回\");\r\nwindow.history.back(-1);\r\n</script>\r\n```\r\n第三种\r\n```\r\n<script language=\"javascript\">\r\nwindow.navigate(\"top.jsp\");\r\n</script>\r\n```\r\n第四种\r\n```\r\n<script language=\"JavaScript\">\r\nself.location=’top.htm’;\r\n</script>\r\n```\r\n第五种\r\n```\r\n<script language=\"javascript\">\r\nalert(\"非法访问！\");\r\ntop.location=’xx.jsp’;\r\n</script>\r\n```\r\n\r\n＝＝＝＝＝javascript中弹出选择框跳转到其他页面＝＝＝＝＝\r\n```\r\n<script language=\"javascript\">\r\nfunction logout(){\r\n   if (confirm(\"你确定要注销身份吗？是－选择确定，否-选择取消\"))...{\r\n    window.location.href=\"logout.asp?act=logout\"\r\n   }\r\n}\r\n</script>\r\n```', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('25', '1.png', '1-png', '1446535107', '1446535107', 'a:5:{s:4:\"name\";s:5:\"1.png\";s:4:\"path\";s:13:\"630176156.png\";s:4:\"size\";i:69986;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '9');
INSERT INTO `typecho_contents` VALUES ('26', '2.png', '2-png', '1446535118', '1446535118', 'a:5:{s:4:\"name\";s:5:\"2.png\";s:4:\"path\";s:14:\"2974353504.png\";s:4:\"size\";i:30273;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '2', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '9');
INSERT INTO `typecho_contents` VALUES ('27', '3.png', '3-png', '1446535125', '1446535125', 'a:5:{s:4:\"name\";s:5:\"3.png\";s:4:\"path\";s:14:\"1488111455.png\";s:4:\"size\";i:26770;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '3', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '9');
INSERT INTO `typecho_contents` VALUES ('34', '两千行PHP学习笔记', '34', '1415085900', '1446623292', '<!--markdown-->原文：http://www.cnblogs.com/shockerli/p/2000-plus-line-php-notes.html\r\n\r\n//语法错误（syntax error）在语法分析阶段，源代码并未被执行，故不会有任何输出。\r\n/* 【命名规则】 */\r\n常量名 类常量建议全大写，单词间用下划线分隔    // MIN_WIDTH\r\n变量名建议用下划线方式分隔            // $var_name\r\n函数名建议用驼峰命名法                // varName\r\n定界符建议全大写                 // <<<DING, <<<\'DING\'\r\n文件名建议全小写和下划线、数字        // func_name.php\r\n私有属性名、方法名建议加下划线        // private $_name _func\r\n接口名建议加I_                    // interface I_Name\r\n\r\n/* 语言结构 */\r\narray(), echo(), empty(), eval(), exit(), isset(), list(), print(), unset()\r\necho, print 可省略括号。\r\n\r\n/* 预定义常量 */\r\nPATH_SEPARATOR  //路径分隔符(Windows为分号，类Unix为冒号)\r\nDIRECTORY_SEPARATOR //目录分隔符\r\nPHP_EOL //当前系统的换行符\r\nPHP_VERSION //PHP版本号\r\nPHP_OS  //PHP服务操作系统\r\nPHP_SAPI    //用来判断是使用命令行还是浏览器执行的，如果 PHP_SAPI==\'cli\' 表示是在命令行下执行\r\nPHP_INT_MAX                    INT最大值，32位平台时值为2147483647\r\nPHP_INT_SIZE                   INT字长，32位平台时值为4（4字节）\r\nM_PI    //圆周率值\r\nM_E     //自然数\r\n\r\n//PHP运行环境检测函数\r\nphp_sapi_name() //返回一个PHP与WEB服务器接口类型的小写字符串\r\n该函数返回值与常量PHP_SAPI一致！\r\n接口类型：SAPI(the Server API, SAPI)\r\n可能值：aolserver、apache、apache2filter、apache2handler、caudium、cgi、cgi-fcgi、cli、 continuity、embed、isapi、litespeed milter、nsapi、phttpd、pi3web、roxen、thttpd、tux、webjames\r\n\r\n\r\n/* 大小写问题 */\r\n- 类名、方法名、属性名、函数名：不区分大小写\r\n- 变量名、常量名、元素下标：区分大小写\r\n\r\n/* 可变标识符 */\r\n可变变量  $i = 3; $k = \'i\'; echo $$k; //输出3\r\n可变函数  function func() {echo \'hello!\';} $i = \'func\'; $i(); //输出hello\r\n可变下标  $i = \'1234\'; $k = 3; echo $i[$k];   //输出4\r\n可变类名  class CLS{public $k = \'hello\';} $i = \'CLS\'; $j = new $i; echo $j->k;\r\n可变属性  class CLS{public $k = \'hello\';} $i = \'k\'; $j = new CLS; echo $j->$i;\r\n可变方法  class CLS{public function k(){echo \'hello\';}} $i=\'k\'; $j=new CLS; $j->$i();\r\n\r\n/* 可变变量 */\r\n* 用于业务逻辑判断得到某些具体信息\r\n    $var_name = \"class_name\";\r\n    $$var_name = \"PHP0913\";        // $class_name = \"PHP0913\";$class_name已存入内存中\r\n    var_dump($class_name);        // var_dump($$var_name);\r\n\r\n/* 变量函数 */\r\nget_defined_vars    //返回由所有已定义变量所组成的数组(包括环境变量、服务器变量和用户定义的变量)\r\n\r\n\r\n/* unset() */\r\n* unset()仅删除当前变量名和引用，其值并未被删除\r\n* 引用传递中，删除一个变量及其引用，其他变量及引用均存在，且值依然存在\r\n\r\n     echo \"<br />\";\r\n    $v3 = \'值\';\r\n    $v4 = &$v3;\r\n    unset($v4);\r\n    var_dump($v3, $v4);\r\n\r\n/* 变量的最长有效期 */\r\n* 当前脚本的执行周期，脚本执行结束，变量即消失\r\n\r\n\r\n/* 预定义变量/超全局变量 */\r\n$GLOBALS\r\n$_COOKIE\r\n$_ENV\r\n$_FILES\r\n$_GET\r\n$_POST\r\n$_REQUEST\r\n$_SERVER\r\n$_SESSION\r\n\r\n\r\n/* 常量定义 */\r\ndefine(常量名, 常量值, [区分大小写参数])        //true表示不区分/false表示区分大小写\r\nconst 常量名 = 常量值    // 新，建议\r\n常量名可以使用特殊字符\r\nconstant($name)        // 获取常量名\r\n                    // 例：echo constant(\'-_-\');\r\n\r\n\r\n/* 常量相关函数 */\r\ndefined\r\nget_defined_constants\r\n\r\n\r\n/* 预定义常量 */\r\n__FILE__            所在文件的绝对路径\r\n__LINE__            文件中的当前行号\r\n__DIR__            文件所在目录\r\n__FUNCTION__        函数名称\r\n__CLASS__            类的名称\r\n__METHOD__        类的方法名\r\n__NAMESPACE__        当前命名空间的名称\r\n\r\n\r\n/* 整型 */\r\n整型占用4字节，共4*8=32位，最大值为2147483647，最小值为-2147483648，最小值的绝对值比最大值的大1\r\n最高为表示正负，1表示负，0表示正\r\n\r\n\r\n/* 进制转换函数 */\r\n只能十进制与其他进制进行转换，只有六种\r\n转换时，参数应是字符串（即不可含八进制的“0”或十六进制的“0x”）\r\n    dec\r\n     bin\r\n     oct\r\n    hex\r\nhexdec()    十六进制转十进制        也可写hex2dec()\r\ndechex()    十进制转十六进制        也可写dec2hex()\r\nbindec()    二进制转十进制        也可写bin2dec()\r\ndecbin()    十进制转二进制        也可写dex2bin()\r\noctdec()    八进制转十进制        也可写oct2dec()\r\ndecoct()    十进制转八进制        也可写dec2oct()\r\n\r\n\r\n/* 浮点数 */\r\n浮点数不能比较大小 ！！！\r\n几乎所有小数，在保存时都是近似值而不是精确值！\r\n最大值：+/- 1.8E308\r\nPHP所能保存的最长小数位：14位\r\n\r\n/* 单引号字符串 */\r\n单引号字符串中，只能转义反斜杠和单引号\r\n\r\n/* 双引号字符串 */\r\n只解析字符串一次 ！！！\r\neval     把字符串作为PHP代码执行\r\n大括号包裹变量，可确定变量名界限。如：\"aaa{$bbb}ccc\"\r\n双引号中可以将ASCII码转换为字符\r\n\"\\x61\" -> a    // 字符串中不需0，整型中才是0x前导\r\n\"\\x49\\x54\\x43\\x41\\x53\\x54\" -> ITCAST\r\n将ASCII转成字符函数chr()\r\n将字符转成ASCII函数ord()\r\n#双引号转义列表\r\n\\n 换行\r\n\\r 回车\r\n\\t 水平制表符\r\n\\\\ 反斜线\r\n\\$ 美元标记\r\n\\v 垂直制表符\r\n\\e Escape\r\n\\f 换页\r\n\\\" 双引号\"\r\n\\[0-7]{1,3} 符合该正则表达式序列的是一个以八进制方式来表达的字符  \r\n\\x[0-9A-Fa-f]{1,2} 符合该正则表达式序列的是一个以十六进制方式来表达的字符  \r\n\r\n\r\n\r\n/* 定界符 */\r\nherodoc - 功能同双引号，能解析\r\n$str = <<<AAA\r\n字符串内容\r\nAAA;\r\n\r\nnowdoc - 功能同单引号，不能解析\r\n只在开始位置有单引号\r\n$str = <<<\'AAA\'\r\n字符串内容\r\nAAA;\r\n\r\n\r\n/* 字符串的使用 */\r\n可将字符串当作一个字符的集合来使用，可独立访问每个字符。仅适用于单字节字符（字母、数字、半角标点符号），像中文等不可用\r\n$str = \"abcd\";\r\necho $str[3];   // d\r\necho $str{0};   // a\r\n\r\n\r\n/* 【类型操作函数】 */\r\n//获取/设置类型\r\ngettype($var) //获取变量的数据类型\r\nsettype($var, $type) //设置变量的数据类型\r\n\r\n//类型判断\r\nis_int\r\nis_float\r\nis_null\r\nis_string\r\nis_resource\r\nis_array\r\nis_bool\r\nis_object       \r\nis_numeric      检测变量是否为数字或数字字符串\r\n\r\n//转换成指定的数据类型\r\nboolval\r\nfloatval\r\nintval\r\nstrval\r\n\r\n//强制转换类型\r\n(int)\r\n(float)\r\n(string)\r\n(bool)\r\n(array)\r\n(object)\r\n(unset) //转换为NULL\r\n(binary) 转换和 b前缀转换  //转换成二进制\r\n\r\nvar_dump        打印变量的相关信息。\r\n                显示关于一个或多个表达式的结构信息，包括表达式的类型与值。\r\n                数组将递归展开值，通过缩进显示其结构。\r\nvar_export($var [,bool $return]) //输出或返回一个变量的字符串表示\r\n    $return：为true，则返回变量执行后的结果\r\nprint_r         打印关于变量的易于理解的信息\r\nempty           检查一个变量是否为空\r\nisset           检测变量是否存在\r\n\r\n/* 【流程控制】 */\r\n//if语句的替代语法\r\nif (条件判断) :\r\n   语句块;\r\nelseif (条件判断) :\r\n   语句块;\r\nelse :\r\n   语句块;\r\nendif;\r\n\r\n//流程控制的替代语法\r\n在嵌入HTML时常用\r\n将 { 换成 : , 将 } 换成 endif; 等\r\nendif\r\nendwhile\r\nendfor\r\nendforeach\r\nendswitch\r\n\r\n\r\n/* 【switch】 */\r\nswitch (条件) {\r\n   case 状态值1:\r\n       语句块;\r\n       [break;]\r\n   case 状态值2:\r\n       语句块;\r\n       [break;]\r\n   case 状态值3:\r\n   case 状态值4:\r\n       语句块;\r\n       [break;]\r\n   default:\r\n       语句块;\r\n       [break;]\r\n}\r\nswitch是状态分支，特殊的循环\r\n先计算出状态值，再去与判断数作比较\r\nbreak退出流程\r\n\r\n\r\n/* 【for循环】 */\r\nfor (条件初始化表达式; 条件判断表达式; 条件变化表达式) {\r\n循环体\r\n}\r\n\r\n假设循环体被执行了N次，则\r\n条件初始化表达式被执行1次\r\n条件判断表达式被执行N+1次\r\n条件变化表达式被执行N次\r\n\r\n注意：\r\n    1. 循环变量在for语句结束后还可以继续使用，值为第一次失败的值\r\n    2. 循环变量在for循环体内可以使用\r\n    3. 任何条件表达式均可省略，但分号不能省略\r\n        a. 条件初始化表达式被省略时，循环变量被赋值为null，在与条件判断时，\r\n            进行类型转换后再比较。也可以在for语句外进行初始化。\r\n        b. 条件判断表达式被省略时，表示循环为真，进入死循环\r\n        c. 条件变化表达式被省略时，可以在循环体内完成\r\n    4. 每个表达式均可由多条语句组成，每条语句之间使用逗号分割\r\n        如果条件判断表达式由多条语句组成，都会执行，但只有最后一条语句才作为判断条件\r\n    5. for只能遍历数值型索引下标数组\r\n        数组长度函数：count()\r\n    6. 应该将可以初始化的语句均放在条件初始化表达式内，这样可以省去很多执行次数\r\n\r\n\r\n/* 【goto】5.3+ 版本 */\r\n用来跳转到程序中的某一指定位置\r\n该目标位置可以用目标名称 加上冒号来标记。\r\nPHP中的goto有一定限制，只能在同一个文件和作用域中跳转，\r\n    也就是说你无法跳出一个函数或类方法，也无法跳入到另一个函数。\r\n    你也无法跳入到任何循环或者switch结构中。\r\n    常见的用法是用来跳出循环或者switch，可以代替多层的break。 \r\n可以从循环(switch)中跳出来，但不能从外部跳转进去。而函数或类方法，向外向内均不可。\r\ngoto a;\r\necho \'Foo\';\r\na:\r\necho \'Bar\';\r\n\r\n\r\n/* 【文件加载】 */\r\nrequire / include / require_once / include_once\r\n文件载入只是载入目标文件内的代码并执行，与载入的文件类型无关\r\n\r\n文件载入属于执行阶段，当执行到require等语句时，才载入该文件的代码，\r\n    编译并执行，然后回到require等语句位置继续执行下面的语句\r\n【注意】\r\n    在载入开始时，先退出PHP模式；\r\n    再载入目标文件代码，执行该代码；\r\n    结束时，再进入PHP模式。\r\nrequire：处理失败，产生 E_COMPILE_ERROR 错误，脚本中止。\r\ninclude：处理失败，产生 E_WARNING 错误，脚本继续执行。\r\n\r\n#不建议使用require_once/include_once\r\n\r\n\r\n/* 【相对路径】 */\r\n当前浏览器请求的哪个脚本，当前位置就是属于哪个脚本。\r\n./file 和 file 都表示当前目录下的file文件\r\nfile情况（嵌套载入文件时）：\r\n如果当前目录没找到该文件就在代码文件所在目录中继续找。\r\n如果当前目录找到有该文件，则不会再在代码文件所在目录去找也不会再加载。\r\n__DIR__     脚本文件所在目录\r\n__FILE__    脚本文件路径\r\n\r\ninclude_path    加载文件查找目录\r\n    set_include_path()  设置include_path，可多个，用字符串作参数\r\n    该函数设置的path只针对该当前文件有效\r\n    该设置只针对查找未直接写文件路径方式有效\r\n    设置新的include_path会覆盖原来的\r\n\r\n    get_include_path()  获取当前include_path设置项，无参数\r\n\r\n    路径分隔符，在Windows下是分号，在Linux下是冒号\r\n    利用预定义常量 PATH_SEPARATOR 来获得当前的分隔符\r\n\r\n如果直接写文件名：\r\n    1. include_path所设置的\r\n    2. 当前目录\r\n    3. 代码所在文件的目录\r\n如果文件名前带有路径，则会直接根据路径查找，include_path直接被忽略\r\n\r\n\r\n/* 【return】 */\r\nreturn与require结合，可返回文件的内容，return写在被载入的文件内\r\nreturn可以终止所在脚本的执行，作为普通脚本语句\r\nreturn可以返回函数的相应值\r\n\r\n\r\n/* 【终止和延迟脚本执行】 */\r\ndie / exit   终止\r\nreturn是终止所在脚本的执行\r\ndie和exit会立即终止脚本执行\r\ndie(\"到此为止\");     该函数内的字符串可被输出\r\nsleep()  延迟(单位：秒)\r\n    默认最多可延迟30秒，PHP配置可以修改 max_execution_time\r\n    例：sleep(12);\r\nusleep()    以指定的微秒数延迟执行\r\ntime_sleep_until    使脚本睡眠到指定的时间为止\r\n\r\n\r\n/* 【函数】 */\r\n1. 函数的声明是在编译时，故先定义再调用，定义与调用无先后关系！\r\n2. 文件只是代码的载体，程序均在内存中执行！\r\n3. 如果函数的定义在需要载入的文件内，则需要先载入该文件，否则调用出错！\r\n4. 函数的定义可以出现在其他的代码段中，此时函数不会在编译阶段被执行\r\n    只有被执行到时才会被定义！只有独立定义时才会被编译在内存中！\r\n    如果出现在其他函数体内，也需要外层函数被调用时才被定义并生效！\r\n5. 函数名不区分大小写\r\n6. 不允许重名，包括系统函数\r\n7. 【可变函数】\r\n    函数名可以用其他变量代替\r\n    $func_name = \"sayHello\";\r\n    $func_name();       //此时调用sayHello()函数\r\n    注意：只有在调用时才能使用变量，定义时不允许！\r\n8. 变量可作为函数名调用函数，数组元素值也可以！\r\n9. 形式参数parameter，实际参数argument\r\n    可以对参数传递 null，表示该形参不想传递值\r\n    形参与实参之间既可值传递，也可引用传递。\r\n    引用传递参数，应该在定义函数时就在形式参数前加上 & 符号，而此时调用函数实参必须为变量\r\n    如何选择使用哪种传递方式？\r\n        a. 是否需要保证原始数据的完整性\r\n        b. 是否需要增加效率\r\n        c. 对大数据引用传递可节省内存\r\n10. 参数默认值\r\n        a. 函数的参数默认值必须是已经确定的值，不能是变量！\r\n            只要在调用之前定义该常量，则可以使用常量作为参数默认值\r\n        b. 函数默认值可以有多个，建议将有默认值的参数放在参数列表的最后面\r\n           这样可以在调用函数时，不赋予后面有默认值的参数值，否则会出错\r\n        c. 默认参数可以是非标量类型，比如数组、null\r\n        d. 任何默认参数必须放在任何非默认参数的右侧\r\n11. 参数数量\r\n    a. 形参数量多于实参数量\r\n        报告警告级别错误，并以NULL代替\r\n    b. 实参多于形参\r\n        不报告错误，依次为形参赋值\r\n    c. 不确定参数数量\r\n        1) 一个形参都不定义，永远都是实参多于形参\r\n        2) 【可变数量参数】\r\n            func_get_args() 获取当前函数被调用时所有实参的值，返回一个所有实参值组成的数组\r\n            func_get_arg()  获取某个实参的值，通过索引值标识，e.g: func_get_arg(0)\r\n            func_num_args() 获取所有实参的数量\r\n12. 【return】返回值\r\n    a. 函数只有一个返回值，可以通过返回一个数组来得到类似的结果，但可以有多条return语句\r\n    b. return语句会立即中止函数的运行，并将控制权交回调用该函数的代码行\r\n    c. 可以返回包括数组和对象的任意类型\r\n    d. 函数的返回也分值传递和引用传递（返回的是一个变量才可）\r\n        1) 默认是值传递方式\r\n        2) 引用传递方式：\r\n            - 定义函数时，函数名前加上& 表示该函数可以返回引用\r\n            - 调用函数时，函数名前加上& 表示取得函数返回的引用\r\n                此时，函数外修改返回值，会修改函数内的该返回变量的值\r\n            - 如果函数需返回引用，则需要返回一个变量才可以\r\n            - 从函数返回一个引用，必须在函数声明和指派返回值给一个变量时都使用引用操作符&\r\n                function &returns_reference(){return $someref;}\r\n                $newref =& returns_reference();\r\n        3) 返回引用的作用\r\n\r\n\r\n/* 【变量作用域】 */\r\na. 全局变量和局部变量\r\n    1) 作用域之间不重叠，即不同作用域的变量，之间不可访问\r\n    2) 全局作用域  - 函数之外的区域\r\n    3) 局部作用域  - 函数内的区域，每个函数都是一个独立的作用域\r\n\r\nb. 超全局变量，既可以在全局也可在局部使用，仅能用系统自带的，均是数组变量。\r\n    $GLOBALS    $_COOKIE    $_ENV       $_FILES $_GET\r\n    $_POST      $_REQUEST   $_SERVER    $_SESSION\r\nc. $GLOBALS\r\n    1) 不能存在超全局变量，但可以有超全局的数据！\r\n    2) 将需要的数据放到超全局变量的数组内，但统一使用$GLOBALS\r\n    3) $GLOBALS 特征\r\n        - 每个全局变量就是对应$GLOBALS内的一个元素！\r\n            每当增加一个全局，则自动在$GLOBALS内增加一个同名元素！\r\n            同理，每当增加元素，也会增加一个全局变量，一般在函数内增加\r\n        - 做的任何修改，也会映射到另一个，包括更新和删除\r\n            在函数内访问全局变量，只需使用$GLOBALS\r\n        - 出现过的全局变量，就可以通过$GLOBALS这个数组取得\r\n    4) PHP生命周期中，定义在函数体外部的所谓全局变量，函数内部是不能直接获得的\r\n4) global关键字（不建议使用）\r\n    将局部变量声明为同名全局变量的一个\'引用\'！相当于常量的引用传递\r\n        global $var;    // $var = &$GLOBALS[\'var\'];\r\n        不同于$GLOBALS！！！\r\n    global在函数产生一个指向函数外部变量的别名变量，而不是真正的函数外部变量。\r\n    $GLOBALS确确实实调用是外部的变量，函数内外会始终保持一致。\r\n    global的作用是定义全局变量，但是这个全局变量不是应用于整个网站，而是应用于当前页面，包括include或require的所有文件。\r\nd. \r\n    1) 作用域只针对变量，对常量无效\r\n    2) 被载入文件中定义的变量作用域取决于被载入的位置。\r\n        函数外被载入就是全局，函数内被载入就是局部！\r\n\r\n\r\n/* 【变量生命周期】 */\r\n1. 脚本结束时，全局变量消失\r\n2. 函数执行完时，局部变量消失\r\n3. 静态变量\r\n    static关键字\r\n        静态变量仅在局部函数域中存在，但当程序执行离开此作用域时，其值并不丢失。\r\n        静态变量仅会被初始化一次，其他局部变量每次被调用时都会被重新赋值。\r\n        static声明的静态变量的生命周期会被一直延续。\r\n\r\n\r\n/* 【迭代和递归】 */\r\n迭代比递归效率高！\r\n迭代是一种思想（算法），结构和使用上如同循环！\r\n递归是一种思想（算法），将大问题拆分成小问题，逐一解决小问题以解决大问题\r\n    要求大问题和小问题的解决方案是一致的！\r\n    递归的结构和语法体现如图函数。函数体内调用函数本身！\r\n    递归出口：当该问题可以解决时，则不用再递归\r\n\r\n\r\n/* 【匿名函数/闭包函数】 */\r\n匿名函数，也叫闭包函数(closures)，允许临时创建一个没有指定名称的函数。\r\n\r\n1. 定义匿名函数时，不需增加函数名。\r\n2. PHP对匿名函数的管理，以一个对象的方式进行处理。\r\n3. 匿名函数应该存放到变量内。\r\n4. 匿名函数通过Closure类来实现\r\n5. 可以使用函数作为函数的参数和返回值\r\n6. 声明函数时可以使用 use($param) 来向函数中传入函数外的变量，结合变量引用来实现闭包\r\n7. 可以用变量引用函数\r\n$func = function ($e) {\r\n    echo $e;\r\n};   //结束时，需分号结束，如同变量赋值\r\nvar_dump($func);     //使用匿名函数\r\n$func(\'ITCAST\');     //函数的调用\r\n    这不是可变函数，而是对象。Closure闭包类\r\n//use语法\r\n匿名函数倾向于值的概念，可能出现在任何地方。\r\nuse可以使得匿名函数使用其外部作用域的变量。非全局！\r\nuse与全局的区别：\r\n    use使用其外部作用域的变量\r\nfunction out() {\r\n    $v = \"in out\";\r\n    $func = function () use (& $v) {\r\n        var_dump($v);\r\n    }\r\n}\r\n    use类似参数的自动传递，也支持值与引用的传递方式。\r\n//作用\r\n    常作为\'临时函数\'被调用（只在某个地方被调用的函数）\r\n    例如：\r\n        PHP存在一个array_map()函数，功能是针对一个函数内每个元素，去调用某个函数\r\n        操作结果(array) = array_map(操作函数, 操作数组);\r\n        $result_arr = array_map(function ($v) {return $v3}, $arr);\r\n\r\n//闭包用法实例\r\nfunction closureCreater() {\r\n    $x = 1;\r\n    return function($fun = null) use(&$x) {//按引用传值\r\n        echo \"<br />\" . $x++;\r\n        $fun and $fun();\r\n    };\r\n}\r\n\r\n$x = \"hello world\";\r\n$test = closureCreater();\r\n$test();\r\n$test(function(){ echo \"closure test one\"; });\r\n$test(function(){ echo \"closure test two\"; });\r\n$test(function() use($x){ echo \"<br />\".$x;});\r\n\r\n//将函数保存为数组元素\r\n$x = \'outer param.\';\r\n$arr = array();\r\n$arr[] = function($str)use($x){ return $str.$x; };\r\necho $arr[0](\'test fun in arr,\');\r\n\r\n\r\n/* 【数组】 */\r\n关联数组：键和值有关联，键表示值的逻辑含义。\r\n索引数组：键和值无关联，键表示值的位置。通常下标从0开始，递增元素\r\ncount($var [,$mode]) //统计数组元素个数\r\n    $mode可选，设为1或true时则递归统计\r\n    $var非数组，返回1；$var未初始化或等于null或空数组，返回0\r\n\r\n//键名的使用\r\n整型数字键不需加引号($arr[1])\r\n字符串数字键也不需加引号($arr = array(\'1\'=>\'abc\'); $arr[1])\r\n关联数组，字符串键需加引号($arr = array(\'a\'=>\'aaa\'); $arr[\'a\'])\r\n关联数组，双引号中解析变量，可不加引号($arr = array(\'a\'=>\'aaa\'); \"$arr[a]\")\r\n\r\n/* 【指针】 */\r\ncurrent/pos    返回当前被内部指针指向的数组单元的值，并不移动指针。\r\nkey            返回数组中当前单元的键名，并不移动指针\r\nnext        将数组中的内部指针向前移动一位，并返回移动后当前单元的值。先移动，再取值。\r\nprev        将数组的内部指针倒回一位，并返回移动后当前单元的值先移动，再取值。\r\nend            将数组的内部指针指向最后一个单元，并返回最后一个单元的值\r\nreset        将数组的内部指针指向第一个单元，并返回第一个数组单元的值\r\n\r\neach    返回数组中当前的键/值对并将数组指针向前移动一步。\r\n            返回的是一个由键和值组成的长度为4的数组，下标0和key表示键，下标1和value表示值\r\n                在执行each()之后，数组指针将停留在数组中的下一个单元\r\n                    或者当碰到数组结尾时停留在最后一个单元。\r\n                    如果要再用 each 遍历数组，必须使用 reset()。\r\n\r\n    1. 以上指针操作函数，除了key()，若指针移出数组，则返回false。而key()移出则返回null。\r\n    2. 若指针非法，不能进行next/prev操作，能进行reset/end操作\r\n    3. current/next/prev     若遇到包含空单元（0或\"\"）也会返回false。而each不会！\r\n\r\nlist    把数组中的值赋给一些变量。list()是语言结构，不是函数\r\n            仅能用于数字索引的数组并假定数字索引从0开始\r\n            /* 可用于交换多个变量的值 */ list($a, $b) = array($b, $a);\r\n    例：list($drink, , $power) = array(\'coffee\', \'brown\', \'caffeine\');\r\n\r\n1. 复制数组，其指针位置也会被复制。\r\n    特例：如果数组指针非法，则拷贝的数组指针会重置，而原数组的指针不变。\r\n    【指针问题】\r\n        谁第一个进行写操作，就会开辟一个新的值空间。与变量(数组变量)值传递给谁无关。\r\n        数组函数current()被定义为写操作，故会出现问题。\r\n        foreach遍历的是数组的拷贝，当被写时，才会开辟一个新的值空间。\r\n            即，foreach循环体对原数组进行写操作时，才会出现指针问题。\r\n            如果开辟新空间时指针非法，则会初始化指针。\r\n2. 如果指针位置出现问题，则reset()初始化一下就可解决。\r\n\r\n\r\n/* 【遍历数组】 */\r\n* 先找到元素，再获取键和值\r\n\r\nforeach\r\n    foreach (array_expression as [$key =>] & $value)\r\n      当foreach开始执行时，数组内部的指针会自动指向第一个单元。\r\n      获取元素信息后，移动指针，再执行循环体\r\n      1. foreach本身循环结构，break和continue适用于foreach\r\n      2. foreach支持循环的替代语法。\r\n      3. $value是保存元素值的变量，对其修改不会改变数组的元素值\r\n      4. $value支持元素值的引用拷贝，在$value前加上&即可\r\n      5. $key不支持引用传递\r\n      6. foreach遍历的是原数组的拷贝，而在循环体对数组的操作是操作原数组\r\n            即循环体对数组的操作，对原数组生效，对遍历不生效。\r\n            先拷贝一份数组用作遍历\r\n\r\nwhile...list...each\r\nwhile (list($key, $val) = mysql_fetch_row($result)) = each($arr) {\r\n  echo \"$key => $val\\n\";\r\n}\r\n\r\n\r\n\r\n/* 【数组函数】 */\r\n//统计计算\r\ncount        计算数组中的单元数目或对象中的属性个数\r\narray_count_values  统计数组中所有的值出现的次数\r\narray_product       计算数组中所有值的乘积\r\narray_sum           计算数组中所有值的和\r\nrange        建立一个包含指定范围单元的数组\r\n\r\n//获取数组内容\r\narray_chunk        将一个数组分割成多个\r\n    array array_chunk(array $input, int $size[, bool $preserve_keys]) \r\narray_filter    用回调函数过滤数组中的单元\r\narray_slice     从数组中取出一段\r\n    array array_slice($arr, $offset [,$len [,$preserve_keys]])\r\narray_keys        返回数组中所有的键名\r\n    array array_keys(array $input[, mixed $search_value[, bool $strict]] )\r\n    如果指定了可选参数 search_value，则只返回该值的键名。否则input数组中的所有键名都会被返回。\r\narray_values    返回数组中所有的值，并建立数字索引\r\n\r\narray_merge        合并一个或多个数组\r\n    一个数组中的值附加在前一个数组的后面。\r\n    如果输入的数组中有相同的字符串键名，则该键名后面的值将覆盖前一个值。\r\n    如果数组包含数字键名，后面的值将不会覆盖原来的值，而是附加到后面。\r\n    如果只给了一个数组并且该数组是数字索引的，则键名会以连续方式重新索引。 \r\narray_merge_recursive    递归地合并一个或多个数组\r\n\r\n//搜索\r\nin_array            检查数组中是否存在某个值\r\n    bool in_array(mixed $needle, array $haystack[, bool $strict])\r\narray_key_exists    检查给定的键名或索引是否存在于数组中\r\n    isset()对于数组中为NULL的值不会返回TRUE，而 array_key_exists()会\r\narray_search        在数组中搜索给定的值，如果成功则返回相应的键名\r\n\r\narray_combine    创建一个数组，用一个数组的值作为其键名，另一个数组的值作为其值\r\n    如果两个数组的单元数不同或者数组为空时返回FALSE。\r\narray_rand        从数组中随机取出一个或多个单元，返回键名或键名组成的数组，下标是自然排序的\r\narray_fill      用给定的值填充数组\r\n    array_fill($start, $num, $value)\r\narray_flip      交换数组中的键和值\r\narray_pad       用值将数组填补到指定长度\r\narray_reverse   返回一个单元顺序相反的数组\r\narray_unique    移除数组中重复的值\r\narray_splice    把数组中的一部分去掉并用其它值取代\r\n\r\nimplode            将数组元素值用某个字符串连接成字符串\r\nexplode($delimiter, $str [,$limit])    //使用一个字符串分割另一个字符串\r\n    $delimiter不能为空字符串\"\"\r\n\r\narray_map        将回调函数作用到给定数组的单元上，只能处理元素值，可以处理多个数组\r\n    如果callback参数设为null，则合并多个数组为一个多维数组\r\narray_walk        对数组中的每个成员应用用户函数，只能处理一个数组，键和值均可处理，与foreach功能相同\r\n    bool array_walk ( array &$array , callback $funcname [, mixed $userdata ] )\r\n\r\n//栈：后进先出\r\n入栈和出栈会重新分配索引下标\r\narray_push        将一个或多个单元压入数组的末尾（入栈）\r\narray_pop        将数组最后一个单元弹出（出栈）        使用此函数后会重置(reset())array 指针。\r\n\r\n//队列：先进先出\r\n队列函数会重新分配索引下标\r\narray_unshift    在数组开头插入一个或多个单元\r\narray_shift        将数组开头的单元移出数组            使用此函数后会重置(reset())array 指针。\r\n\r\n//排序函数\r\nsort            对数组排序\r\nrsort            对数组逆向排序\r\nasort            对数组进行排序并保持索引关系\r\narsort            对数组进行逆向排序并保持索引关系\r\nksort            对数组按照键名排序\r\nkrsort            对数组按照键名逆向排序\r\nusort            使用用户自定义的比较函数对数组中的值进行排序\r\nuksort            使用用户自定义的比较函数对数组中的键名进行排序\r\nuasort            使用用户自定义的比较函数对数组中的值进行排序并保持索引关联\r\nnatsort            用用“自然排序”算法对数组排序\r\nnatcasesort        用“自然排序”算法对数组进行不区分大小写字母的排序\r\narray_multisort 对多个数组或多维数组进行排序\r\nshuffle            将数组打乱\r\n    引用传递参数，返回bool值。\r\n    重新赋予索引键名，删除原有键名\r\n\r\n//差集\r\narray_udiff_assoc   带索引检查计算数组的差集，用回调函数比较数据\r\narray_udiff_uassoc  带索引检查计算数组的差集，用回调函数比较数据和索引\r\narray_udiff         用回调函数比较数据来计算数组的差集\r\narray_diff_assoc    带索引检查计算数组的差集\r\narray_diff_key      使用键名比较计算数组的差集\r\narray_diff_uassoc   用用户提供的回调函数做索引检查来计算数组的差集\r\narray_diff_ukey     用回调函数对键名比较计算数组的差集\r\narray_diff          计算数组的差集\r\n//交集\r\narray_intersect_assoc 带索引检查计算数组的交集\r\narray_intersect_key 使用键名比较计算数组的交集\r\narray_intersect_uassoc 带索引检查计算数组的交集，用回调函数比较索引\r\narray_intersect_ukey 用回调函数比较键名来计算数组的交集\r\narray_intersect 计算数组的交集\r\narray_key_exists 用回调函数比较键名来计算数组的交集\r\narray_uintersect_assoc 带索引检查计算数组的交集，用回调函数比较数据\r\narray_uintersect 计算数组的交集，用回调函数比较数据\r\n\r\nextract($arr [,$type [,$prefix]])   从数组中将变量导入到当前的符号表(接受结合数组$arr作为参数并将键名当作变量名，值作为变量的值)\r\ncompact($var [,...])   建立一个数组，包括变量名和它们的值(变量名成为键名而变量的内容成为该键的值)\r\n\r\n\r\n\r\n\r\n/* 【伪类型】 */\r\nmixed        说明一个参数可以接受多种不同的（但并不必须是所有的）类型。\r\nnumber        说明一个参数可以是 integer 或者 float。\r\ncallback    回调函数\r\nvoid        void作为返回类型意味着函数的返回值是无用的。\r\n            void作为参数列表意味着函数不接受任何参数。\r\n\r\n\r\n/* 【数据库操作】 */\r\n#连接认证\r\nmysql_connect        连接并认证数据库\r\n#发送SQL语句，接收执行结果\r\nmysql_query            发送SQL语句\r\n        仅对select, show, explain, describe语句执行成功返回一个资源标识符，其他语句成功返回true。执行失败均返回false。\r\n#处理结果\r\nmysql_fetch_assoc    从结果集中取得一行作为关联数组\r\n        每次只取回一条，类似each\r\n    结果集中记录指针\r\nmysql_fetch_row        从结果集中取得一行作为枚举数组\r\nmysql_fetch_array    从结果集中取得一行作为关联数组，或数字数组，或二者兼有\r\n    array mysql_fetch_array ( resource $result [, int $ result_type  ] )\r\n    可选参数result_type可选值为：MYSQL_ASSOC，MYSQL_NUM 和 MYSQL_BOTH(默认)\r\nmysql_free_result    释放结果内存\r\n#关闭链接\r\nmysql_close            关闭连接\r\n\r\n\r\n/* 【类和对象】 */\r\n# 成员：\r\n    类成员：类常量、静态属性、静态方法\r\n    对象成员：非静态属性、非静态方法\r\n    # 除此外，类不能包含任何其他东西！！！\r\n\r\n# 类名、方法名、属性名均不区分大小写\r\n# $this代表本对象，self代表本类，parent代表父类\r\n# 类和函数均可被事先编译（仅作为最外层时）\r\n# 类的定义必须在单一的PHP区块内，不能被多个PHP标签分割\r\n\r\n// 构造方法\r\n- 具有构造函数的类会在每次创建新对象时先调用此方法\r\nvoid __construct([ mixed $args [, $... ]] )\r\n- 构造方法所需参数由new实例化对象时，给类增加参数值。\r\n- 构造方法也可以被手动调用。\r\n- 5.3.3版本以前，支持于类名同名的方法作为构造方法。\r\n- 两种冲突时，__construct 优先\r\n\r\n// 析构方法\r\n- 析构函数会在到某个对象的所有引用都被删除或者当对象被显式销毁时执行。\r\nvoid __destruct( void )\r\n# 作用：释放对象所占用的资源\r\n# 调用的时机 \r\n    - 脚本结束时所有资源均被释放，包括对象\r\n    - 手动删除对象时\r\n    - 保存对象的变量被赋予新值时(任何值，包括null)\r\n    - 在使用exit()终止脚本运行时也会被调用\r\n\r\n// 静态成员(static关键字)\r\n    - 声明类成员或方法为static，就可以不实例化类而直接访问。\r\n    - 静态成员（属性或方法）均属于类，故不能通过$this或->访问。\r\n    - 静态成员是所有对象共享，属于类。\r\n    - 静态成员用类调用，非静态成员用对象调用。\r\n# 静态属性\r\n    - 静态属性不可以由对象通过->操作符来访问。\r\n    - 静态属性只能被初始化为一个字符值或一个常量，不能使用表达式。 所以你可以把静态属性初始化为整型或数组，但不能指向另一个变量或函数返回值，也不能指向一个对象。\r\n# 静态方法\r\n    - 由于静态方法不需要通过对象即可调用，所以伪变量$this在静态方法中不可用。\r\n    - 用::方式调用一个非静态方法会导致一个E_STRICT级别的错误。\r\n\r\n// 访问解析操作符(::)\r\n    - 可以用于访问静态成员、方法和常量，还可以用于覆盖类中的成员和方法。 \r\n    - 当在类的外部访问这些静态成员、方法和常量时，必须使用类的名字。 \r\n    - self 和 parent 这两个特殊的关键字是用于在类的内部对成员或方法进行访问的。\r\n\r\n// 访问辨析\r\n- 对象成员，内部通过$this指定，外部通过对象名指定，均用->访问，访问属性时不需加$。\r\n    对象名->属性名    对象名->方法名()    $this->属性名        $this->方法名()\r\n- 类成员，内部通过self或parent指定，外部通过类名指定，均用::访问，访问属性时需加$。\r\n    类名::$属性名    类名::方法名()        self::$属性名        self::方法名()\r\n- 特殊：也可以通过对象访问类成员。（不建议）\r\n    对象名::$类属性名    $this::$类属性名    对象名::$类方法名()    $this::类方法名()\r\n# 对象成员访问用->，类成员访问用::\r\n\r\n- 无论是静态方法还是非静态方法，均可通过类或对象进行访问。\r\n- 静态属性通过类访问，静态方法通过对象访问。\r\n- 只有使用对象调用非静态方法时，$this才可以使用！\r\n- 静态方法不可使用$this。\r\n- 类可以调用对象方法，但注意方法内不能有$this。\r\n- 非静态方法可以调用静态属性或静态方法，反之不可以。\r\n\r\n// 类常量\r\n- 常量的值将始终保持不变。\r\n- 在定义和使用常量的时候不需要使用$符号。\r\n- 常量的值必须是一个定值，不能是变量，类属性或其它操作（如函数调用）的结果。\r\n# 定义：const 常量名 = 常量值;\r\n- 不需要加public等访问修饰限定符\r\n- 类常量属于类，使用类访问，类名::类常量 或 self::类常量\r\n\r\n// 自动加载对象\r\n- 在试图使用尚未被定义的类时自动调用 __autoload 函数\r\n- 自动加载使用到的类名文件（根据类名找相应名称的文件，故需类名与类文件名一致）\r\n- 每个需要加载类的文件都需要存在__autoload函数\r\n- 将__autoload函数写入单独的文件，每个需要用到类的文件再require该函数文件\r\n- __autoload 参数是类名\r\nfunction __autoload($class_name) {\r\n    require_once $_SERVER[\"DOCUMENT_ROOT\"] . \"/class/$class_name.php\";\r\n}\r\n    // $_SERVER[\"DOCUMENT_ROOT\"] 当前运行脚本所在的文档根目录\r\n- 可以通过类名，来推导出类所在的文件名！\r\n- 如果一个项目存在多个自动加载函数时，定义一个可以完成加载的普通函数，并在函数之前使用spl_autoload_register注册该函数。\r\n# spl_autoload_register\r\n- 注册__autoload()函数\r\nbool spl_autoload_register ([ callback $autoload_function ] )\r\n- 可以注册多个自动加载函数，先注册的先执行\r\n- 一旦注册自动加载函数，__autoload就失效。\r\n- 注册函数时，参数为函数名（注意加引号）；注册方法时，参数为数组\r\n# 注册类或对象的方法为自动加载方法时，参数需为数组：\r\nspl_autoload_register(array(__CLASS__, \'__autoload\'));\r\n__CLASS__表示当前类名，若是对象可用$this，详细见手册\r\n\r\n// 序列化（串行化）\r\n# 数据传输均是字符串类型\r\n# 除了资源类型，均可序列化\r\n# 序列化在存放数据时，会存放数据本身，也会存放数据类型\r\n作用：1.在网络传输数据时；2.为了将数组或对象放在磁盘时\r\n# 序列化\r\nserialize        产生一个可存储的值的表示\r\nstring serialize ( mixed $value )\r\n- 返回字符串，此字符串包含了表示value的字节流，可以存储于任何地方。\r\n- 有利于存储或传递 PHP 的值，同时不丢失其类型和结构。\r\n# 反序列化\r\nunserialize        从已存储的表示中创建PHP的值\r\nmixed unserialize ( string $str [, string $callback ] )\r\n- 对单一的已序列化的变量进行操作，将其转换回PHP的值。\r\n\r\n\r\n# 文件的读写操作\r\n- file_put_contents        将一个字符串写入文件\r\nint file_put_contents($file, $data [,$flags])\r\n    $flags：FILE_USE_INCLUDE_PATH(覆盖)，FILE_APPEND(追加)\r\n- file_get_contents        将整个文件读入一个字符串\r\nstring file_get_contents($file [, bool $use_include_path [,int $offset [,int $maxlen]]])\r\n\r\n# 对象序列化\r\n- 只能序列化对象内部的数据，即非静态属性。\r\n# 需在反序列化对象之前加载类，也可以触发自动加载机制。\r\n\r\n__sleep        序列化需序列化的属性。\r\n        - 提交未提交的数据，或类似的清理操作，部分串行化对象。\r\n        - 返回一个包含对象中所有应被序列化的变量名称的数组\r\n__wakeup    反序列化时，预先准备对象需要的资源\r\n        - 重新建立数据库连接，或执行其它初始化操作\r\n    public function __sleep() {\r\n        return array(\'server\', \'username\', \'password\', \'db\');\r\n    }\r\n    public function __wakeup() {\r\n        $this->connect();\r\n    }\r\n\r\n// 对象继承\r\nclass 子类名 extends 父类 {}\r\n如果一个对象是子类的对象，那么同时也是父类的对象。\r\n单继承：一个类只能继承一个父类，不能同时继承多个类。但一个父类可以被多个子类继承。\r\n\r\ninstanceof    判断某对象是否为某类的对象\r\n    对象名 instanceof 类名\r\n\r\n// 访问控制\r\npublic        公有的（继承链、本类、外部均可访问）\r\nprotected    保护的（仅继承链、本类可访问）\r\nprivate        私有的（仅本类可访问）\r\n根据成员定义位置、访问位置判断。\r\n# 兼容性问题\r\n- 声明属性时，var关键字声明的默认为public权限\r\n- 声明方法时，省略访问修饰符，默认为public权限\r\n\r\n// 重写 override\r\n$this代表本对象，被谁调用，就代表哪个对象。\r\n- 继承时，子类成员名于父类成员名发生冲突，则子类成员会重写父类成员。\r\n- 属性和方法均可被子类重写。\r\n- 当父类的方法或属性已经不满足子类的需求，则需要重写。\r\n- 也可能因为命名不规范导致重写。\r\n\r\n私有属性不能被重写，每个私有属性都会被记录。在记录属性名的同时，还会记录类。\r\n\r\n如果有内置函数被重写，则可调用父类方法。如调用父类构造方法parent::__construct()\r\n\r\n# 重写限制\r\n访问限制：\r\n    子类的成员的访问控制必须相等或弱于父类。\r\n方法参数限制：\r\n    参数数量必须相同，参数名可不同。\r\n\r\n# $this确定原则\r\n$this为调用该方法的对象，表示该方法的执行环境对象。\r\n    - 对象调用\r\n    - 环境的传递。如果当前调用时，不能确定$this的值(静态调用)，此时静态调用所处对象环境会传递到被调用的方法内。\r\n$this并非永远代表本对象，而是由方法的执行环境决定。\r\n\r\n# final\r\n如果父类中的方法被声明为final，则子类无法覆盖（重写）该方法。\r\n如果一个类被声明为final，则不能被继承。\r\n但加有final关键字的类依旧能被实例化！\r\n# 抽象类\r\n关键字：abstract\r\n抽象类不能直接被实例化，必须先继承该抽象类，然后再实例化子类。\r\n抽象类中至少要包含一个抽象方法。非抽象类不能包含抽象方法。\r\n如果类方法被声明为抽象的，那么其中就不能包括具体的功能实现。抽象方法不能包含大括号及方法体。\r\n继承一个抽象类的时候，子类必须实现抽象类中的所有抽象方法。\r\n    即，子类必须重写抽象父类中的所有抽象方法。\r\n另外，这些方法的可见性必须和抽象类中一样（或者更为宽松）。\r\n    即，如果抽象类中某个抽象方法被声明为protected，那么子类中实现的方法就应该声明为protected或者public，而不能定义为private。\r\n- 抽象类的子类中的普通方法执行方式和其他类相同。\r\n- 作用：\r\n    1. 继承，为扩展类，统一公共操作。\r\n    2. 限制结构（规范）。规范子类的结构。\r\n\r\n// 接口\r\n关键字：interface\r\n- 对象提供的与对象交互的方式就是接口。\r\n- 使用接口可以指定某个类必须实现哪些方法，但不需要定义这些方法的具体内容。\r\n- 通过interface来定义一个接口，就像定义一个标准的类一样，但其中定义所有的方法都是空的。 \r\n- 接口中定义的所有属性和方法都必须是public，可省略public关键字。\r\n- 接口中也可以定义常量(const)。接口常量和类常量的使用完全相同。\r\n    可以用::访问。接口名::常量名，实现类::常量名。\r\n    它们都是定值，可以被子类或子接口使用，但不能修改。\r\n- 接口不能定义属性！\r\n# 定义接口\r\ninterface 接口名 {\r\n    接口内容（公共方法声明的集合）\r\n}\r\n# 接口实现\r\n- 要实现一个接口，可以使用implements操作符。\r\n- 类中必须实现接口中定义的所有方法，否则会报一个fatal错误。\r\n- 如果要实现多个接口，可以用逗号来分隔多个接口的名称。\r\n- 实现多个接口时，接口中的方法不能有重名。\r\n- 接口也可以继承，通过使用extends操作符。\r\nclass 类名 implements 接口名 {\r\n    接口方法的实现\r\n}\r\n# 注意\r\n    1. 类与抽象类之间是继承关系，类与接口之间是实现关系。\r\n    2. 类与抽象类是单继承，类与接口是多实现。\r\n    3. 接口不是类，限制类的结构。\r\n    4. 接口与接口之间是多继承。用extends关键字。\r\n        interface I_C extends I_A, I_B {}\r\n\r\n// 静态延迟绑定\r\nself::，代表本类(当前代码所在类)\r\n    永远代表本类，因为在类编译时已经被确定。\r\n    即，子类调用父类方法，self却不代表调用的子类。\r\nstatic::，代表本类(调用该方法的类)\r\n    用于在继承范围内引用静态调用的类。\r\n    运行时，才确定代表的类。\r\n    static::不再被解析为定义当前方法所在的类，而是在实际运行时计算的。\r\n\r\n// 对象的遍历（迭代）\r\n- 对象通过属性保存数据，故遍历对象的属性。\r\n- foreach语言结构，获得属性名和属性值。\r\n    foreach ($obj as $p_name => $p_value) {}\r\n# 自定义遍历(迭代器Iterator)\r\nIterator - 可在内部迭代自己的外部迭代器或类的接口\r\nIterator::current    — 返回当前元素\r\nIterator::key        — 返回当前元素的键\r\nIterator::next        — 向前移动到下一个元素\r\nIterator::rewind    — 返回到迭代器的第一个元素\r\nIterator::valid        — 检查当前位置是否有效\r\n\r\n# 对象的克隆\r\n//对象之间的传值是[引用]传递。\r\n克隆：新对象 = clone 旧对象\r\n    - 所有的引用属性仍然会是一个指向原来的变量的引用。 \r\n__clone()方法在对象被克隆时自动调用。\r\n注意：构造方法对应实例化(new)，克隆方法对应克隆(clone)。\r\n\r\n// 单例模式\r\n#三私一公\r\n单例模式（Singleton）用于为一个类生成一个唯一的对象。最常用的地方是数据库连接。使用单例模式生成一个对象后，该对象可以被其它众多对象所使用。\r\n# 防止一个类被实例化多次\r\nclass MySQLDB {\r\n    private static $instance = null; // 存类实例在此属性中\r\n    // 构造方法声明为private，防止直接创建对象\r\n    private function __construct() {}\r\n    public static function getInstance() {\r\n        if(! self::$instance instanceof static) {\r\n            self::$instance = new static;\r\n        }\r\n        return self::$instance;\r\n    }\r\n    private function __clone() {} // 阻止用户复制对象实例\r\n}\r\n\r\n// 魔术方法\r\n__construct        构造方法\r\n__destruct        析构方法\r\n__clone            克隆对象\r\n__sleep            序列化对象\r\n__wakeup        反序列化对象\r\n__autoload        自动加载，使用类但未找到时\r\n\r\n__toString        对象被当作字符串使用时\r\n__invoke        当尝试以调用函数的方式调用一个对象时\r\n\r\n# 重载 overload\r\n指动态地\"创建\"类属性和方法\r\n用户可以自由的为对象添加额外的属性，该特性就是重载。\r\n所有的重载方法都必须被声明为public。\r\n当调用当前环境下未定义或不可见的类属性或方法时，重载方法会被调用。\r\n重载相关魔术方法的参数都不能通过引用传递。\r\n# 属性重载\r\n- 处理不可访问的属性\r\n属性重载只能在对象中进行。\r\n# 属性重载对于静态属性无效\r\n在静态方法中，这些魔术方法将不会被调用。所以这些方法都不能被声明为static。\r\n__set        在给不可访问的属性赋值时\r\n    public void __set(string $name, mixed $value)\r\n    作用：批量管理私有属性，间接保护对象结构\r\n__get        读取不可访问的属性的值时\r\n    public mixed __get(string $name)\r\n__isset        当对不可访问的属性调用isset()或empty()时\r\n    public bool __isset(string $name)\r\n__unset        当对不可访问的属性调用unset()时\r\n    public void __unset(string $name)\r\n# 方法重载\r\n- 处理不可访问的方法\r\n__call            当调用一个不可访问的非静态方法（如未定义，或者不可见）时自动被调用\r\n        public mixed __call(string $name, array $arguments)\r\n__callStatic    当在调用一个不可访问的静态方法（如未定义，或者不可见）时自动被调用\r\n        public static mixed __callStatic(string $name, array $arguments)\r\n# $name参数是要调用的方法名称。$arguments参数是一个数组，包含着要传递给方法的参数。\r\n\r\n// 类型约束\r\n函数的参数可以指定只能为对象或数组\r\n限定为对象则在形参前加类名，限定为数组则在形参前加array\r\n类型约束允许NULL值\r\n类型约束不只是用在类的成员方法里，也能使用在函数里。 \r\n\r\n// 三大特性\r\n封装：隐藏内部是吸纳，仅开发接口。\r\n继承：一个对象的成员被另一个对象所使用。语法上体现为代码的共用。\r\n多态：多种形态。\r\n\r\n// 类与对象·关键字\r\nthis        代表本对象\r\npublic        公有的（继承链、本类、外部均可访问）\r\nprotected    保护的（仅继承链、本类可访问）\r\nprivate        私有的（仅本类可访问）\r\nparent::    代表父类\r\nself::        代表本类(当前代码所在类)\r\nstatic::    代表本类(调用该方法的类)\r\nstatic        静态成员（属性、方法），所有对象均可使用，外部也可直接使用或修改，静态方法不可访问非静态成员\r\nfinal        方法用final不可被子类重载，类用final不可被继承（方法、类）\r\nconst        类常量（属性）\r\nabstract    抽象类\r\ninterface    接口\r\nextends        类继承(子接口继承接口、其他普通类继承)\r\nimplements    接口实现（类实现接口、抽象类实现借口）（对接口的实现和继承均可有多个）\r\nIterator    内置接口（迭代）\r\nclone        克隆\r\ninstance    实例\r\ninstanceof    某对象是否属于某类\r\n\r\n/* 【类与对象相关函数】 */\r\nclass_alias([$original [,$alias]])  给类取别名\r\nclass_exists($class [,$autoload])   检查类是否已定义\r\ninterface_exists($interface [,$autoload])   检查接口是否已被定义\r\nmethod_exists($obj, $method)检查类的方法是否存在\r\nproperty_exists($class, $property)  检查对象或类是否具有该属性\r\nget_declared_classes(void)  返回由已定义类的名字所组成的数组\r\nget_declared_interfaces(void)   返回一个数组包含所有已声明的接口\r\nget_class([$obj])       返回对象的类名\r\nget_parent_class([$obj])    返回对象或类的父类名\r\nget_class_methods($class)   返回由类的方法名组成的数组\r\nget_object_vars($obj)   返回由对象属性组成的关联数组\r\nget_class_vars($class)  返回由类的默认属性组成的数组\r\nis_a($obj, $class) 如果对象属于该类或该类是此对象的父类则返回TRUE\r\nis_subclass_of($obj, $class)    如果此对象是该类的子类，则返回TRUE\r\nget_object_vars($obj)   返回由对象属性组成的关联数组\r\n\r\n\r\n// 常用类\r\n# PHP手册 -> 预定义类\r\nClosure        闭包类，匿名函数对象的final类\r\nstdClass    标准类，通常用于对象类保存集合数据\r\n__PHP_Incomplete_Class        不完整类，当只有对象而没有找到类时，则该对象被认为是该类的对象\r\nException    异常类\r\nPDO            数据对象类\r\n\r\n// 魔术常量\r\n__DIR__            文件所在的目录\r\n__LINE__        文件中的当前行号 \r\n__FILE__        文件的完整路径（绝对路径）和文件名\r\n\r\n__CLASS__        类的名称\r\n__METHOD__        类的方法名，包含类名和方法名\r\n__FUNCTION__    函数名称，用在方法内只表示方法名\r\n\r\n// 反射机制 Reflection\r\n作用：1. 获取结构信息        2. 代理执行\r\nReflectionClass 报告一个类的有关信息\r\nReflectionMethod 报告一个方法的有关信息\r\nReflectionClass::export    输出类结构报告\r\n# 代理执行\r\n实例化 ReflectionFunction 类的对象\r\n    $f = new ReflectionFunction(\'func\');    // func为函数func($p)\r\n    $f->invoke(\'param\');\r\n\r\n\r\n/* 页面跳转 */\r\n// PHP\r\nheader(\'Loacation: url\')\r\nheader()执行完毕后，后面的代码也会继续执行，故需在该语句后加die结束\r\n无法给出提示，直接跳转\r\n// JS方法\r\nlocation.href = url\r\n// HTML\r\n<meta http-equiv=\"Refresh\" content=\"表示时间的数值; url=要跳转的URI\"> \r\n\r\n/* 【Cookie】 */\r\ncookie是一种在远程浏览器端储存数据并以此来跟踪和识别用户的机制。\r\ncookie是HTTP标头的一部分，因此setcookie()函数必须在其它信息被输出到浏览器前调用，这和对header()函数的限制类似。可以使用输出缓冲函数来延迟脚本的输出，直到按需要设置好了所有的cookie或者其它HTTP标头。\r\n\r\n// 新增\r\nsetcookie    新增一条cookie信息\r\nsetcookie($name [,$value [,$expire [,$path [,$domain [,$secure [,$httponly]]]]]])\r\n#注意：setcookie()函数前不能有输出！除非开启ob缓存！\r\n# 参数说明\r\n$name    - cookie的识别名称\r\n    使用$_COOKIE[\'name\']抵用名为name的cookie\r\n$value    - cookie值，可以为数值或字符串，此值保存在客户端，不要用来保存敏感数据\r\n    假定$name参数的值为\'name\'，则$_COOKIE[\'name\']就可取得该$value值\r\n$expire    - cookie的生存期限（Unix时间戳，秒数）\r\n    如果$expire参数的值为time()+60*60*24*7则可设定cookie在一周后失效。如果未设定该参数，则会话后立即失效。\r\n$path    - cookie在服务器端的指定路径。当设定该值时，服务器中只有指定路径下的网页或程序可以存取该cookie。\r\n    如果该参数值为\'/\'，则cookie在整个domain内有效。\r\n    如果设为\'/foo/\'，则cookie就在domain下的/foo/目录及其子目录内有效。\r\n    默认值为设定cookie的当前目录及其子目录。\r\n$domain    - 指定此cookie所属服务器的网址名称，预设是建立此cookie服务器的网址。\r\n    要是cookie能在如abc.com域名下的所有子域都有效，则该参赛应设为\'.abc.com\'。\r\n$secure    - 指明cookie是否仅通过安全的HTTPS连接传送中的cookie的安全识别常数，如果设定该值则代表只有在某种情况下才能在客户端与服务端之间传递。\r\n    当设成true时，cookie仅在安全的连接中被设置。默认值为false。\r\n\r\n// 读取\r\n- 浏览器请求时会携带当前域名下的所有cookie信息到服务器。\r\n- 任何从客户端发送的cookie都会被自动存入$_COOKIE全局数组。\r\n- 如果希望对一个cookie变量设置多个值，则需在cookie的名称后加[]符号。即以数组形态保存多条数据到同一变量。\r\n    //设置为$_COOKIE[\'user\'][\'name\']，注意user[name]的name没有引号\r\n    setcookie(\'user[name]\', \'shocker\');\r\n- $_COOKIE也可以为索引数组\r\n\r\n// 删除\r\n方法1：将其值设置为空字符串\r\n    setcookie(\'user[name]\', \'\');\r\n方法2：将目标cookie设为“已过期”状态。\r\n    //将cookie的生存时间设置为过期，则生存期限与浏览器一样，当浏览器关闭时就会被删除。\r\n    setcookie(\'usr[name]\', \'\', time()-1);\r\n\r\n# 注意：\r\n1. cookie只能保存字符串数据\r\n2. $_COOKIE只用于接收cookie数据，不用于设置或管理cookie数据。\r\n    对$_COOKIE进行操作不会影响cookie数据。\r\n    $_COOKIE只会保存浏览器在请求时所携带的cookie数据。\r\n3. cookie生命周期：\r\n    临时cookie：浏览器关闭时被删除\r\n    持久cookie：$expire参数为时间戳，表示失效时间。\r\n4. 有效目录\r\n    cookie只在指定的目录有效。默认是当前目录及其子目录。\r\n    子目录的cookie在其父目录或同级目录不可获取。\r\n5. cookie区分域名\r\n    默认是当前域名及其子域名有效。\r\n6. js中通过document.cookie获得，类型为字符串\r\n7. 浏览器对COOKIE总数没有限制，但对每个域名的COOKIE数量和每个COOKIE的大小有限，而且不同浏览器的限制不同。\r\n\r\n/* 【session】 */\r\n1. 开启session机制\r\n    session_start()\r\n    注意：session_start()函数前不能有输出！除非开启ob缓存。\r\n2. 操作数据\r\n    对$_SESSION数组进行操作\r\n3. 浏览器端保存SessionID，默认为当前域名下的所有目录及其子目录生效。即默认设置cookie的path值为\'/\'\r\n4. 服务器保存session数据\r\n    默认保存方式：每个会话都会生成一个session数据文件，文件名为：sess_加SessionID\r\n5. session可以存储除了资源以外的任何类型数据。\r\n    数据被序列化后再保存到文件中。\r\n6. $_SESSION的元素下标不能为整型！\r\n    因为只对元素值进行序列化。\r\n    元素内的数组下标无此要求。\r\n7. 生存周期\r\n    默认是浏览器关闭\r\n        因为浏览器保存的cookie变量SessionID是临时的\r\n        但是服务器端的session数据文件不一定消失（需要等待session的垃圾回收机制来处理）\r\n    可以延长cookie中PHPSESSID变量的生命周期。（不推荐）\r\n    php.ini配置session.gc_maxlifetime\r\n8. 删除数据\r\n    $_SESSION变量在脚本结束时依然会消失。开启session机制时会造出$_SESSION变量。\r\n    $_SESSION与保存session数据的文件是两个空间。\r\n    unset($_SESSION[\'key\'])只是删除数组内的该元素，不会立即相应到保存session数据的文件上。\r\n        等到脚本结束，才会将$_SESSION的数据写入到该文件中。\r\n    session_destroy()    销毁保存session数据的文件，也不会对该文件写入内容。\r\n        并不删除$_SESSION变量，unset或脚本结束才会删除该变量。\r\n    如何完全删除一个session？需删除3部分\r\n        unset($_SESSION);    \r\n            删除$_SESSION变量后，数据文件并未被改动。如果单独使用unset，则需先置空$_SESSION = array()\r\n        session_destroy();\r\n        setcookie(\'PHPSESSID\', \'\', time()-1); //保险做法是将其生命周期失效\r\n    整个脚本周期内，只对数据文件读一次、写一次。\r\n\r\n// 重写session的存储机制\r\n# session存储方式\r\nsession.save_handler = user|files|memcache\r\n# 因数据文件过多导致的问题，可通过分子目录保存进行解决\r\nPHP配置文件下session.save_path选项，并需手动创建数据存放目录。\r\n在该配置选项前加层级。分布子目录的原则，利用会话ID的相应字母来分配子目录。仍需手动创建子目录。\r\nsession.save_path = \"2; F:/PHPJob/Temp\"\r\n# 多服务器数据共享问题\r\n# 数据存储操作：\r\n    初始化$open、释放资源$close、读$read、写$write、销毁存储介质$destroy(调用session_destroy时触发该操作)、垃圾回收$gc\r\n# 会话ID的长度可变。不同的设置方式导致不同长度的会话ID。\r\nsession.hash_function   允许用户指定生成会话ID的散列算法。\r\n    \'0\' 表示MD5（128 位），\'1\' 表示SHA-1（160 位）。\r\nsession.hash_bits_per_character    允许用户定义将二进制散列数据转换为可读的格式时每个字符存放多少个比特。\r\n    可能值为 \'4\'（0-9，a-f），\'5\'（0-9，a-v），以及 \'6\'（0-9，a-z，A-Z，\"-\"，\",\"）。\r\n    总hash长度为128bit，会话ID长度为128/可能值，4->32, 5->26, 6->22\r\n# 自定义数据存储操作方法\r\n# 注意：不用关心PHP如何序列化、反序列化、如何得到数据和写入数据，只做与数据存储相关的操作\r\nsession_set_save_handler    设置用户自定义的会话数据存储函数\r\n    bool session_set_save_handler(callable $open, callable $close, callable $read, callable $write, callable $destroy, callable $gc)\r\n执行顺序：open,  close, read, write, destroy, gc\r\n# 先设置处理器，再开启会话\r\n\r\n# 常用函数\r\nsession_start        开启或恢复会话机制\r\nsession_id            获取或设置当前会话ID\r\nsession_destroy        销毁当前会话的所有数据（销毁数据文件）\r\nsession_name        获取或设置当前会话名称（cookie变量名，默认为PHPSESSID）\r\nsession_save_path    获取或设置当前会话数据文件保存路径\r\nsession_set_save_handler    设置用户自定义的会话数据存储函数\r\nsession_unset        释放所有会话变量(清空$_SESSION数组元素)\r\nsession_encode        将当前会话数据编码为一个字符串\r\nsession_decode        将字符串解译为会话数据\r\nsession_write_close    写入会话数据并关闭会话\r\nsession_register_shutdown    关闭会话\r\nsession_set_cookie_params    设置会话cookie变量，必须在session_start()前使用。\r\n    session_set_cookie_params(0,\"/webapp/\"); //设置session生存时间\r\nsession_get_cookie_params    获取会话cookie变量。返回包含当前会话cookie信息的数组\r\n\r\n# 配置php.ini\r\nini_set($varname, $newvalue);\r\n    //该函数的配置只对当前脚本生效\r\n    //并非所有php.ini设置均可用该函数设置\r\nini_get($varname)   //获取某配置项信息\r\nini_get_all([str $extension])   //返回所有配置项信息的数组\r\n\r\n# session扩展配置\r\nsession.name    指定会话名以用作cookie的名字。只能由字母数字组成，默认为PHPSESSID。\r\nsession.save_path   定义了传递给存储处理器的参数。\r\n    如果选择了默认的files文件处理器，则此值是创建文件的路径。默认为/tmp。\r\n    可选的N参数来决定会话文件分布的目录深度。\r\n    要使用N参数，必须在使用前先创建好这些目录。在ext/session目录下有个小的shell脚本名叫mod_files.sh可以用来做这件事。\r\n    如果使用了N参数并且N大于0，那么将不会执行自动垃圾回收。\r\nsession.save_handler    定义了来存储和获取与会话关联的数据的处理器的名字。默认为files。\r\n    如果用户自定义存储器，则该值改为user。\r\n    ini_set(\'session.save_handler\', \'user\');//此设置只针对当前脚本生效。\r\nsession.auto_start  指定会话模块是否在请求开始时自动启动一个会话。默认为 0（不启动）。\r\nsession.gc_probability与session.gc_divisor合起来定义了在每个会话初始化时启动gc（garbage collection 垃圾回收）进程的概率。此概率用 gc_probability/gc_divisor 计算得来。例如 1/100 意味着在每个请求中有 1% 的概率启动gc进程。session.gc_divisor默认为100。session.gc_probability默认为1。\r\n\r\n\r\n/* 【图片生成与处理】 */GD库\r\n// 画布生成\r\n# 新建画布\r\nimagecreate             新建一个基于调色板的图像\r\n    resource imagecreate(int $x_size, int $y_size)\r\nimagecreatetruecolor    新建一个真彩色图像\r\n# 基于已有文件或URL创建画布\r\nimagecreatefromgd2      从GD2文件或URL新建一图像\r\nimagecreatefromgd2part  从给定的GD2文件或URL中的部分新建一图像\r\nimagecreatefromgd       从GD文件或URL新建一图像\r\nimagecreatefromgif      由文件或URL创建一个新图象\r\nimagecreatefromjpeg     由文件或URL创建一个新图象\r\nimagecreatefrompng      由文件或URL创建一个新图象\r\nimagecreatefromstring   从字符串中的图像流新建一图像\r\nimagecreatefromwbmp     由文件或URL创建一个新图象\r\nimagecreatefromxbm      由文件或URL创建一个新图象\r\nimagecreatefromxpm      由文件或URL创建一个新图象\r\n// 颜色分配\r\nimagecolorallocate          为一幅图像分配颜色\r\n    int imagecolorallocate(resource $image, int $red, int $green, int $blue)\r\nimagecolorallocatealpha     为一幅图像分配颜色 + alpha\r\nimagecolordeallocate        取消图像颜色的分配\r\nimagecolortransparent       将某个颜色定义为透明色\r\nimagecolorat            取得某像素的颜色索引值\r\nimagecolorclosest       取得与指定的颜色最接近的颜色的索引值\r\nimagecolorclosestalpha  取得与指定的颜色加透明度最接近的颜色\r\nimagecolorclosesthwb    取得与给定颜色最接近的色度的黑白色的索引\r\nimagecolorexact         取得指定颜色的索引值\r\nimagecolorexactalpha    取得指定的颜色加透明度的索引值\r\nimagecolormatch         使一个图像中调色板版本的颜色与真彩色版本更能匹配\r\nimagecolorresolve       取得指定颜色的索引值或有可能得到的最接近的替代值\r\nimagecolorresolvealpha  取得指定颜色 + alpha 的索引值或有可能得到的最接近的替代值\r\nimagecolorset           给指定调色板索引设定颜色\r\nimagecolorsforindex     取得某索引的颜色\r\nimagecolorstotal        取得一幅图像的调色板中颜色的数目\r\n// 区域填充\r\nimagefill   区域填充\r\n    bool imagefill(resource $image, int $x, int $y, int $color)\r\nimagefilledarc          画一椭圆弧且填充\r\nimagefilledellipse      画一椭圆并填充\r\nimagefilledpolygon      画一多边形并填充\r\nimagefilledrectangle    画一矩形并填充\r\nimagefilltoborder       区域填充到指定颜色的边界为止\r\nimagesettile    设定用于填充的贴图', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('35', 'ThinkPHP验证码', '35', '1423044120', '1446631548', '<!--markdown-->对于ThinkPHP验证码的使用：\r\n\r\n分三个步骤，验证码的生成，验证码的呈现，验证码的验证;\r\n\r\n1.  验证码的呈现，需要前台img标签来放置验证码：\r\n```\r\n<div class=\"control-group\">\r\n   <label class=\"control-label\" for=\"inputPassword\">验证码</label>\r\n   <div class=\"controls\">\r\n        <input class=\"code\" name=\"verify\" type=\"text\" size=\"5\" />\r\n        <span><img id=\"verifyImg\" SRC=\"__URL__/verify/\" onClick=\"fleshVerify()\" border=\"0\" alt=\"点击刷新验证码\" style=\"cursor:pointer\" align=\"absmiddle\"></span>\r\n   </div>\r\n</div>\r\n```\r\n> 然后需要做一些验证码刷新的js操作；或者什么的\r\n```\r\n<script language=\"JavaScript\">\r\n  $(\"#verifyImg\").click(function(){fleshVerify();});\r\n  function fleshVerify(type){ \r\n    //重载验证码\r\n    var timenow = new Date().getTime();\r\n    if (type){\r\n      $(\'#verifyImg\').attr(\"src\", \'__URL__/verify/adv/1/\'+timenow);\r\n    }else{\r\n      $(\'#verifyImg\').attr(\"src\", \'__URL__/verify/\'+timenow);\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\n2. 验证码的生成，这里是后台验证码生成情况，前台需要请求这个操作才能生成验证码：\r\n```\r\npublic function verify(){\r\n    $type    =   isset($_GET[\'type\'])?$_GET[\'type\']:\'gif\';\r\n    import(\"ORG.Util.Image\");\r\n    Image::buildImageVerify(4,1,$type);\r\n}\r\n```\r\n\r\n3. 最后是后台的验证码验证：\r\n```\r\nprivate function checkverify(){\r\n        $cv = md5(trim($this->_param(\'verify\')));  // 表单提交 需要md5，因为生成的验证码就是这样的\r\n        $sv = session(\'verify\');  // 真正的验证码\r\n        if($cv != $sv){\r\n            $this->error(\"验证码错误！\");exit;\r\n        }\r\n}\r\n```\r\n\r\n> 参考网站：http://www.cleey.com/blog/single/id/336.html', '0', '1', null, 'post', 'publish', null, '2', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('38', '前端工作常常会用到的一些经验技巧', '38', '1409900100', '1446707434', '<!--markdown-->> 去除字符串所有空格\r\n```\r\nvar ss=\" fsd fsdaf 23 \"; \r\nss.replace(/[ ]/g,\"\");\r\n```\r\n> 去除a标签点击后的虚线边框\r\n```\r\n$(\'a\').focus(function(){this.blur()});\r\n```\r\n> IE6/7下radio不能选中解决:添加name,可为空或其它值\r\n```\r\n<input type=\"radio\" name=\"\" id=\"rainp\" />\r\n```\r\n> 最简单的把字符串转换成数值: -0(不能 +0) \r\n```\r\nvar a = \'123.45\'; var b = a - 0;\r\n```\r\n> div中设置文字竖直居中方法：单行文字居中使用line-height方法，将文本的line-height设为与容器的height相等\r\n``` \r\nheight:100px; \r\nline-height:100px;\r\n```\r\n> 多行文字居中使用display:table-cell再设置vertical-align进行居中对齐\r\n```\r\ndisplay:table-cell; \r\nvertical-align:middle\r\n```\r\n> 使checkbox与文字水平对齐：对style加上vertical-align:middle 如下：\r\n```\r\n<input style=\"color: red; vertical-align: middle;\" type=\"checkbox\" /> <label style=\"vertical-align: middle;\">我已阅读<label /> \r\n```\r\n> span设置宽度无效的三种解决方案\r\n1. 修改span为block类型。在span的css中增加display属性，将span设置为block类型。效果是span完全变成了一个div\r\n```\r\nspan { \r\n          background-color:#fc0; \r\n          display:block; \r\n          width:150px; \r\n       }\r\n```\r\n2. 在一的基础上再增加一个css属性float。基本满足日常需求，类似div加float\r\n```\r\nspan { \r\n           background-color:#fc0; \r\n           display:block; \r\n           float:left; \r\n           width:150px; \r\n    }\r\n```\r\n3. （完美方法，直接贴代码，原理可深度学习css）\r\n```\r\nspan { \r\n          background-color:#fc0; \r\n         display:-moz-inline-box; \r\n         display:inline-block; \r\n         width:150px; \r\n     }\r\n```\r\n> window.open打开新页面避免被浏览器拦截解决办法,用location.href的重定向功能，具体做法：\r\n```\r\nvar tmpwin = window.open(\'_blank\');\r\ntmpwin.location = newurl ;\r\n```\r\n或者\r\n```\r\nwindow.open(\'_blank\').location=\'http://www.baidu.com\';\r\n```\r\n ', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('42', '模拟GET/POST请求的工具', '42', '1446774120', '1446782050', '<!--markdown--># OSX\r\n\r\n\r\nPaw – The ultimate REST client for Mac($29.99)\r\n[http://luckymarmot.com/paw][1]\r\nPaw HTTP Client 是一款Mac上的HTTP客户端模拟测试工具，可以让Web开发者设置各种请求Header和参数，模拟发送HTTP请求，测试响应数据，支持OAuth, HTTP Basic Auth, Cookies等，这对于开发Web服务的应用很有帮助，非常实用的一款Web开发辅助工具。\r\n\r\n\r\n# windows\r\n\r\n\r\nFiddler\r\nFiddler的官方网站: [www.fiddler2.com][2]\r\n扩展阅读: [http://www.cnblogs.com/tankxiao/archive/2012/02/06/2337728.html][3]\r\nFiddler是最强大最好用的Web调试工具之一，它能记录所有客户端和服务器的http和https请求，允许你监视，设置断点，甚至修改输入输出数据. 使用Fiddler无论对开发还是测试来说，都有很大的帮助。\r\n\r\n\r\n# Chrome插件\r\n\r\n\r\nPostman\r\nPostman 是一个非常棒的Chrome扩展，提供功能强大的API & HTTP 请求调试。\r\n它能够发送任何类型的HTTP requests (GET, HEAD, POST, PUT..)，附带任何数量的参数+ headers。\r\n[http://www.getpostman.com/][4]\r\nChrome插件下载: [https://chrome.google.com/webstore/detail/postman-rest-client/fhbjgbiflinjbdggehcddcbncdddomop][5]\r\n\r\nDHC\r\n[https://www.sprintapi.com/dhcs.html][6]\r\nChrome插件下载: [https://chrome.google.com/webstore/detail/dev-http-client/aejoelaoggembcahagimdiliamlcdmfm][7]\r\n\r\nAdvanced REST client\r\nAdvanced REST Client是Chrome浏览器下的一个插件，通过它可以发送http、https、WebSocket请求。\r\nChrome插件下载: [http://chrome.google.com/webstore/detail/advanced-rest-client/hgmloofddffdnphfgcellkdfbfbjeloo][8]\r\n\r\n\r\n\r\n# 终端命令行\r\n\r\n\r\nhttpie\r\nHTTPie is a command line HTTP client, a user-friendly cURL replacement. \r\n[http://httpie.org][9]\r\n[https://github.com/jkbrzt/httpie][10]\r\n\r\n\r\n\r\n> Reference\r\n[http://segmentfault.com/q/1010000002439302][11]\r\n[http://www.v2ex.com/t/157885][12]\r\n> 参考网站\r\n[http://www.jingwentian.com/][13]\r\n\r\n\r\n  [1]: http://luckymarmot.com/paw\r\n  [2]: http://www.fiddler2.com\r\n  [3]: http://www.cnblogs.com/tankxiao/archive/2012/02/06/2337728.html\r\n  [4]: http://www.getpostman.com/\r\n  [5]: https://chrome.google.com/webstore/detail/postman-rest-client/fhbjgbiflinjbdggehcddcbncdddomop\r\n  [6]: https://www.sprintapi.com/dhcs.html\r\n  [7]: https://chrome.google.com/webstore/detail/dev-http-client/aejoelaoggembcahagimdiliamlcdmfm\r\n  [8]: http://chrome.google.com/webstore/detail/advanced-rest-client/hgmloofddffdnphfgcellkdfbfbjeloo\r\n  [9]: http://httpie.org\r\n  [10]: https://github.com/jkbrzt/httpie\r\n  [11]: http://segmentfault.com/q/1010000002439302\r\n  [12]: http://www.v2ex.com/t/157885\r\n  [13]: http://www.jingwentian.com/', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('41', '强制页面不缓存', '41', '1436088840', '1446716214', '<!--markdown-->> 对于需要权限访问的页面，当用户正常退出后点击浏览器\"后退\"再返回到此页面时，浏览器默认读取的还是客户端缓存文件导致页面上还是登录态的数据体验非常不好，所以需要防止浏览器持久化的缓存每次都向服务器请求最新的拷贝。只需要在服务器端设置cache-control头如下：\r\n```\r\n//强制不缓存\r\nheader(\"Cache-control: no-cache\");//IE\r\nheader(\"Cache-control: no-store\");//!IE\r\n```\r\n> 相关阅读：\r\nhttp://article.yeeyan.org/bilingual/17150\r\nhttp://www.iptu.net/index.php/archives/4565.iptu\r\nhttp://www.cnblogs.com/coolmanlee/archive/2012/12/06/2805030.html\r\n\r\n参考网站：http://samgui.com', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('44', '移动web资源整理', '44', '1444622220', '1446782349', '<!--markdown-->非常好的移动web资源整理： [http://www.cnblogs.com/PeunZhang/p/3407453.html#question_17][1]\r\n\r\n\r\n  [1]: http://www.cnblogs.com/PeunZhang/p/3407453.html#question_17', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('45', '移动Web前端框架 ( 移动开发框架整理 )', '45', '1429597020', '1446790955', '<!--markdown-->> 腾讯系\r\nGithub地址:  https://github.com/AlloyTeam/\r\n腾讯全端AlloyTeam团队Blog:  http://www.alloyteam.com/\r\n\r\n腾讯移动Web整体解决方案\r\n\r\n\r\nSpirit并不是一个具体的框架或者工具，但是她是移动端一系列解决方案的整合与聚拢。她是Alloyteam开发团队在移动开发项目中通过大量实践、归纳、总结提炼而成，最终沉淀下来的一个体系，真正建立一套移动Web开发的集成解决方案。\r\n\r\nSpirit 官网： http://alloyteam.github.io/Spirit/\r\n\r\nPro-腾讯移动Web前端框架\r\nBuilt with Pro: Mobile QQ\r\n演示地址: http://rawgithub.com/AlloyTeam/Pro/master/demo/index.html\r\n\r\n\r\n> 百度系\r\nhttps://github.com/baidufe\r\nhttps://github.com/gmuteam\r\nhttps://github.com/ecomfe\r\n\r\nGMU组件\r\n\r\n基于zepto的ui组件库，适用于移动端\r\n在线演示: http://gmu.baidu.com/demo/\r\n\r\n其他移动开发框架\r\n(1) Fries\r\nFries是一款稳定的HTML-CSS-JS框架，用于在实际项目和原型设计中创造类似于Android的原生UI界面。该框架包含所有的重要组件，比如Form、工具栏、列表、按钮、下拉列表及标签。它还专门针对PhoneGap进行了优化，能容易地转换为本地应用。\r\n演示地址: http://getfri.es/\r\n(2) Junior\r\nJunior为前端框架，用来构建基于HTML5的移动Web应用，外观与行为跟本地应用相似。它采用针对移动性能优化的CSS3转换，支持旋转灯箱效果，包含多样的Ratchet UI组件。整个框架使用Zepto（类似jQuery语法的轻量级移动设备js类库），且整合了backbone.js的视图和路由。Junior十分易于使用，且提供详细的文档及案例，便于学习。\r\n演示地址: http://justspamjustin.github.io/junior\r\n(3) jQuery Mobile\r\njQuery Mobile是 jQuery发布的针对手机和平板设备、经过触控优化的Web框架。它基于jQuery，在不同移动设备平台上可提供统一的用户界面。该框架基于渐近增强技术，并利用HTML5和CSS3特性。\r\n参考: http://www.csdn.net/article/2013-07-09/2816161\r\n(4) ChocolateChip-UI\r\n官网: http://www.chocolatechip-ui.com/\r\n演示: http://www.chocolatechip-ui.com/demo\r\n(5) 移动Web应用JavaScript UI库 App.js\r\nApp.js是由Kik Interactive推出的一款轻量级、开源的JS UI库，能为移动Web应用开发处理一般场景，及维护与其他JS库的兼容性提供一个强大起点。而开发者亦无需牺牲内容及性能，即可创建出足以媲美原生的移动Web应用。\r\n官网: http://code.kik.com/app/2/\r\n文档: http://code.kik.com/app/2/docs.html\r\n(6) Framework7\r\n官网：http://www.idangero.us/framework7\r\n(7) Amaze UI | 中国首个开源HTML5 跨屏前端框架\r\n官网：http://amazeui.org/\r\n(8)[Hybird App] mui (最接近原生APP体验的高性能框架)\r\n官网: http://dcloud.io/hellomui/ \r\nHelloH5+ DEMO: http://dcloud.io/helloh5/ \r\n更多示例: http://ask.dcloud.net.cn/article/90\r\n(9)[Hybird App] ionic framework ( JobDeer@easy推荐 )\r\n官网: http://ionicframework.com/\r\n基于ionic的Hybird app: 微观天下 http://fir.im/wgtx\r\n\r\n> 参考网站：http://www.jingwentian.com/t-135\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('46', '类型判断和NULL，空值检查', '46', '1441865940', '1447136513', '<!--markdown-->* PHP是一种宽松类型的编程语言，在函数中对传入的参数值的“类型”以及”值是否为空或者NULL“进行检查是不可缺少的步骤。*\r\n\r\n> 类型检查\r\n\r\n从PHP5开始，PHP允许对函数的参数进行类型约束，即可以约束参数的类型为对象，接口，数组(PHP 5.1开始)或者callable(PHP5.4起)，但是不可以约束参数类型为标量类型（如int ，string，bool），也不可以约束为Traits类型。如果不约束，默认情况下，参数的类型为mixed，即可以接受所有类型。\r\nfunction test(array $names)//正确的做法  \r\nfunction test(string $name)//错误的做法  \r\n针对特定参数类型的功能函数，在函数中对参入的参数进行类型检查是很必须(虽然我见过一些国外学者的文章，它们不推荐这么做，这么做相当于束缚了函数的功能)。\r\n在PHP中可以通过gettype和get_resource_type 两个函数得到变量的类型，它们分别返回参数的类型和资源类型的字符串，此时可以直接进行字符串比较来确定类型是否正确。另外一种方式是通过is_***系列的函数来判断变量的类型是否为指定的类型，比如is_array，is_scalar，is_resource，is_string。\r\n\r\n> 变量/常量是否定义或初始化\r\n\r\n在PHP中，变量在定义以后不需要进行初始化，它会被初始化为具有其类型的默认值，但是不推荐这么做，一般情况下最好是对变量进行显示初始化。\r\n对变量是否显式初始化可以使用”语法结构“-isset进行判断，它可以判断一个变量是否已经显式初始化。isset只有在变量”未显式赋值或者赋值为NULL“的时候返回为false，其他情况，比如值为空字符串，0等情况，它都返回true。\r\n可以使用unset来删除一个已经定义的变量。\r\nisset和unset只能是对”变量“进行判断和删除定义。如果是针对”常量“，那么就必须使用defined来判断。如果是针对”函数“，那么就必须使用function_exist()函数进行判断。\r\n\r\n> 判断变量是否为NULL\r\n\r\n在PHP中要判断一个变量是否NULL有很多方式：\r\nis_null VS isset\r\n这两个函数都可以来判断一个变量是否为NULL，它们对空字符串，0，false的认同是一样的。即is_null=! isset()。\r\n但是isset是语法结构，is_null是函数。在性能上，语法结构相对要优秀一点。所以很多地方都推荐使用isset来代替is_null的使用。\r\n== VS ===\r\n在有些情况下，推荐使用isset来判断一个变量是否为NULL。\r\n但是从语义上来说，一个变量”是否已显示初始化“和”是否为NULL“是不同的概念，在某些场景下使用isset是不合适的，比如检查一个函数的返回值是否为NULL。\r\n此时可以使用\"==\"和”===“来判断它们是否为NULL。\r\n对于\"==\"和”===“，它们直接的区别还是很大。对于\"==\"，它认同空字符串，0，false都为NULL。而对于\"===\"，只有一个变量真的为NULL，它才代表NULL。\r\n另外\"===\"相对于\"isset\"来说，性能基本接近，甚至要好点。\r\n\r\n因此综上述，判断一个变量是否为NULL最好的办法就是直接使用\"===\"，这样就不用在is_null，isset之间犹豫。其实上述的结论也同理于False的判断。\r\n\r\n> empty()函数的认识\r\n\r\n在判断变量是否为NULL时候，也会把empty这个函数拿来和isset之类的一起讨论。其实这个函数没有必要和他们进行比较，因为它代表的意思很简单，它的意思就是判断一个变量所存储的内容是否为零或者为空，而这里的空不仅仅是NULL。那么有哪些内容代表零或者空的概念呢？\"\"、0、\"0\"、NULL、FALSE、array()、var $var; 以及没有任何属性的对象都将被认为是空的，都代表了为零。\r\n如果$e是未定义或值为NULLL，$e=NULL，它肯定是空，即empty($e)=true;\r\n如果$e是int类型，$e=0，就相对于数字，0代表为零，即empty($e)=true;\r\n如果$e是string类型，$e=\"\"，相对于字符串，”“就代表为是空，即empty($e)=true;\r\n如果$e是string类型，$e=\"0\"，相对于字符串，”0“就代表为是零，即empty($e)=true;\r\n如果$e是bool类型， $e=false，相对true，false就代表为空，即empty($e)=true;\r\n如果$e是array类型，$a=array()，相对数组来说，没有元素的数据就为空，即empty($e)=true;\r\n除了当变量没有置值时不产生警告之外， empty() 是 (boolean) var 的反义词。\r\n\r\n> 进一步阅读\r\n\r\n类型约束：http://www.php.net/manual/zh/language.oop5.typehinting.php\r\nVariable handling 函数：http://www.php.net/manual/zh/ref.var.php\r\nPHP 类型比较表：http://www.php.net/manual/zh/types.comparisons.php', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('47', 'Notepad++ 快捷键', '47', '1402451340', '1447206817', '<!--markdown-->Ctrl+C 复制\r\nCtrl+X 剪切\r\nCtrl+V 粘贴\r\nCtrl+Z 撤消\r\nCtrl+Y 恢复\r\nCtrl+A 全选\r\nCtrl+F 键查找对话框启动\r\nCtrl+H 查找/替换对话框\r\nCtrl+D 复制并粘贴当行\r\n\r\n\r\nCtrl+L 删除当前行\r\nCtrl+T 当行向上移动一行\r\nF3 查找下一个\r\nShift+F3 查找上一个\r\nCtrl+Shift+F 组合在文件中查找\r\nCtrl+F3 查找（volatil）下一页\r\nCtrl+Shift+F3 查找（volatil）上一页\r\nCtrl+Shift+I 组合增量搜索\r\nCtrl+S 保存文件\r\nCtrl+Alt+S 另存为\r\nCtrl+Shift+S 保存所有文件\r\nCtrl+O 打开文件\r\nCtrl+N 新建立文件\r\nCtrl+F2 切换书签\r\nF2 转到下一个书签\r\nShift+F2 转到上一个书签\r\nCTRL+G 定位换行,偏移量\r\nCtrl+W 关闭当前文档\r\nAlt+Shift+Arrow 键移箭头键或\r\nALT+鼠标左键 单击列选择\r\nF5 启动运行对话框\r\nCtrl+空格	输入法切换\r\nAlt+空格	程序单击右键\r\nTab 插入缩进\r\nShift+Tab 删除缩进\r\nAlt-Shift-Arrow 或\r\nCtrl +鼠标滚轮钮 放大缩小\r\nCtrl +Keypad/恢复原来的大小\r\nF11 全屏模式\r\nCtrl+Tab 下一个文档\r\nCtrl+Shift+Tab 上一个文档\r\nCtrl+Shift+Up	当前线向上移\r\nCtrl-Shift-Down 当前线向下移\r\nCtrl+Alt+F 折叠当前层次\r\nCtrl+Alt+Shift+F展开当前层次\r\nAlt+0 折叠全部\r\nAlt+Shift+0 展开全部\r\nAlt+(1~8) 折叠级别（1~8）\r\nAlt+Shift+(1~8) 展开级别（1~8）\r\nCtrl+BackSpace 删除开始词\r\nCtrl+Delete 删除结束词\r\nCtrl+Shift+BackSpace 删除至行\r\nCtrl+Shift+Delete 删除至行尾\r\nCTRL+U 转换为小写\r\nCtrl+Shift+U 转换为大写\r\nCtrl+B 转至匹配的括号\r\nCtrl+Shift+R 的开始录制/停止录制宏\r\nCtrl+Shift+P 播放录制的宏\r\nCTRL+Q 注释/取消注释\r\nCtrl+Shift+Q 值流评论\r\nCtrl+Shift+T 当前行复制到剪贴板\r\nCtrl+P 打印\r\nAlt+F4 退出\r\nCtrl+I 分割线\r\nCtrl+J 连接行\r\nCtrl+Alt+R 从右边阅读\r\nCtrl+Alt+L 从左边阅读\r\nF1 关于帮助\r\n\r\n本人不懂用Google翻译出大概 再修改的可能有几个错误英文版\r\n\r\nCtrl-C	Copy\r\nCtrl-X	Cut\r\nCtrl-V	Paste\r\nCtrl-Z	Undo\r\nCtrl-Y	Redo\r\nCtrl-A	Select All\r\nCtrl-F	Launch Find Dialog\r\nCtrl-H	Launch Find / Replace Dialog\r\nCtrl-D	Duplicate Current Line\r\nCtrl-L	Delete Current Line\r\nCtrl-T	Switch the current line position with the previous line position\r\nF3	Find Next\r\nShift-F3	Find Previous\r\nCtrl-Shift-F	Find in Files\r\nCtrl-F3	Find (volatil) Next\r\nCtrl-Shift-F3	Find (volatil) Previous\r\nCtrl-Shift-I	Incremental Search\r\nCtrl-S	Save File\r\nCtrl-Alt-S	Save As\r\nCtrl-Shift-S	Save All\r\nCtrl-O	Open File\r\nCtrl-N	New File\r\nCtrl-F2	Toggle Bookmark\r\nF2	Go To Next Bookmark\r\nShift-F2	Go To Previous Bookmark\r\nCtrl-G	Launch GoToLine Dialog\r\nCtrl-W	Close Current Document\r\nAlt-Shift-Arrow keys or\r\nAlt + Left mouse click	Column Mode Select\r\nF5	Launch Run Dialog\r\nCtrl-Space	Launch CallTip ListBox\r\nAlt-Space	Launch Word Completion ListBox\r\nTab (selection of several lines)	Insert Tabulation or Space (Indent)\r\nShift-Tab (selection of several lines)	Remove Tabulation or Space (outdent)\r\nCtrl-(Keypad-/Keypad+) or\r\nCtrl + mouse	wheel button (if any)	Zoom in (+ or up) and Zoom out (- or down)\r\nCtrl-Keypad/	Restore the original size from zoom\r\nF11	Toggle Full Screen Mode\r\nCtrl-Tab	Next Document\r\nCtrl-Shift-Tab	Previous Document\r\nCtrl-Shift-Up	Move Current Line Up\r\nCtrl-Shift-Down	Move Current Line Down\r\nCtrl-Alt-F	Collapse the Current Level\r\nCtrl-Alt-Shift-F	Uncollapse the Current Level\r\nAlt-0	Fold All\r\nAlt-(1~8)	Collapse the Level (1~8)\r\nAlt-Shift-0	Unfold All\r\nAlt-Shift-(1~8)	Uncollapse the Level (1~8)\r\nCtrl-BackSpace	Delete to start of word\r\nCtrl-Delete	Delete to end of word\r\nCtrl-Shift-BackSpace	Delete to start of line\r\nCtrl-Shift-Delete	Delete to end of line\r\nCtrl-U	Convert to lower case\r\nCtrl-Shift-U	Convert to UPPER CASE\r\nCtrl-B	Go to matching brace\r\nCtrl-Shift-R	Start to record /Stop recording the macro\r\nCtrl-Shift-P	Play recorded macro\r\nCtrl-Q	Block comment/uncomment\r\nCtrl-Shift-Q	Stream comment\r\nCtrl-Shift-T	Copy current line to clipboard\r\nCtrl-P	Print\r\nAlt-F4	Exit\r\nCtrl-I	Split Lines\r\nCtrl-J	Join Lines\r\nCtrl-Alt-R	Text Direction RTL\r\nCtrl-Alt-L	Text Direction LTR\r\nF1	About', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('48', '手机站H5页面禁止滚动条滑动', '48', '1378869300', '1447211798', '<!--markdown-->当做弹窗效果时，希望弹窗出现的时候网页不可再上下滚动、翻页，可以用body{overflow:hidden}，可是做手机站的时候，就不兼容了。\r\n\r\n试了很多次都没有用，后来找到了解决的办法，就是要html,body同时设为overflow:hidden。\r\n\r\n具体实现范例代码：\r\n\r\ncss样式部分：\r\n```\r\n.ovfHiden{overflow: hidden;height: 100%;}\r\n```\r\njquery部分：\r\n```\r\n$(\'html,body\').addClass(\'ovfHiden\'); //使网页不可滚动\r\n$(\'html,body\').removeClass(\'ovfHiden\'); //使网页恢复可滚动\r\n```', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('49', '平台返回码策略', '49', '1423622160', '1447641477', '<!--markdown-->说明：通常，在多平台、多终端的数据访问时，会通过数据回调的形式进行数据通信。而不同的开发者及不同的开发语言会有不同的数据返回格式。为了使平台在开发过程中无需对每个接口进行沟通与协调，我们将定义一套标准的返回码来绑定平台间的返回数据，通过对该返回码的识别，则可判断平台返回数据的功能及模式。\r\n我们将返回码一般的定义为:\r\n		\"返回类型\"+\"子系统编号\"+\"自定义序列\"\r\n例如：用户帐号密码错误导致登录失败\r\n		返回码为：4110（分解显示为4-1-10，使用中去除横线）\r\n		其中第一位数字“4”为返回码类型\r\n		第二位数字“1”为用户中心编号\r\n		最后两位“10”为表示具体错误内容的自定义编码\r\n\r\n其中：模块编号由系统接入时生成，自定义编码为00-99的两位十进制数字。\r\n\r\n返回码类型的一般定义：\r\n返回码类型	类型解释\r\n1	当前处理\r\n2	成功\r\n3	重定向\r\n4	客户端操作错误\r\n5	服务器响应错误\r\n\r\n通用返回码：\r\n返回码	信息	描述\r\n1000	正在处理中...请稍候...	\r\n		\r\n2000	操作成功	Succeed、true\r\n2001	成功返回数据	返回请求的数据\r\n2002	成功缓存数据	将请求的数据写入缓存并返回键值\r\n3000	跳转中...	\r\n3100	用户未登录	\r\n3101	当前登录的用户帐号	\r\n		\r\n4000	操作失败	Failed、false\r\n4001	没有访问权限	\r\n4002	参数错误	\r\n4003	请求超时	\r\n4004	无匹配信息	\r\n4005	重复提交数据	\r\n5000	服务器正在维护中...	\r\n		\r\n\r\n\r\n通用数据返回模式：\r\nJsonp数据\r\n({\"msg\":\"success\",\"code\":\"2000\",\"data\":\"  \"})\r\n其中data可以这样定义，例如：需要查一个列表页，那么data域中可能需要总条数，那么后台返回的格式是（请前端的同事严格遵守返回的json数据格式）：\r\n![图片1.png][1]\r\n\r\n\r\n  [1]: http://junhey-typechoupload.stor.sinaapp.com/535607132.png', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('50', '图片1.png', '图片1-png', '1447641415', '1447641415', 'a:5:{s:4:\"name\";s:11:\"图片1.png\";s:4:\"path\";s:13:\"535607132.png\";s:4:\"size\";i:55432;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '49');
INSERT INTO `typecho_contents` VALUES ('51', 'HTML基础模板', '51', '1447921320', '1447921334', '<!--markdown-->```\r\n<!doctype html><!-- simplified doctype works for all previous versions of HTML as well -->\r\n\r\n<!-- Paul Irish\'s technique for targeting IE, modified to only target IE6, applied to the html element instead of body -->\r\n<!--[if lt IE 7 ]><html lang=\"en\" class=\"no-js ie6\"><![endif]-->\r\n<!--[if (gt IE 6)|!(IE)]><!--><html lang=\"en\" class=\"no-js\"><!--<![endif]-->\r\n\r\n<head>\r\n    <!-- simplified character encoding -->\r\n    <meta charset=\"utf-8\">\r\n\r\n    <title>Easy HTML5 Template</title>\r\n    <meta name=\"description\" content=\"Easy HTML5 Template\">\r\n    <meta name=\"author\" content=\"\">\r\n\r\n    <!-- Delete these two icon references once you\'ve placed them in the root directory with these file names -->\r\n    <!-- favicon 16x16 -->\r\n    <link rel=\"shortcut icon\" href=\"/favicon.ico\">\r\n    <!-- apple touch icon 57x57 -->\r\n    <link rel=\"apple-touch-icon\" href=\"/apple-touch-icon.png\">\r\n\r\n    <!-- Main style sheet. Change version number in query string to force styles refresh -->\r\n    <!-- link element no longer needs type attribute -->\r\n    <link rel=\"stylesheet\" href=\"css/screen.css?v=1.0\">\r\n\r\n    <!-- Modernizr for feature detection of CSS3 and HTML5; must be placed in the \"head\" -->\r\n    <!-- Script tag no longer needs type attribute -->\r\n    <script src=\"js/modernizr-1.6.min.js\"></script>\r\n\r\n    <!-- Remove the script reference below if you\'re using Modernizr -->\r\n    <!--[if lt IE 9]>\r\n    <script src=\"http://html5shiv.googlecode.com/svn/trunk/html5.js\"></script>\r\n    <![endif]-->\r\n\r\n</head>\r\n\r\n<!-- If possible, use the body as the container -->\r\n<!-- The \"home\" class is an example of a dynamic class created on the server for page-specific targeting -->\r\n<body class=\"home\">\r\n\r\n    <!-- ******************************************************************** -->\r\n    <!-- The content below is for demonstration of some common HTML5 elements  -->\r\n    <!-- More than likely you\'ll rip out everything except header/section/footer and start fresh -->\r\n\r\n    <!-- First header has an ID so you can give it individual styles, and target stuff inside it -->\r\n    <header id=\"hd1\">\r\n\r\n        <!-- \"hgroup\" is used to make two headings into one, to prevent a new document node from forming -->\r\n        <hgroup>\r\n        <h1>Easy HTML5 Template</h1>\r\n        <h2>tagline</h2>\r\n        </hgroup>\r\n\r\n        <!-- Main nav, styled by targeting \"#hd1 nav\"; you can have more than one nav element per page -->\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"#\">Home</a></li>\r\n                <li><a href=\"#\">About</a></li>\r\n                <li><a href=\"#\">Services</a></li>\r\n                <li><a href=\"#\">Contact</a></li>\r\n            </ul>\r\n        </nav>\r\n\r\n    </header><!-- #hd1 -->\r\n\r\n    <section id=\"main\">\r\n\r\n        <!-- Each section should begin with a new h1 (not h2), and optionally a header -->\r\n        <!-- You can have more than one header/footer pair on a page -->\r\n        <header>\r\n        <h1>This is a Page Sub Title</h1>\r\n        </header>\r\n\r\n        <p>Some content...</p>\r\n\r\n        <!-- The h2 below is a sub heading relative to the h1 in this section, not for the whole document -->\r\n        <h2>Demonstrating EM and STRONG</h2>\r\n\r\n        <!-- \"strong\" is used for SEO and contextual hierarchy -->\r\n        <p><strong>This text will have more importance (SEO-wise and contextually)</strong></p>\r\n\r\n        <!-- \"b\" is used for stylistic offset of text that\'s NOT important contextually -->\r\n        <p><b>This text has visual importance but has no contextual or SEO importance</b></p>\r\n\r\n        <!-- \"em\" is used for colloquial-style emphasis -->\r\n        <p>This is a <em>very</em> collooqial expression.</p>\r\n\r\n        <!-- There can be multiple footers on each page -->\r\n        <!-- Secondary headers and footers don\'t necesarily need ids; they can be targeted via context (i.e. \"#main footer\") -->\r\n        <footer>\r\n        <!-- incite a riot: http://24ways.org/2009/incite-a-riot -->\r\n        <p>Author: <cite>Louis Lazaris</cite></p>\r\n        </footer>\r\n\r\n    </section><!-- #main -->\r\n\r\n    <!-- The \"aside\" element could be a sidebar (outside an article or section) -->\r\n    <!-- Or it could reference other tangentially-related content within an article or section -->\r\n    <aside id=\"sidebar\">\r\n    <p>Sidebar content</p>\r\n    </aside>\r\n\r\n    <!-- The main footer has an ID for targeting, similar to the main header -->\r\n    <footer id=\"f1\">\r\n    <p>copyright © year</p>\r\n    </footer><!-- #f1 -->\r\n\r\n<!-- Remote jQuery with local fallback; taken from HTML5 Boilerplate http://html5boilerplate.com -->\r\n<!-- jQuery version might not be the latest; check jquery.com -->\r\n<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js\"></script>\r\n<script>!window.jQuery && document.write(unescape(\'%3Cscript src=\"js/jquery-1.4.4.min.js\"%3E%3C/script%3E\'))</script>\r\n\r\n<!-- Below is your script file, which has a basic JavaScript design pattern that you can optionally use -->\r\n<!-- Keep this and plugin scripts at the bottom for faster page load; combining and minifying scripts is recommended -->\r\n<script src=\"js/general.js\"></script>\r\n\r\n<!-- asynchronous analytics code by Mathias Bynens; change UA-XXXXX-X to your own code; http://mathiasbynens.be/notes/async-analytics-snippet -->\r\n<!-- this can also be placed in the <head> if you want page views to be tracked quicker -->\r\n<script>\r\nvar _gaq = [[\'_setAccount\', \'UA-XXXXX-X\'], [\'_trackPageview\']];\r\n(function(d, t) {\r\n    var g = d.createElement(t),\r\n        s = d.getElementsByTagName(t)[0];\r\n    g.async = true;\r\n    g.src = (\'https:\' == location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n    s.parentNode.insertBefore(g, s);\r\n})(document, \'script\');\r\n</script>\r\n</body>\r\n</html>\r\n```\r\n> 原文：http://www.cnblogs.com/bluedream2009/archive/2011/01/11/1933381.html', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('53', 'PHP面试题目搜集', '53', '1439973600', '1447923109', '<!--markdown--># 一、理论知识\r\n\r\n1.1 PHP里面是区分大小写的吗？\r\nPHP对于系统函数、用户自定义函数、类名称等是不区分大小写的\r\nPHP中的变量和常量是区分大小写的\r\n对于文件名又因服务器操作系统而定，linux中区分，Win不区分\r\n\r\n1.2 $_POST，$HTTP_RAW_POST_DATA 和 php://input 的区别？\r\n\r\n$_POST：是获取表单POST过来数据，media type是“application/x-www-form-urlencoded”。意思就是字段名和值都编码了，每个 key-value 对使用 ‘&’ 字符分隔开，key 和 value 使用 ‘=’ 分开，其他特殊字符都会被使用 urlencode 方式进行编码。\r\n$HTTP_RAW_POST_DATA：可以获取原始的POST数据，但需要在 php.ini 中设置开启，并且不支持 enctype=\"multipart/form-data\"方式传递的数据\r\nphp://input：可以获取原始的 POST 数据，并且比$HTTP_RAW_POST_DATA更少消耗内存，也不支持\"multipart/form-data\",可以使用 file_get_contents() 函数去获取它的内容\r\n\r\n1.3 没有通过static定义的方法，能否通过”对象名::方法名“这样的形式来调用？\r\n会产生一个strict错误，但在会继续执行代码。参考《PHP静态调用非静态方法》。这篇文章里面还讲到了一个概念“calling scope”。静态调用并不是说有::就是静态调用，而是看calling scope。$this指针指向的对象就是这个方法被调用时刻的calling scope。\r\n\r\n1.4、请简单阐述您最得意的开发之作\r\n\r\n1.5、对于大流量的网站,您采用什么样的方法来解决各页面访问量统计问题\r\na. 确认服务器是否能支撑当前访问量。\r\nb. 优化数据库访问。(参考3.5)\r\nc. 禁止外部访问链接（盗链）, 比如图片盗链。\r\nd. 控制文件下载。\r\ne. 使用不同主机分流。\r\nf. 使用浏览统计软件，了解访问量，有针对性的进行优化。 \r\n\r\n1.6、请介绍Session的原理\r\n因为HTTP是无状态的，所以一次请求完成后客户端和服务端就不再有任何关系了，谁也不认识谁。\r\n但由于一些需要（如保持登录状态等），必须让服务端和客户端保持联系，session ID就成了这种联系的媒介了。\r\n当用户第一次访问站点时，PHP会用session_start()函数为用户创建一个session ID，这就是针对这个用户的唯一标识，\r\n每一个访问的用户都会得到一个自己独有的session ID，这个session ID会存放在响应头里的cookie中，之后发送给客户端。\r\n这样客户端就会拥有一个该站点给他的session ID。\r\n当用户第二次访问该站点时，浏览器会带着本地存放的cookie(里面存有上次得到的session ID)随着请求一起发送到服务器，\r\n服务端接到请求后会检测是否有session ID，如果有就会找到响应的session文件，把其中的信息读取出来；如果没有就跟第一次一样再创建个新的。\r\n参考《Session原理简述》 \r\n\r\n1.7、session共享问题解决方案\r\na. 客户端Cookie保存，以cookie加密的方式保存在客户端，每次session信息被写在客服端，然后经浏览器再次提交到服务器。\r\nb. 服务器间Session同步，使用主-从服务器的架构，当用户在主服务器上登录后，通过脚本或者守护进程的方式，将session信息传递到各个从服务器中\r\nc. 使用集群统一管理Session，当应用系统需要session信息的时候直接到session群集服务器上读取，目前大多都是使用Memcache来对Session进行存储。\r\nd. 把Session持久化到数据库，目前采用这种方案时所使用的数据库一般为mysql。\r\n参考《Session共享实现方案调研》\r\n\r\n1.8、测试php性能性能的工具，和找出瓶颈的方法。\r\nXHProf（windows安装方法参照这里）是一个分层PHP性能分析工具。它报告函数级别的请求次数和各种指标，包括阻塞时间，CPU时间和内存使用情况。\r\n它有一个简单的HTML的用户界面，基于浏览器的性能分析用户界面能更容易查看，也能绘制调用关系图。参数值查看。\r\n\r\n1.9、介绍一下常见的SSO(单点登陆)的原理。\r\nSSO是一种统一认证和授权机制，通过一个应用中的安全验证后，再访问其他应用中的受保护资源时，不再需要重新登录验证。\r\n解决了用户只需要登录一次就可以访问所有相互信任的应用系统，而不用重复登录。\r\n统一的认证系统是SSO的前提之一。认证系统的主要功能是将用户的登录信息和用户信息库相比较，对用户进行登录认证；\r\n认证成功后，认证系统应该生成统一的认证标志（ticket），返还给用户。另外，认证系统还应该对ticket进行效验，判断其有效性。\r\n参考《单点登录SSO》\r\n1.10、您研究过的PHP框架的特点，主要解决什么问题，与其他框架的不同点。\r\n\r\n1.11、禁掉cookie的session使用方案\r\na. 通过 url 传值，把session id附加到url上（缺点：整个站点中不能有纯静态页面，因为纯静态页面session id 将无法继续传到下一页面）\r\nb. 通过隐藏表单，把session id 放到表单的隐藏文本框中同表单一块提交过去（缺点：不适用`<a>`标签这种直接跳转的非表单的情况）\r\nc. 直接配置php.ini文件,将php.ini文件里的session.use_trans_sid= 0设为1（好像在win上不支持）\r\nd. 用文件、数据库等形式保存Session ID，在跨页过程中手动调用\r\n\r\n1.12、PHP缓存技术有哪些? \r\n1. 全页面静态化缓存，也就是将页面全部生成html静态页面，用户访问时直接访问的静态页面，而不会去走php服务器解析的流程\r\n2. 页面部分缓存，将一个页面中不经常变的部分进行静态缓存，而经常变化的块不缓存，最后组装在一起显示\r\n3. 数据缓存，通过一个id进行请求的数据,将数据缓存到一个php文件中,id和文件是对应的,下次通过这个id进行请求时 直接读php文件\r\n4. 查询缓存，和数据缓存差不多,根据查询语句进行缓存;\r\n5. 内存式缓存，redis和memcache\r\n参考《PHP中9大缓存技术总结》\r\n\r\n1.13、JSON格式数据有哪些特点\r\na. JSON一种轻量级的数据交换格式。它基于ECMAScript的一个子集。\r\nb. JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C, C++, C#, Java, JavaScript, Perl, Python等）\r\nc. 这些特性使JSON成为理想的数据交换语言。易于人阅读和编写，同时也易于机器解析和生成(网络传输速率)。\r\nd. \"名称/值\"对的集合，不同语言中，它被理解为对象(object)，记录(record)，结构(struct)，字典(dictionary)，哈希表(hash table)，键列表(keyed list)等\r\ne. 值的有序列表，多数语言中被理解为数组(array)\r\n参考《介绍JSON》\r\n\r\n1.14、isset() 、empty()与is_null的区别\r\nisset()：仅当null和未定义，返回false\r\nempty()：\"\"、0、\"0\"、NULL、FALSE、array(),未定义，均返回false\r\nis_null()：仅判断是否为null，未定义 报警告\r\n\r\n1.15、MVC的优缺点\r\n优点：\r\n分散关注、松散耦合、逻辑复用、标准定义\r\na. 开发人员可以只关注整个结构中的其中某一层，方便多开发人员间的分工\r\nb. 可以很容易的用新的实现来替换原有层次的实现\r\nc. 降低层与层之间的依赖\r\nd. 利于各层逻辑的复用，有利于标准化\r\ne. 对单元测试的支持更加出色\r\n缺点：\r\na. 清晰的构架以代码的复杂性为代价， 对小项目优可能反而降低开发效率\r\nb. 降低了系统的性能，例如业务造访数据库现在必须通过中间层来完成\r\nc. 控制层和表现层有时会过于紧密，导致没有真正分离和重用\r\nd. 有时会导致级联的修改，如果在表示层中增加一个功能，为保证符合分层式结构，可能需要在相应的控制层和模型层中都增加相应的代码\r\n\r\n1.16、PHP中单引号和双引号有什么区别？哪个速度更快？\r\n单引号更快\r\n单引号内的数据不会被解析(任何变量和特殊转义字符)，所以速度更快\r\n双引号要先查找语句中是否有变量，双引号内的数据会被解析，如变量($var)值会代入字符串中，特殊转义字符也会被解析成特定的单个字\r\n这里顺便说个定界符（heredoc syntax）“<<<”，\r\n其作用就是按照原样，包括换行格式什么的，输出在其内部的东西，任何特殊字符都不需要转义，变量会被正常的用其值来替换\r\n\r\n1.17、简述GBK，GBK2312，BIG5，GB18030\r\nGB2312支持的汉字较少，GBK是相比GB2312汉字更为丰富，包括全部的中日韩汉字\r\nGB18030相比GBK增加了一些少数民族汉字汉字库更为多样，常人很少用\r\n一般简体中文使用GBK而繁体中文使用BIG5\r\n\r\n1.18、接口与抽象类的区别是什么？\r\n抽象类：\r\n抽象类是不能被实例化的类，只能作为其他类的父类来使用，抽象类是通过关键字abstract来声明\r\n抽象类与普通类类似，都包含成员变量和成员方法，两者的区别在于，抽象类中至少包含一个抽象方法\r\n抽象方法没有方法体，该方法天生就是要被子类重写的\r\n抽象方法的格式为：abstract function abstractMethod()\r\n子类继承抽象类使用extends\r\n接口：\r\n接口是通过interface关键字来声明，接口中的成员常量和方法都是public的，方法可以不写关键字public\r\n接口中的方法也是没有方法体的，接口中的方法也是天生要被子类实现的\r\n接口能实现多继承\r\n子类实现接口使用implements\r\n\r\n1.19、谈谈对mvc的认识\r\nMVC(Model/View/Controller)模式包括三类对象。\r\nModel是应用对象，View是它在屏幕上的表示，Controller定义用户界面对用户输入的响应方式\r\n模型（Model）模型是应用程序的主体部分。模型表示业务数据，或者业务逻辑\r\n视图（View） 视图是应用程序中用户界面相关的部分，是用户看到并与之交互的界面\r\n控制器（controller) 控制器工作就是根据用户的输入，控制用户界面数据显示和更新model对象状态\r\n\r\n1.20、php中传值与传引用的区别\r\n按值传递：函数范围内对值的任何改变在函数外部都会被忽略\r\n引用传递：函数范围内对值的任何改变在函数外部也能反映出这些修改\r\n\r\n1.21、php5的构造函数和析构函数\r\n__construct：这个函数将被当成是一个构造函数并在建立一个对象实例时被执行\r\n__destruct：PHP将在对象被销毁前调用这个函数. 它称为析构函数\r\n\r\n1.22、PHP的垃圾收集机制是怎样的？\r\nPHP是一门托管型语言，在PHP编程中程序员不需要手工处理内存资源的分配与释放，这就意味着PHP本身实现了垃圾回收机制（Garbage Collection）\r\nPHP使用的回收算法是引用计数法，每个php变量存在一个叫\"zval\"的变量容器中。\r\n一个zval变量容器，除了包含变量的类型和值，还包括两个字节的额外信息。第一个是\"is_ref\"，是个bool值，用来标识这个变量是否是属于引用集合(reference set)。\r\n第二个额外字节是\"refcount\"，用以表示指向这个zval变量容器的变量(也称符号即symbol)个数。\r\n把一个变量赋值给另一变量将增加引用次数(refcount)\r\n当任何关联到某个变量容器的变量离开它的作用域(比如：函数执行结束)，或者对变量调用了函数 unset()时，\"refcount\"就会减1\r\n变量容器在\"refcount\"变成0时就被销毁\r\n\r\n1.23、说几个你知道的设计模式？\r\n单例模式：保证一个类仅有一个实例，并提供一个访问他的全局访问点例如框架中的数据库连接\r\n简单工厂模式：它具有创建对象的某些方法，可以使用工厂类创建对象，而不直接使用 new。例如初始化数据库的时候会用到，比如MySQL，MSSQL\r\n策略模式：针对一组算法，将每一个算法封装到具有共同接口的独立的类中，例如进入个人主页时，根据浏览者的不同，给予不同的显示与操作\r\n注册模式：提供了在程序中有条理的存放并管理一组全局对象 (object)，例如ZF框架中的Zend_Registry::set\r\n适配器模式：将不同接口适配成统一的API接口，例如数据操作有mysql、mysqli、pdo等，可利用适配器模式统一接口\r\n观察者模式：一个对象通过添加一个方法使本身变得可观察。当可观察的对象更改时，它会将消息发送到已注册的观察者。例如实现实现消息推送\r\n装饰器模式：不修改原类代码和继承的情况下动态扩展类的功能，例如框架的每个Controller文件会提供before和after方法\r\n迭代器模式：提供一个方法顺序访问一个聚合对象中各个元素，在PHP中将继承Iterator类\r\n原型模式：实现了一个原型接口，该接口用于创建当前对象的克隆。当直接创建对象的代价比较大时，则采用这种模式。例如，一个对象需要在一个高代价的数据库操作之后被创建。\r\n\r\n# 二、PHP编码\r\n2.1、mysqli_real_connect()和mysqli_connect()有啥区别？\r\na. mysqli_real_connect() 要求一个由 mysqli_init() 创建的有效的对象\r\nb. mysqli_real_connect() 可以与 mysqli_options() 一同使用来设置连接的不同选项\r\nc. mysqli_real_connect() 有一个flag参数\r\n\r\n2.2、遍历目录及子目录中的文件\r\n这里可以用scandir()，或者glob()函数，这里有篇文章介绍了《四种方法》，在线代码中有两种方法。\r\n\r\n2.3、 给任意一段URL，取出该URL中包含的扩展名。如“http://www.pwstrick.com/test.php?somevar”，返回.php或php\r\n使用了5种方法，pathinfo()，explode()，basename()、strpos()跟substr()的组合，\r\n使用正则（可以参考我以前的一篇文章《JavaScript与PHP中正则》）以及parse_url()。查看在线代码。\r\n\r\n2.4、PHP怎样防止SQL注入？\r\n使用预处理语句和参数化查询。预处理语句和参数分别发送到数据库服务器进行解析，参数将会被当作普通字符处理。\r\n这种方式使得攻击者无法注入恶意的SQL。 你有两种选择来实现该方法：PDO和MySQLI，查看在线代码。参考《PHP中该怎样防止SQL注入》\r\n\r\n2.5、include、require、include_once与require_once的区别\r\na. include和require都是引入指定的文件。_once表示只引入一次，即之前已经引入过的不再引入。\r\nb. 加载失败的处理方式不同：\r\ninclude在引入不存文件时产生一个警告且脚本还会继续执行，包含进来。通俗点儿讲就是：带上她！\r\nequire则会导致一个致命性错误且脚本停止执行，有赖于这个文件。通俗点儿讲就是：我要她！\r\nc. include是有条件包含函数，而 require则是无条件包含函数。\r\nd. include()执行时需要引用的文件每次都要进行读取和评估，require()执行时需要引用的文件只处理一次(实际上执行时需要引用的文件内容替换了require()语句)\r\ne. include有返回值，而require没有。参考《PHP中include require include_once require_once 的区别》\r\n\r\n2.6、写出一些php魔术方法\r\n　　PHP 将所有以 __（两个下划线）开头的类方法保留为魔术方法。所以在定义类方法时，建议不要以 __ 为前缀，查看PHP手册。 \r\n\r\n2.7、shell命令方式向PHP传入参数的三种方式\r\n使用$argc $argv；使用getopt函数()；提示用户输入，然后获取输入的参数。参考《PHP传入参数》\r\n\r\n2.8、写一个函数，算出两个文件的相对路径，如 $a = \"/a/b/c/d/e.php\"; $b = \"/a/b/12/34/c.php\";\r\n计算出 $a 相对于$b 的相对路径应该是 \"../../12/34/c.php\"\r\n 先将两个字符串用“/”分割成数组，再用array_diff_assoc先检查$a与$b数组的差集。然后再$b与$a做差集。查看在线代码。\r\n\r\n2.9、用php写出显示客户端IP、服务器端IP的代码和网页地址\r\n客户端IP：$_SERVER[\"SERVER_ADDR\"]\r\n服务器端IP：$_SERVER[\"REMOTE_ADDR\"]\r\n网页地址：$_SERVER[\"REQUEST_URI\"]\r\n当前脚本的执行路径：$_SERVER[\"SCRIPT_FILENAME\"]或者__FILE__\r\n当前脚本的名称:$_SERVER[\"PHP_SELF\"]或者$_SERVER[\"SERIPT_NAME\"]\r\n链接到前一页的URL地址：$_SERVER[\"HTTP_REFERER\"]\r\n\r\n2.10、error_reporting(2047)什么作用\r\nerror_reporting，设置应该报告何种 PHP 错误，这里是指显示所有的错误 E_ALL\r\n\r\n2.11、echo，print()，print_r()，printf()，sprintf()，var_dump()有什么区别\r\necho：是语句不是函数，没有返回值，可输出多个变量值，不需要圆括号。不能输出数组和对象，只能打印简单类型(如int,string)\r\nprint：是语句不是函数，有返回值 1 ，只能输出一个变量，不需要圆括号。不能输出数组和对象，只能打印简单类型(如int,string)。\r\nprint_r：是函数，可以打印复合类型，例如：stirng、int、float、array、object等，输出array时会用结构表示，\r\n而且可以通过print_r($str,true)来使print_r不输出而返回print_r处理后的值\r\nprintf：是函数，把文字格式化以后输出（参看C语言）\r\nsprintf：是函数，跟printf相似，但不打印，而是返回格式化后的文字，其他的与printf一样。\r\nvar_dump：函数，输出变量的内容、类型或字符串的内容、类型、长度。常用来调试。\r\n\r\n2.12、$a = 1; $x =&$a; $b=$a++; 求$b和$x的值\r\n$b=1，$x=2\r\n\r\n2.13、php中对数组序列化和反序列化的函数，把utf-8转换成gbk的函数\r\nserialize，unserialize，iconv(\"utf-8\",\"gbk\",$strs)\r\n\r\n2.14、strlen()与mb_strlen的作用分别是什么？\r\nstrlen()无法正确处理中文字符串的占位，对于gb2312得到的是汉字个数的2倍，utf8得到的是汉字个数的3倍\r\nmb_strlen()就很好的解决了这个问题，它的第二个参数就是设置字符编码的\r\n\r\n2.15、用PHP能创建多级目录\r\nmkdir($path, 0777, true);\r\n\r\n2.16、mysql_num_rows()和mysql_affected_rows()的作用和区别\r\n两者都是返回结果集中的行数，不同的是前者只对select操作有效，后者对update,insert,delete所影响的行数有效\r\n\r\n2.17、请列举、你能想到的所有的字符串查找算法，并加注释简单说明\r\n顺序查找，二分查找，分块查找，哈希表查找\r\n\r\n2.18、根据下面的代码写出结果\r\n$a = 2;$b = &$a;unset($a);\r\necho $b;\r\n虽然使用了unset，释放给定的变量，仅仅是断开了变量名和变量内容之间的绑定，并不意味着变量内容被销毁了。所以输出结果为“2”。\r\n$a = 2;$b = 3;$c = &$a;$c = 2;\r\nif(($a=5)>0 || ($b=$a)>0) {\r\n    $a++;$b++;\r\n}\r\necho $a.\'-\'.$b.\'-\'.$c;\r\n这里注意“||”这个符号，$a=5这里已经满足条件了，那么$b=$a就不用去执行了，那么$b还是3。\r\n经过$a++和$b++后，两个变量都加1，变成6和4。而$c已经引用了$a，那么值也变成6。最后输出结果为“6-4-6”。参考《PHP引用(&)使用详解》\r\n\r\n2.19、写个函数来解决多线程同时读写一个文件的问题\r\n首先用fopen打开某个文件，然后flock加锁，再用fwrite写内容，接着flock释放锁，最后fclose关闭文档。查看在线代码。\r\n\r\n2.20、 设置session过期的方法，对应函数\r\na. setcookie()直接设置session_id的生命周期。\r\nb. 使用session_set_cookie_params()，并且session_regenerate_id(true)，当为true时则改变session_id的值，并清空当前session数组。\r\n查看在线代码。\r\n\r\n2.21、php获取文件内容的方法，对应的函数\r\na. file_get_contents得到文件的内容（可以以get和post的方式获取），整个文件读入一个字符串中\r\nb. 用fopen打开url, 以get方式获取内容（借助fgets()函数）\r\nc. 用fsockopen函数打开url（可以以get和post的方式获取），以get方式获取完整的数据，包括header和body\r\nd. 使用curl库获取内容，使用curl库之前，需要查看php.ini，查看是否已经打开了curl扩展\r\n\r\n \r\n\r\n2.22、php数组函数常见的哪些？\r\na. 数组操作的基本函数（array_values、array_keys、array_flip、array_search、array_reverse、in_array、array_key_exists、array_count_values）\r\nb. 数组的分段和填充（array_slice、array_splice、array_chunk）\r\nc. 数组与栈，列队（array_push、array_pop、array_shift、array_unshift）\r\nd. 数组的排序（sort、asort、ksort）\r\ne. 数组的计算（array_sum、array_merge、array_diff、array_intersect）\r\nf. 其他的数组函数（array_unique、shuffle）\r\n\r\n \r\n\r\n2.23、写一段上传文件的代码\r\nPOST方法上传，可以使用户上传文本和二进制文件。用 PHP 的认证和文件操作函数，可以完全控制允许哪些人上传以及文件上传后怎样处理。\r\n通过$_FILES接收通过HTTP上传到服务器的文件，上传的内容存储在$_FILES[\'xx\'][\'tmp_name\']中，然后再通过move_uploaded_file，将上传的文件移动到新位置。\r\n在看些封装的上传类的时候，看到个函数strrchr，查找指定字符在字符串中的最后一次出现，用这函数获取后缀。\r\n\r\n \r\n\r\n2.24、写出一个正则表达式，过虑网页上的所有JS/VBS脚本（即把标记及其内容都去掉）\r\n/<[^>].*?>.*?<\\/>/si。查看正则在线工具，有现成正则说明。\r\n\r\n2.25、用PHP打印出前一天的时间格式是2006-5-10 22:21:21\r\necho date(\'Y-m-d H:i:s\', strtotime(\'-1 day\'));查看更多Date/Time函数。\r\n\r\n2.26、foo()和@foo()之间有什么区别？\r\nfoo()会执行这个函数，任何解释错误，语法错误，执行错误都会在页面上显示出来\r\n@foo()在执行这个函数时，会隐藏上述的错误信息\r\n\r\n2.27、sort(),asort(),ksort(),arsort()，rsort()各有什么区别\r\nsort：对数组进行排序，当函数结束时数组单元将被从最低到最高重新安排\r\nrsort：对数组进行逆向排序\r\nasort：对数组进行排序并保持索引关系\r\narsort：对数组进行逆向排序并保持索引关系\r\nksort：对数组进行按照键名排序，保留键名到数据的关联，主要用于关联数组\r\n\r\n \r\n\r\n2.28、什么是可变变量？以下程序的输入值是什么？\r\n可变变量就是获取一个普通变量的值作为这个可变变量的变量名。输出值为“ok”。\r\n$str = \'cd\';\r\n$$str = \'hotdog\';\r\n$$str = \'ok\';\r\necho $cd;\r\n \r\n\r\n2.29、echo count(\"abc\")将会输出什么？\r\ncount()函数计算数组中的单元数目或者对象中的属性个数，通常是一个array()\r\n对于对象，如果安装了 SPL，可以通过实现 Countable 接口来调用 count()。该接口只有一个方法count(),此方法返回count()函数的返回值。\r\n如果参数不是数组型或者实现了countable接口的对象，将返回 1，只有一个例外，如果参数是NULL，则结果是 0。\r\n\r\n \r\n\r\n2.30、GD库有什么作用？\r\nGD库提供了一系列用来处理图片的API，使用GD库可以处理图片，或者生成图片。\r\n在网站上GD库通常用来生成缩略图或者用来对图片加水印或者对网站数据生成报表。\r\n\r\n\r\n# 三、数据库\r\n3.1、设一数据量为千万级的数据库，通过监控发现，有90%的查询请求都是指向同一部分数据的，而这部分数据只占整个数据库容量的1%。\r\na.这种1%数据支撑了90%的查询工作，建义独立起来，这个方便数据在数据的buffer里，提高查询效率。\r\nb.分库：后性能快速提升，如果效率还是上不去，可以考虑在那１%的数据上做一些nosql缓存。\r\nc.分表：能够在数据库缺少集群解决方案的情况下获得一定的横向扩展能力，同时负载也能分担到多台物理设备，从这个角度上讲也能解决一些性能瓶颈。\r\nd.如果有条件的话，此应用也可以通过缓存方案来解决，比如通过memcached,redis缓存1%结果集。\r\n参考《ChinaUnix问答的讨论》与《德问的讨论》\r\n\r\n \r\n\r\n3.2、MySQL如何分库分表？\r\n参考《MySQL分库分表环境下全局ID生成方案》，《第一次操刀数据库分表的教训与经验》，《mysql分库分表的一些技巧》\r\n\r\n3.3、MySQL数据库存储引擎有哪些？\r\nMyISAM、InnoDB、HEAP、BOB、ARCHIVE、CSV等 \r\n\r\n3.4、 MyISAM与InnoDB的区别\r\na. 存储结构：MyISAM在磁盘上存储成三个文件。而InnoDB所有的表都保存在同一个数据文件中，一般为2GB\r\nb. 存储空间：MyISAM可被压缩，存储空间较小。InnoDB需要更多的内存和存储，它会在主内存中建立其专用的缓冲池用于高速缓冲数据和索引。\r\nc. 事务支持：MyISAM不提供事务支持。InnoDB提供事务支持事务，外部键等高级数据库功能。\r\nd. AUTO_INCREMENT： MyISAM可以和其他字段一起建立联合索引。InnoDB中必须包含只有该字段的索引。\r\ne. 表锁差异：MyISAM只支持表级锁。InnoDB支持事务和行级锁。\r\nf. 全文索引：MyISAM支持 FULLTEXT类型的全文索引。InnoDB不支持。\r\ng. 表主键：MyISAM允许没有任何索引和主键的表存在，索引都是保存行的地址。InnoDB如果没有设定主键或者非空唯一索引，就会自动生成一个6字节的主键(用户不可见)，数据是主索引的一部分，附加索引保存的是主索引的值。\r\nh. 表的具体行数：MyISAM保存有表的总行数。InnoDB没有保存表的总行数。但是在加了wehre条件后，myisam和innodb处理的方式都一样。\r\ni. 外键：MyISAM不支持。InnoDB支持\r\nj. CURD操作：MyISAM如果执行大量的SELECT，MyISAM是更好的选择。如果你的数据执行大量的INSERT或UPDATE，出于性能方面的考虑，应该使用InnoDB表。\r\n参考《MySQL存储引擎中的MyISAM和InnoDB》\r\n\r\n \r\n\r\n3.5、MySQL数据类型有哪些？\r\n参考《SQL 数据类型》\r\n\r\n \r\n\r\n3.6、MySQL数据库作发布系统的存储，一天五万条以上的增量，预计运维三年,怎么优化？\r\na.设计良好的数据库结构，允许部分数据冗余，尽量避免join查询，提高效率。\r\nb.选择合适的表字段数据类型和存储引擎，适当的添加索引。\r\nc. mysql库主从读写分离。\r\nd. 找规律分表，减少单表中的数据量提高查询速度。\r\ne。添加缓存机制，比如memcached，apc等。\r\nf. 不经常改动的页面，生成静态页面。\r\ng. 书写高效率的SQL\r\n\r\n \r\n\r\n3.7、sql语句应该考虑哪些安全性？\r\n主要是防止注入，做好 \' \" / \\ 等特殊字符的转义，数据提交时注意html过滤，注意--,#这样的注释，注意子查询和一些mysql函数sleep,load_file等等\r\n\r\n \r\n\r\n3.8、MYSQL取得当前时间的函数是?格式化日期的函数？\r\nnow(); date_format();查看更多MySQL内置函数。\r\n\r\n \r\n\r\n3.9、关系数据库的瓶颈\r\nMemcached+MySQL\r\n随着访问量的上升，几乎大部分使用MySQL架构的网站在数据库上都开始出现了性能问题，程序员们开始大量的使用缓存技术来缓解数据库的压力，优化数据库的结构和索引。Memcached作为一个独立的分布式的缓存服务器，为多个web服务器提供了一个共享的高性能缓存服务，在Memcached服务器上，又发展了根据hash算法来进行多台Memcached缓存服务的扩展，然后又出现了一致性hash来解决增加或减少缓存服务器导致重新hash带来的大量缓存失效的弊端。\r\n\r\nMySQL主从读写分离\r\nMemcached只能缓解数据库的读取压力。读写集中在一个数据库上让数据库不堪重负，大部分网站开始使用主从复制技术来达到读写分离，以提高读写性能和读库的可扩展性。\r\n\r\n分表分库\r\n随着web2.0的继续高速发展，MySQL主库的写压力开始出现瓶颈，而数据量的持续猛增，由于MyISAM使用表锁，在高并发下会出现严重的锁问题，大量的高并发MySQL应用开始使用InnoDB引擎代替MyISAM。同时，开始流行使用分表分库来缓解写压力和数据增长的扩展问题。\r\n\r\nMySQL的扩展性瓶颈\r\n大数据量高并发环境下的MySQL应用开发越来越复杂，也越来越具有技术挑战性。分表分库的规则把握都是需要经验的。分库分表的子库到一定阶段又面临扩展问题。还有就是需求的变更，可能又需要一种新的分库方式。MySQL数据库也经常存储一些大文本字段，导致数据库表非常的大，在做数据库恢复的时候就导致非常的慢，不容易快速恢复数据库。大数据下IO压力大，表结构更改困难，正是当前使用MySQL的开发人员面临的问题。\r\n\r\n3.10、什么叫关系型数据库？\r\n关系型数据库是支持采用了关系模型的数据库，简单来说，关系模型就是指二维表模型。\r\n关系型数据库以行和列的形式存储数据，以便于用户理解。这一系列的行和列被称为表，一组表组成了数据库。\r\n\r\n# 四、linux基础\r\n4.1、linux下查看当前系统负载信息的一些方法\r\n参考《linux 下查看系统资源和负载，以及性能监控》 \r\n\r\n4.2、vim的基本快捷键\r\n　　参考《史上最全Vim快捷键键位图 -- 入门到进阶》 \r\n\r\n4.3、请解释下列10个shell命令的用途 top、ps、mv、find、df、cat、chmod、chgrp、grep、wc\r\ntop 查看系统进程占用资源的情况。ps 显示详细的进程信息。\r\nmv是为文件或目录改名，或将文件从一个目录中移植到另一个目录中。\r\nfind 查找文件或目录。\r\ndf 检查文件系统的磁盘空间占用情况。\r\ncat 显示文件内容，创建文件一个新的文件，合并文件内容。\r\nchmod 改变文件或目录的访问权限。\r\nchgrp 改变文件或目录所属的组。\r\ngrep是一个强大的文本搜索工具。\r\nwc 统计指定文件的数据信息，例如行数，字节数\r\n\r\n4.4、core文件是什么，有什么用？\r\ncore是unix系统的内核。当你的程序出现内存越界的时候，操作系统会中止你的进程，并将当前内存状态倒出到core文件中，以便进一步分析。\r\n程序员可以通过core文件来找出问题所在。它记录了程序挂掉时详细的状态描述。\r\n\r\n# 五、网络基础\r\n5.1、写出下列服务的用途和默认端口ftp、ssh、http、telnet、https\r\nftp文件传输协议是一种常见的文件拷贝方式，默认的是20用于数据连接，21用于控制连接端口。\r\nssh连接服务器执行操作，默认的是22端口号。\r\nHTTP超文本传输协议，提供一种发布和接收HTML页面的方法，端口号为80\r\nTelnet协议是TCP/IP协议族中的一员，是Internet远程登陆服务的标准协议和主要方式，默认端口为23\r\nHTTPS是以安全为目标的HTTP通道，简单讲是HTTP的安全版，默认端口为443\r\n\r\n \r\n\r\n5.2、写出你能想到的所有HTTP返回状态值，并说明用途（比如：返回404表示找不到页面）\r\n200 OK 请求成功（其后是对GET和POST请求的应答文档\r\n301 Moved Permanently 所请求的页面已经转移至新的url\r\n302 Found 所请求的页面已经临时转移至新的url\r\n304 Not Modified，服务器告诉客户，原来缓冲的文档还可以继续使用\r\n401 Unauthorized 被请求的页面需要用户名和密码\r\n403 Forbidden 对被请求页面的访问被禁止\r\n500 Internal Server Error，请求未完成。服务器遇到不可预知的情况\r\n502 Bad Gateway，请求未完成。服务器从上游服务器收到一个无效的响应\r\n503 Service Unavailable 请求未完成。服务器临时过载或当机\r\n更多状态码参考《HTTP 状态消息》\r\n \r\n\r\n5.3、POST和GET有什么区别？\r\na. GET是从服务器上获取数据，POST是向服务器传送数据\r\nb. GET是通过发送HTTP协议通过URl参数传递进行接收，而POST是实体数据，通过表单提交\r\nc. GET传送的数据量较小，不能大于2KB。POST传送的数据量较大，一般被默认为不受限制。但理论上，IIS4中最大量为80KB，IIS5中为100KB\r\nd. GET安全性非常低，POST安全性较高\r\n\r\n\r\n5.4、请写出HTTP头，并符合以下要求：\r\n１）这是一个post请求\r\n２）目标：http://www.example.com:8080/test\r\n３）POST变量：username: test  pwd: test2  intro: Hello world!\r\n４）包含以下COOKIE信息：cur_query: you&me\r\nPOST  http://www.example.com:8080/test  HTTP/1.1\r\nCookie:cur_query=you&me\r\nusername=test&pwd:=test2&intro=Hello world!\r\n\r\n更多属性查看《HTTP Header 详解》\r\n\r\n# 六、服务器基础\r\n\r\n6.1、Apache与Nginx的优缺点比较\r\na. nginx相对于apache的优点：\r\n轻量级，比apache 占用更少的内存及资源。高度模块化的设计，编写模块相对简单\r\n抗并发，nginx 处理请求是异步非阻塞，多个连接（万级别）可以对应一个进程，而apache 则是阻塞型的，是同步多进程模型，一个连接对应一个进程，在高并发下nginx 能保持低资源低消耗高性能\r\nnginx处理静态文件好，Nginx 静态处理性能比 Apache 高 3倍以上\r\nb. apache 相对于nginx 的优点：\r\napache 的rewrite 比nginx 的rewrite 强大 ，模块非常多，基本想到的都可以找到 ，比较稳定，少bug ，nginx 的bug 相对较多\r\n\r\nc. 原因：\r\n得益于Nginx使用了最新的epoll（Linux 2.6内核）和kqueue（freebsd）网络I/O模型，而Apache则使用的是传统的select模型。\r\n目前Linux下能够承受高并发访问的 Squid、Memcached都采用的是epoll网络I/O模型。\r\n处理大量的连接的读写，Apache所采用的select网络I/O模型非常低效。\r\n参考《Apache与Nginx的优缺点比较》\r\n\r\n \r\n\r\n6.2、cgi 与fastcgi的区别\r\nCGI：在2000 年或更早的时候用得比较多， 以前web服务器一般只处理静态的请求，web服务器会根据这次请求的内容，然后会fork一个新进程来运行外部c程序 （或perl脚本...）， 这个进程会把处理完的数据返回给web服务器，最后web服务器把内容发送给用户，刚才fork的进程也随之退出。 如果下次用户还请求改动态脚本，那么web服务器又再次fork一个新进程，周而复始的进行。\r\nweb内置模块：后来出现了一种更高级的方式是， web服务器可以内置perl解释器或php解释器。 也就是说这些解释器做成模块的方式，web服务器会在启动的时候就启动这些解释器。 当有新的动态请求进来时，web服务器就是自己解析这些perl或php脚本，省得重新fork一个进程，效率提高了。\r\nfastcgi：是web服务器收到一个请求时，他不会重新fork一个进程（因为这个进程在web服务器启动时就开启了，而且不会退 出），web服务器直接把内容传递给这个进程（进程间通信，但fastcgi使用了别的方式，tcp方式通信），这个进程收到请求后进行处理，把结果返回 给web服务器，最后自己接着等待下一个请求的到来，而不是退出。\r\n参考《fastcgi与cgi有什么不同》\r\n\r\n \r\n\r\n6.3、Memcached和Redis区别\r\na. Redis中，并不是所有的数据都一直存储在内存中的，这是和Memcached相比一个最大的区别。\r\nb. Redis在很多方面具备数据库的特征，或者说就是一个数据库系统，而Memcached只是简单的K/V缓存。\r\nc. 在100k以上的数据中，Memcached性能要高于Redis。\r\nd. 如果要说内存使用效率，使用简单的key-value存储的话，Memcached的内存利用率更高，而如果Redis采用hash结构来做key-value存储，由于其组合式的压缩，其内存利用率会高于Memcached。当然，这和你的应用场景和数据特性有关。\r\ne. 如果你对数据持久化和数据同步有所要求，那么推荐你选择Redis，因为这两个特性Memcached都不具备。即使你只是希望在升级或者重启系统后缓存数据不会丢失，选择Redis也是明智的。\r\nf. Redis和Memcache在写入性能上面差别不大，读取性能上面尤其是批量读取性能上面Memcache更强。\r\n参考《Redis和Memcached的区别》\r\n\r\n6.4、PHP 有哪些优缺点？\r\n优点：\r\na. 语法简单的，上手很快，而且还有很多很便捷的开发工具，比如说Zend Studio ,EclipsePHP Studio 等\r\nb. 跨平台，而且还都是免费的 ，可以快速的在搭建LAMP(Linux Apache MYSQL, PHP), 支持很多主流的数据库系统，比如MYSQL， Oracle, PostgreSQL等等\r\nc. 支持目前主流的技术，比如 WebService ,XML, AJAX 等等\r\nd. PHP已经有很成熟的面向对象体系，可以支持面向对象的开发 （PHP5）\r\ne. 有很多很好现有的框架，开源的论坛，以及博客等\r\nf. 持续的更新和维护，以及社区的支撑，很多技术爱好者的共同努力，使PHP得到很广泛的应用，很多知名的网站也在使用PHP作为开发语言\r\n缺点：\r\na. 对多线程支持不是很好，只能做一些简单的模拟线程\r\nb. 语法不够严谨，如果以前做C++，Java 的就会很有感觉了，比如变量还没有定义，就可能直接使用\r\nc.  也许有经验的PHP程序员最感到痛苦的地方是PHP的解释运行机制。这种运行机制使得每个PHP页面被解释执行后，所有的相关资源都会被回收。也就是说，PHP在语言级别上没有办法让某个对象常驻内存。在PHP中，所有的变量都是页面级的，无论是全局变量，还是类的静态成员，都会在页面执行完毕后被清空。以JSP为例，在JSP中，Java Bean的scope有四种有效值：Page、Application、Session、Request，分别对应页面、程序、会话、请求四种生存期。但在PHP中，只有Page一种生存期\r\n\r\n \r\n\r\n参考资料：\r\nhttp://www.cnblogs.com/Excellent/archive/2011/12/15/2288733.html   PHP常见面试问题\r\nhttp://www.cnblogs.com/xuechao/archive/2011/07/14/2106828.html    应聘新浪PHP开发笔试答题总结\r\nhttp://www.cnblogs.com/bluespot/p/4223056.html   高级php面试题\r\nhttp://www.jiancool.com/article/10391979797/;jsessionid=300759BA4B790D0C0640B2B37EE338BD   试卷2\r\nhttp://www.cnblogs.com/jacko/p/4836731.html   PHP面试出场率较高的题目\r\nhttp://www.cnblogs.com/tuozi001/p/3328216.html   面试题目: PHP 有哪些优缺点？\r\nhttp://www.cnblogs.com/echohao/p/4722398.html    php常见的面试题目\r\nhttp://www.cnblogs.com/coderchuanyu/p/3993820.html    整理的一些PHP面试题目\r\nhttp://www.cnblogs.com/davidhhuan/archive/2010/04/21/1716960.html   php面试题目\r\nhttp://www.cnblogs.com/511mr/articles/2269517.html   经典php面试题目\r\nhttp://www.cnblogs.com/ccw5510/archive/2010/06/03/1751051.html    腾讯PHP程序员面试题目\r\nhttps://www.ibm.com/developerworks/cn/opensource/os-php-designptrns/    五种常见的 PHP 设计模式\r\nhttp://www.phpddt.com/php/registry-pattern.html    PHP设计模式之注册模式', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('54', 'CSS清除浮动', '54', '1448012460', '1448015540', '<!--markdown--># 1 清浮动-clear:both\r\n\r\ncss代码\r\n```css\r\n.layout{}\r\n.left{float:left;}\r\n.right{float:right;}\r\n.clear{clear:both;}\r\n```\r\nhtml代码\r\n```html\r\n<div class=\"layout\">\r\n    <div class=\"left\">left</div>\r\n    <div class=\"right\">right</div>\r\n    <div class=\"clear\"></div>\r\n</div>\r\n```\r\n\r\n# 2 清浮动-overflow:hidden\r\n\r\ncss代码\r\n```css\r\n.layout{overflow:hidden;zoom:1;}\r\n.left{float:left;}\r\n.right{float:right;}\r\n```\r\nhtml代码\r\n```html\r\n<div class=\"layout\">\r\n    <div class=\"left\">left</div>\r\n    <div class=\"right\">right</div>\r\n</div>\r\n```\r\n\r\n# 3 清浮动-:after\r\n\r\ncss代码\r\n```css\r\n.layout{}\r\n.clearfix{zoom:1;}\r\n.clearfix:after{\r\n    content:\"\";\r\n    visibility:hidden;\r\n    display:block;\r\n    clear:both;\r\n    height:0;\r\n    font-size:0;\r\n}\r\n.left{float:left;}\r\n.right{float:right;}\r\n```\r\nhtml代码\r\n```html\r\n<div class=\"layout clearfix\">\r\n    <div class=\"left\">left</div>\r\n    <div class=\"right\">right</div>\r\n</div>\r\n```', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('56', 'CSS的布局', '56', '1448015700', '1448017288', '<!--markdown-->CSS布局：\r\n\r\n> 定位（position）中有\r\n    static 没有定位 默认值\r\n    relative 相对定位\r\n    absolute 绝对定位\r\n    fixed 固定定位\r\n\r\ntip：使用绝对定位前先指定父元素的相对定位为止，否则默认为窗口\r\n     使用固定定位默认相对于浏览器窗口进行定位\r\n\r\n> 层级（z-index）\r\n\r\ntip： 只有定位元素才能使用z-index，值越大，显示越前面\r\n      定位元素高于非定位元素，同为定位元素比较z-index\r\n\r\n> 隐藏及显示（display与visibility）\r\n\r\n隐藏元素 display:none;   visibility:hidden;\r\n显示元素 display:block;  visibility:visible;\r\n区别在于display：none不占用位置，而visibility还会占用位置\r\n\r\n> css reset\r\n\r\n   [reset][1]\r\n\r\n> css 优化\r\n\r\n- 属性简写 margin:10px 15px 20px 25px;\r\n          margin:上   右   下   左     顺时针方向\r\n          \r\n          background:#fff url(bg.jpg) no-repeat fixed top center;\r\n          background:颜色  图像 平铺方式 滚动方式 图像开始位置\r\n\r\n          font:italic bold 15px/20px \"微软雅黑\"\r\n          font: 斜体  粗体  字号/行高  字体名称\r\n\r\n> css 书写顺序\r\n\r\n    显示属性 display visibility overflow position float clear\r\n    自身属性 top left width height margin padding border outline background\r\n    文本属性 color font line-height text-align text-decoration text-indent \r\n            text-transform vertical-align white-space content\r\n    \r\n\r\n\r\n  [1]: http://blog.bingo929.com/css-reset-collection.html', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('59', 'mini Query', '59', '1447160220', '1448111243', '<!--markdown-->mini Query\r\n```\r\n// mini Query\r\n  function $(query) {\r\n    var res = [];\r\n    if (document.querySelectorAll) {\r\n      res = document.querySelectorAll(query);\r\n    } else {\r\n      var firstStyleSheet = document.styleSheets[0] || document.createStyleSheet();\r\n      firstStyleSheet.addRule(query, \'Junhey:Jun\');\r\n      for (var i = 0, len = document.all.length; i < len; i++) {\r\n        var item = document.all[i];\r\n        item.currentStyle.Junhey&& res.push(item);\r\n      }\r\n      firstStyleSheet.removeRule(0);\r\n    }\r\n    if(res.item) { /* Fuck IE8 */\r\n      var ret = [];\r\n      for(var i = 0, len = res.length; i < len; i++){\r\n        ret.push(res.item(i));\r\n      }\r\n      res = ret;\r\n    }\r\n    return res;\r\n  };\r\n  \r\n```\r\n\r\nquerySelectorAll:\r\n> HTML5向Web API新引入了document.querySelector以及document.querySelectorAll两个方法用来更方便地从DOM选取元素，功能类似于jQuery的选择器。\r\n\r\n两个方法使用差不多的语法，都是接收一个字符串参数，这个参数需要是合法的CSS选择语法。\r\n```\r\nelement = document.querySelector(\'selectors\');\r\nelementList = document.querySelectorAll(\'selectors\');\r\n```\r\n其中参数selectors 可以包含多个CSS选择器，用逗号隔开。\r\n```\r\nelement = document.querySelector(\'selector1,selector2,...\');\r\nelementList = document.querySelectorAll(\'selector1,selector2,...\');\r\n```\r\n使用这两个方法无法查找带伪类状态的元素，比如querySelector(\':hover\')不会得到预期结果。\r\n\r\n参考**https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll**\r\n\r\n\r\naddRule():\r\n> 定义和用法:addRule()方法向样式表插入一条规则，该方式是特定于 IE 的方法。\r\n\r\n语法：addRule(selector,style,index)\r\n参数 	描述\r\nselector 必需。规则的 CSS 选择器。\r\nstyle  必需。应用于匹配该选择器的元素的样式。这个样式字符串是一个分号隔开的属性：值对的列表。并没有使用花括号开始或结束。\r\nindex 可选。规则数组中插入或附加规则的位置。如果这个可选参数被省略掉，则新的规则会增加到规则数组的最后。\r\n描述\r\n\r\n>该方法在样式表的 rules 数组的指定 index 处插入（或附加）一条新的 CSS 样式规则。这是标准 insertRule() 方法的特定于 IE 的替代。\r\n注意：这个方法的参数和 insertRule() 方法的参数不同。\r\n\r\n参考**http://www.w3school.com.cn/xmldom/met_cssstylesheet_addrule.asp**\r\n\r\n\r\nie8 addEventListener\r\n```\r\n  function addEventListener(evt, fn){\r\n    window.addEventListener ? this.addEventListener(evt, fn, false) : (window.attachEvent)\r\n        ? this.attachEvent(\'on\' + evt, fn) : this[\'on\' + evt] = fn;\r\n  }\r\n```', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('60', 'web切图+ps需掌握的技巧', '60', '1448161207', '1448162014', '<!--markdown--># PS快捷键：\r\n\r\n> 自由的控制视图系列\r\n\r\n自由的浏览图片：按住空格后，鼠标拖动\r\n自由的缩放图片：按住alt+滚轮\r\n切换到实际像素（100%）：Ctrl + 1\r\n工作区类型切换：Tab\r\n\r\n> 控制内容系列\r\n\r\n通过画面上点选一个图层：Alt + 鼠标右键\r\n在画面上拖动一个图层：V 切换到移动模式 鼠标拖动\r\n复制拖动一个图层：移动模式下 Alt+拖动\r\n删除一个图层：选中要删除的图层 按下 Delete\r\n合并多个图层：选中要合并的图层 按下 Ctrl+E\r\n选区内填充颜色：Alt+Delete (前景色) Ctrl+Delete(背景色)\r\n选区 alt +   shift -\r\n缩放当前选择图层：Ctrl+T(自由变换模式)\r\n\r\n> 实用工具系列\r\n\r\n画一个选区：点击M进入选区模式 ， 鼠标拖画\r\n放弃选区：Ctrl+D\r\n吸管工具：点击I进入吸管模式，点选画面颜色\r\n文字工具：点击T进入文字模式，点选画面的文字或者创建新文本\r\n切片工具：点击C进入切片模式（旧版本会有不同）\r\n\r\n\r\n\r\n\r\n# PS初始化\r\n\r\n> 新建\r\n\r\n 初始化预设 尺寸 背景内容透明 1920×1080\r\n\r\n> 视图\r\n \r\n 显示参考下和智能参考线  标尺打开 对齐 参考线 ctrl+; 显示和隐藏\r\n\r\n> 窗口\r\n\r\n 信息 字符  编辑->首选项->单位和标尺:都选为像素\r\n\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('61', 'git命令', '61', '1404790440', '1448163476', '<!--markdown-->1. windows上安装git的网址:http://msysgit.github.com/.\r\n\r\n在 Git 内都只有三种状态：已提交（committed），已修改（modified）和已暂存（staged）。已提交表示该文件已经被安全地保存在本地数据库中了；已修改表示修改了某个文件，但还没有提交保存；已暂存表示把已修改的文件放在下次提交时要保存的清单中。记住,这里说的是在git的三种状态,如果文件还没有被执行过add命令,那么它还不是git文件.也就不在上面的三种状态之中.\r\n \r\n2. 在git里要push代码的话一定得是设置了用户信息的.\r\n\r\n用户信息怎么设置呢.关键是要设置这俩个,这俩个设置了也就行了.\r\ngit config --global user.name \"你的用户名\"\r\ngit config --global user.email \"你的邮件地址\"\r\n这俩个设置好了之后可以用 git config --list来查看你的用户信息.\r\n\r\n> git命令\r\n\r\n前传篇:\r\n命令0：git clone 项目地址\r\n命令说明：克隆已经存在的git项目.\r\n当已经把项目克隆到本地,在编辑器里对文件进行修改后,可以执行下面的命令行,对代码进行版本管理.\r\n \r\n基本指令篇:\r\n命令1：git add .\r\n命令说明：把当前git项目里没有纳入版本控制的都添加进版本 (比如说把项目里新增的文件添加进git）\r\n \r\n命令2：git commit -m 这次提交的注释\r\n命令说明：把代码提交进本地的版本库并添加注释.\r\n \r\n命令3：git commit -a\r\n命令说明：如果只有更新没有add，这样的命令可以跳过git add\r\n尽管使用暂存区域的方式可以精心准备要提交的细节，但有时候这么做略显繁琐。Git 提供了一个跳过使用暂存区域的方式，只要在提交的时候，给 git commit 加上 -a 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 git add 步骤\r\n \r\n命令4：git reset head .\r\n命令说明:把所有add过却没有commit的文件去掉add状态,变为未被跟踪过\r\n \r\n命令5：git status\r\n命令说明：查看当前git里文件的状态\r\n(有哪些是add了没有commit的等)\r\n\r\ngit status的时候如果出现了 \"nothing to commit, working directory clean\" 那就这说明你现在的工作目录相当干净。换句话说，所有已跟踪文件在上次提交后都未被更改过.\r\nstatus查看的时候如果发现出现的文件名是红色的,那这种颜色的文件就是还没有纳入版本跟踪的.\r\n如果发现出现了文件名,并且是绿色字体的,就说明了这个文件是纳入了版本跟踪,但是还没有commit到本地的git版本库的.\r\n把本地的代码push进服务器之后就会发现又出现了 \"nothing to commit, working directory clean\" 字样.\r\n \r\n命令6： git rm 文件名\r\n命令说明:在git里移除某个文件, 这个只能删除没有修改和放入暂存区的。git rm -f（这里的f是force强迫的缩写），这个能删除修改了放入暂存区的\r\n \r\n命令7：git mv 以前的名字 后来的名字\r\n命令说明:可以更换文件名\r\n \r\n命令8：git log\r\n命令说明:查看git的日志。这个只能显示几条，最新的日志显示在前。\r\n \r\n分支篇：\r\n \r\n命令9：git branch\r\n命令说明:列出项目所有的分支。列出来的有个分支前会带个*号，这个分支就是当前分支。\r\n \r\n命令10：git branch 新的分支名\r\n命令说明:在本地新建一个分支\r\n \r\n命令11：git checkout 分支名\r\n命令说明:切换分支\r\n \r\n命令12：get checkout -b 分知名\r\n命令说明:新建分支而且切换到这个分支去。\r\n \r\n命令13： git branch -d 要删除的分知名\r\n命令说明：要删除一个分支\r\n \r\n命令14：git merge 分支名\r\n命令说明：把merge后跟的分支合并到当前分支来。\r\n\r\n\r\n参考**http://www.cnblogs.com/lanyueer/p/4587216.html**\r\n ', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('63', '图片优化-jpg/gif/png的选择', '63', '1446537060', '1448438213', '<!--markdown-->JPG：适合：人像、风景、实物图、卡通图片、3D效果图 …\r\nGIF：适合：LOGO、图标、按钮、透明、动画…\r\nPNG：适合：LOGO、图标、按钮、透明、半透明 …\r\n\r\n\r\n透明图片选用 PNG-8 替代 GIF\r\nPNG-8 与 PNG-24 文件的后缀名都是 .png，\r\n后期需要图片支持半透明，只需修改图片，不用修改 CSS。\r\n\r\n！PS中存储为Web和设备所用格式', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('64', 'MongoDB 语法使用小结', '64', '1449546960', '1449547624', '<!--markdown-->> MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的.\r\n\r\n支持的数据结构非常松散，是类似json的bjson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。 \r\n它的特点是高性能、易部署、易使用，存储数据非常方便。\r\n\r\n> MongoDB的获取和安装 \r\n\r\n（1）获取地址 http://www.mongodb.org/downloads 根据自己需要选择相应的版本，linux下可以使用wget 命令。 \r\n（2）解压 mongodb-win32-i386-1.8.1 \r\n（3）创建数据存放文件夹，mongodb默认的数据目录 /data/db \r\n    C:/> mkdir /data \r\n    C:/> mkdir /data/db \r\n（4）运行 MongoDB \r\n    mongod.exe - 数据库的服务器端，相当于mysql的 mysqld命令，启动服务器端 \r\n    mongo.exe - 数据库的客户端,相当于mysql的mysql命令，打开管理控制台\r\n\r\n> 启动服务 \r\n\r\nmongod.exe --dbpath F:/DataBase/MongoDB/db/ \r\n--dbpath 数据文件存放路径 \r\n--port 数据服务端口 \r\nC:/> cd /my_mongo_dir/bin \r\nC:/my_mongo_dir/bin > mongod //启动mongod 服务器，默认的数据库路径 /data/db，端口27071 \r\n\r\n> 启动客户端 \r\n\r\nmongo.exe cclove \r\ncclove 所连接的数据库名称 \r\nC:/> cd /my_mongo_dir/bin \r\nC:/my_mongo_dir/bin> mongo \r\n\r\n> 熟悉MongoDB的数据操作语句，类sql \r\n\r\n数据库操作语法 \r\nmongo --path \r\ndb.AddUser(username,password) 添加用户 \r\ndb.auth(usrename,password) 设置数据库连接验证 \r\ndb.cloneDataBase(fromhost) 从目标服务器克隆一个数据库 \r\ndb.commandHelp(name) returns the help for the command \r\ndb.copyDatabase(fromdb,todb,fromhost) 复制数据库fromdb---源数据库名称，todb---目标数据库名称，fromhost---源数据库服务器地址 \r\ndb.createCollection(name,{size:3333,capped:333,max:88888}) 创建一个数据集，相当于一个表 \r\ndb.currentOp() 取消当前库的当前操作 \r\ndb.dropDataBase() 删除当前数据库 \r\ndb.eval(func,args) run code server-side \r\ndb.getCollection(cname) 取得一个数据集合，同用法：db[\'cname\'] or db.cname \r\ndb.getCollenctionNames() 取得所有数据集合的名称列表 \r\ndb.getLastError() 返回最后一个错误的提示消息 \r\ndb.getLastErrorObj() 返回最后一个错误的对象 \r\ndb.getMongo() 取得当前服务器的连接对象get the server connection object \r\ndb.getMondo().setSlaveOk() allow this connection to read from then nonmaster membr of a replica pair \r\ndb.getName() 返回当操作数据库的名称 \r\ndb.getPrevError() 返回上一个错误对象 \r\ndb.getProfilingLevel() ?什么等级 \r\ndb.getReplicationInfo() ?什么信息 \r\ndb.getSisterDB(name) get the db at the same server as this onew \r\ndb.killOp() 停止（杀死）在当前库的当前操作 \r\ndb.printCollectionStats() 返回当前库的数据集状态 \r\ndb.printReplicationInfo() \r\ndb.printSlaveReplicationInfo() \r\ndb.printShardingStatus() 返回当前数据库是否为共享数据库 \r\ndb.removeUser(username) 删除用户 \r\ndb.repairDatabase() 修复当前数据库 \r\ndb.resetError() \r\ndb.runCommand(cmdObj) run a database command. if cmdObj is a string, turns it into {cmdObj:1} \r\ndb.setProfilingLevel(level) 0=off,1=slow,2=all \r\ndb.shutdownServer() 关闭当前服务程序 \r\ndb.version() 返回当前程序的版本信息\r\n数据集(表)操作语法 \r\ndb.linlin.find({id:10}) 返回linlin数据集ID=10的数据集 \r\ndb.linlin.find({id:10}).count() 返回linlin数据集ID=10的数据总数 \r\ndb.linlin.find({id:10}).limit(2) 返回linlin数据集ID=10的数据集从第二条开始的数据集 \r\ndb.linlin.find({id:10}).skip(8) 返回linlin数据集ID=10的数据集从0到第八条的数据集 \r\ndb.linlin.find({id:10}).limit(2).skip(8) 返回linlin数据集ID=1=的数据集从第二条到第八条的数据 \r\ndb.linlin.find({id:10}).sort() 返回linlin数据集ID=10的排序数据集 \r\ndb.linlin.findOne([query]) 返回符合条件的一条数据 \r\ndb.linlin.getDB() 返回此数据集所属的数据库名称 \r\ndb.linlin.getIndexes() 返回些数据集的索引信息 \r\ndb.linlin.group({key:...,initial:...,reduce:...[,cond:...]}) \r\ndb.linlin.mapReduce(mayFunction,reduceFunction,<optional params>) \r\ndb.linlin.remove(query) 在数据集中删除一条数据 \r\ndb.linlin.renameCollection(newName) 重命名些数据集名称 \r\ndb.linlin.save(obj) 往数据集中插入一条数据 \r\ndb.linlin.stats() 返回此数据集的状态 \r\ndb.linlin.storageSize() 返回此数据集的存储大小 \r\ndb.linlin.totalIndexSize() 返回此数据集的索引文件大小 \r\ndb.linlin.totalSize() 返回些数据集的总大小 \r\ndb.linlin.update(query,object[,upsert_bool]) 在此数据集中更新一条数据 \r\ndb.linlin.validate() 验证此数据集 \r\ndb.linlin.getShardVersion() 返回数据集共享版本号 \r\n\r\ndb.linlin.find({\'name\':\'foobar\'}) select * from linlin where name=\'foobar\' \r\ndb.linlin.find() select * from linlin \r\ndb.linlin.find({\'ID\':10}).count() select count(*) from linlin where ID=10 \r\ndb.linlin.find().skip(10).limit(20) 从查询结果的第十条开始读20条数据 select * from linlin limit 10,20 ----------mysql \r\ndb.linlin.find({\'ID\':{$in:[25,35,45]}}) select * from linlin where ID in (25,35,45) \r\ndb.linlin.find().sort({\'ID\':-1}) select * from linlin order by ID desc \r\ndb.linlin.distinct(\'name\',{\'ID\':{$lt:20}}) select distinct(name) from linlin where ID<20 \r\ndb.linlin.group({key:{\'name\':true},cond:{\'name\':\'foo\'},reduce:function(obj,prev){prev.msum+=obj.marks;},initial:{msum:0}}) \r\nselect name,sum(marks) from linlin group by name \r\ndb.linlin.find(\'this.ID<20\',{name:1}) select name from linlin where ID<20 \r\ndb.linlin.insert({\'name\':\'foobar\',\'age\':25}) insert into linlin (\'name\',\'age\') values(\'foobar\',25) \r\ndb.linlin.insert({\'name\':\'foobar\',\'age\':25,\'email\':\'cclove2@163.com\'}) \r\ndb.linlin.remove({}) delete * from linlin \r\ndb.linlin.remove({\'age\':20}) delete linlin where age=20 \r\ndb.linlin.remove({\'age\':{$lt:20}}) delete linlin where age<20 \r\ndb.linlin.remove({\'age\':{$lte:20}}) delete linlin where age<=20 \r\ndb.linlin.remove({\'age\':{$gt:20}}) delete linlin where age>20 \r\ndb.linlin.remove({\'age\':{$gte:20}}) delete linlin where age>=20 \r\ndb.linlin.remove({\'age\':{$ne:20}}) delete linlin where age!=20 \r\ndb.linlin.update({\'name\':\'foobar\'},{$set:{\'age\':36}}) update linlin set age=36 where name=\'foobar\' \r\ndb.linlin.update({\'name\':\'foobar\'},{$inc:{\'age\':3}}) update linlin set age=age+3 where name=\'foobar\' \r\n\r\n> 官方提供的操作语句对照表： \r\n\r\n上行：SQL 操作语句 \r\n下行：Mongo 操作语句 \r\nCREATE TABLE USERS (a Number, b Number) \r\ndb.createCollection(\"mycoll\") \r\n\r\nINSERT INTO USERS VALUES(1,1) \r\ndb.users.insert({a:1,b:1}) \r\n\r\nSELECT a,b FROM users \r\ndb.users.find({}, {a:1,b:1}) \r\n\r\nSELECT * FROM users \r\ndb.users.find() \r\n\r\nSELECT * FROM users WHERE age=33 \r\ndb.users.find({age:33}) \r\n\r\nSELECT a,b FROM users WHERE age=33 \r\ndb.users.find({age:33}, {a:1,b:1}) \r\n\r\nSELECT * FROM users WHERE age=33 ORDER BY name \r\ndb.users.find({age:33}).sort({name:1}) \r\n\r\nSELECT * FROM users WHERE age>33 \r\ndb.users.find({\'age\':{$gt:33}})}) \r\n\r\nSELECT * FROM users WHERE age<33 \r\ndb.users.find({\'age\':{$lt:33}})}) \r\n\r\nSELECT * FROM users WHERE name LIKE \"%Joe%\" \r\ndb.users.find({name:/Joe/}) \r\n\r\nSELECT * FROM users WHERE name LIKE \"Joe%\" \r\ndb.users.find({name:/^Joe/}) \r\n\r\nSELECT * FROM users WHERE age>33 AND age<=40 \r\ndb.users.find({\'age\':{$gt:33,$lte:40}})}) \r\n\r\nSELECT * FROM users ORDER BY name DESC \r\ndb.users.find().sort({name:-1}) \r\n\r\nSELECT * FROM users WHERE a=1 and b=\'q\' \r\ndb.users.find({a:1,b:\'q\'}) \r\n\r\nSELECT * FROM users LIMIT 10 SKIP 20 \r\ndb.users.find().limit(10).skip(20) \r\n\r\nSELECT * FROM users WHERE a=1 or b=2 \r\ndb.users.find( { $or : [ { a : 1 } , { b : 2 } ] } ) \r\n\r\nSELECT * FROM users LIMIT 1 \r\ndb.users.findOne() \r\n\r\nSELECT DISTINCT last_name FROM users \r\ndb.users.distinct(\'last_name\') \r\n\r\nSELECT COUNT(*y) FROM users \r\ndb.users.count() \r\n\r\nSELECT COUNT(*y) FROM users where AGE > 30 \r\ndb.users.find({age: {\'$gt\': 30}}).count() \r\n\r\nSELECT COUNT(AGE) from users \r\ndb.users.find({age: {\'$exists\': true}}).count() \r\n\r\nCREATE INDEX myindexname ON users(name) \r\ndb.users.ensureIndex({name:1}) \r\n\r\nCREATE INDEX myindexname ON users(name,ts DESC) \r\ndb.users.ensureIndex({name:1,ts:-1}) \r\n\r\nEXPLAIN SELECT * FROM users WHERE z=3 \r\ndb.users.find({z:3}).explain() \r\n\r\nUPDATE users SET a=1 WHERE b=\'q\' \r\ndb.users.update({b:\'q\'}, {$set:{a:1}}, false, true) \r\n\r\nUPDATE users SET a=a+2 WHERE b=\'q\' \r\ndb.users.update({b:\'q\'}, {$inc:{a:2}}, false, true) \r\n\r\nDELETE FROM users WHERE z=\"abc\" \r\ndb.users.remove({z:\'abc\'}); \r\n\r\n参考网站 [http://www.cnblogs.com/no7dw/archive/2013/05/17/3083419.html][1]\r\n        [http://www.jb51.net/article/28694.htm][2]\r\n\r\n\r\n  [1]: http://www.cnblogs.com/no7dw/archive/2013/05/17/3083419.html\r\n  [2]: http://www.jb51.net/article/28694.htm', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('65', 'linux下PHP扩展redis模块安装', '65', '1431151920', '1449645400', '<!--markdown-->1. 上传源文件.    https://github.com/nicolasff/phpredis/archive/2.2.4.tar.gz  \r\n2. 运行  /usr/local/php5.4/bin/phpize\r\n3. 运行  ./configure --with-php-config=/usr/local/php5.4/bin/php-config\r\n4. make\r\n5. make install\r\n	> 输出 Installing shared extensions:     /usr/local/php5.4/lib/php/extensions/no-debug-zts-20100525/\r\n6. vi /usr/local/php5.4/php.ini\r\n	> 在文件最后(一定要在最后!!)添加如下内容.	\r\n	extension_dir = \"/usr/local/php5.4/lib/php/extensions/no-debug-zts-20100525/\"\r\n	extension=redis.so\r\n\r\n7. /usr/local/apache/bin/apachectl restart\r\n8.  访问 info.php,  redis.php 测试.\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('67', '有无JQ利用正则操作Class对比', '67', '1450257060', '1450257826', '<!--markdown-->无JQ下代码如下：\r\n```javascript\r\n//切换参数\r\nvar param = {\r\n		\'easyClose\' : true,\r\n		\'mask\' : true,\r\n	};\r\nfunction toggleParam(elem,type,value,defaultValue){\r\n	if(param[type]){\r\n		param[type] = defaultValue;\r\n		removeCls(elem,\'isSelected\');\r\n	}else{\r\n		addCls(elem,\'isSelected\');\r\n		param[type] = value;\r\n	}\r\n}\r\n/**\r\n* 判断dom是否拥有某个class\r\n*/\r\nfunction hasCls(dom,classSingle){\r\n	return dom.className && dom.className.match(new RegExp(\'(\\\\s|^)\' + classSingle + \'(\\\\s|$)\')) || false;\r\n}\r\n/**\r\n* 移除dom中的class\r\n*/\r\nfunction removeCls(dom,cls){\r\n	if (hasCls(dom, cls)) {\r\n        var reg = new RegExp(\'(\\\\s+|^)\' + cls + \'(\\\\s+|$)\');\r\n        dom.className = dom.className.replace(reg, \' \');\r\n      }\r\n}\r\n/**\r\n* 增加dom中的class\r\n*/\r\nfunction addCls(dom,cls){\r\n	if(!this.hasCls(dom,cls)) dom.className+=\"\"+cls;\r\n}\r\n\r\n```\r\n\r\n\r\n有JQ下操作Class\r\n```javascript\r\nfunction toggleParam(elem,type,value,defaultValue){\r\n	$(elem).toggleClass(\'isSelected\')\r\n	if(param[type]){\r\n		param[type] = defaultValue;\r\n	}else{\r\n		param[type] = value;\r\n	}\r\n}\r\n```\r\n对比之后发现JQ的对于开发速度上确实会快，很多操作都简便了。', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('86', 'Linux的五个查找命令', '86', '1439211540', '1450965607', '<!--markdown-->1. find\r\n\r\nfind是最常见和最强大的查找命令，你可以用它找到任何你想找的文件。\r\nfind的使用格式如下：\r\n　　$ find <指定目录> <指定条件> <指定动作>\r\n　　- <指定目录>： 所要搜索的目录及其所有子目录。默认为当前目录。\r\n　　- <指定条件>： 所要搜索的文件的特征。\r\n　　- <指定动作>： 对搜索结果进行特定的处理。\r\n如果什么参数也不加，find默认搜索当前目录及其子目录，并且不过滤任何结果（也就是返回所有文件），将它们全都显示在屏幕上。\r\nfind的使用实例：\r\n　　$ find . -name \'my*\'\r\n搜索当前目录（含子目录，以下同）中，所有文件名以my开头的文件。\r\n　　$ find . -name \'my*\' -ls\r\n搜索当前目录中，所有文件名以my开头的文件，并显示它们的详细信息。\r\n　　$ find . -type f -mmin -10\r\n搜索当前目录中，所有过去10分钟中更新过的普通文件。如果不加-type f参数，则搜索普通文件+特殊文件+目录。\r\n\r\n2. locate\r\n\r\nlocate命令其实是\"find -name\"的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库（/var/lib/locatedb），这个数据库中含有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。\r\nlocate命令的使用实例：\r\n　　$ locate /etc/sh\r\n搜索etc目录下所有以sh开头的文件。\r\n　　$ locate ~/m\r\n搜索用户主目录下，所有以m开头的文件。\r\n　　$ locate -i ~/m\r\n搜索用户主目录下，所有以m开头的文件，并且忽略大小写。\r\n\r\n3. whereis\r\n\r\nwhereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。\r\nwhereis命令的使用实例：\r\n　　$ whereis grep\r\n\r\n4. which\r\n\r\nwhich命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。\r\nwhich命令的使用实例：\r\n　　$ which grep\r\n\r\n5. type\r\n\r\ntype命令其实不能算查找命令，它是用来区分某个命令到底是由shell自带的，还是由shell外部的独立二进制文件提供的。如果一个命令是外部命令，那么使用-p参数，会显示该命令的路径，相当于which命令。\r\ntype命令的使用实例：\r\n　　$ type cd\r\n系统会提示，cd是shell的自带命令（build-in）。\r\n　　$ type grep\r\n系统会提示，grep是一个外部命令，并显示该命令的路径。\r\n　　$ type -p grep\r\n加上-p参数后，就相当于which命令。', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('85', 'MySQL server PID file could not be found!', '85', '1450965269', '1450965351', '<!--markdown-->遇到问题  [解决方法]MySql提示:The server quit without updating PID file(…)失败\r\n\r\ngoogle了下 ，问题可能的原因有多种，具体什么原因最好的办法是先查看下错误日志：\r\n\r\n1. 可能是/usr/local/mysql/data/rekfan.pid文件没有写的权限\r\n解决方法 ：给予权限，执行 “chown -R mysql:mysql /var/data” “chmod -R 755 /usr/local/mysql/data”  然后重新启动mysqld！\r\n\r\n2. 可能进程里已经存在mysql进程\r\n解决方法：用命令“ps -ef|grep mysqld”查看是否有mysqld进程，如果有使用“kill -9  进程号”杀死，然后重新启动mysqld！\r\n\r\n3. 可能是第二次在机器上安装mysql，有残余数据影响了服务的启动。\r\n解决方法：去mysql的数据目录/data看看，如果存在mysql-bin.index，就赶快把它删除掉吧，它就是罪魁祸首了。本人就是使用第三条方法解决的 ！http://blog.rekfan.com/?p=186\r\n\r\n4. mysql在启动时没有指定配置文件时会使用/etc/my.cnf配置文件，请打开这个文件查看在[mysqld]节下有没有指定数据目录(datadir)。\r\n解决方法：请在[mysqld]下设置这一行：datadir = /usr/local/mysql/data\r\n\r\n5. skip-federated字段问题\r\n解决方法：检查一下/etc/my.cnf文件中有没有没被注释掉的skip-federated字段，如果有就立即注释掉吧。\r\n\r\n6. 错误日志目录不存在\r\n解决方法：使用“chown” “chmod”命令赋予mysql所有者及权限\r\n\r\n7. selinux惹的祸，如果是centos系统，默认会开启selinux\r\n解决方法：关闭它，打开/etc/selinux/config，把SELINUX=enforcing改为SELINUX=disabled后存盘退出重启机器试试。\r\n\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('70', '设置网址重写 .htaccess', '70', '1450340820', '1450342087', '<!--markdown-->强制添加 www：\r\n\r\n```\r\nRewriteEngine On\r\nRewriteCond %{HTTP_HOST} ^your-site.com [NC]\r\nRewriteRule ^(.*)$ http://www.your-site.com/$1 [L,R=301]\r\n```\r\n\r\n强制去除 www：\r\n\r\n```\r\nRewriteEngine On\r\nRewriteCond %{HTTP_HOST} !^your-site.com$ [NC]\r\nRewriteRule ^(.*)$ http://your-site.com/$1 [L,R=301]\r\n```\r\n\r\n去除网址 index.php\r\n\r\n```\r\nRewriteEngine On\r\nRewriteBase /\r\nRewriteCond %{REQUEST_FILENAME} !-f\r\nRewriteCond %{REQUEST_FILENAME} !-d\r\nRewriteRule ^(.*)$ /index.php/$1 [L]\r\n```\r\n\r\n设置过期时间\r\n```\r\n# BEGIN EXPIRES\r\n<IfModule mod_expires.c>\r\n    ExpiresActive On\r\n    ExpiresDefault \"access plus 10 days\"\r\n    ExpiresByType text/css \"access plus 1 week\"\r\n    ExpiresByType text/plain \"access plus 1 month\"\r\n    ExpiresByType image/gif \"access plus 1 month\"\r\n    ExpiresByType image/png \"access plus 1 month\"\r\n    ExpiresByType image/jpeg \"access plus 1 month\"\r\n    ExpiresByType application/x-javascript \"access plus 1 month\"\r\n    ExpiresByType application/javascript \"access plus 1 week\"\r\n    ExpiresByType application/x-icon \"access plus 1 year\"\r\n</IfModule>\r\n# END EXPIRES\r\n```\r\n文件夹密码访问\r\n```\r\nAuthType Basic\r\nAuthName \"This Area is Password Protected\"\r\nAuthUserFile /full/path/to/.htpasswd\r\nRequire valid-user\r\n```\r\n\r\n[Reference](https://css-tricks.com/snippets/htaccess/password-protect-folders/)\r\n\r\n\r\n```\r\n# BEGIN GZIP\r\n<ifmodule mod_deflate.c>\r\nAddOutputFilterByType DEFLATE text/text text/html text/plain text/xml text/css application/x-javascript application/javascript\r\n</ifmodule>\r\n# END GZIP\r\n```\r\n压缩\r\n```\r\n<IfModule mod_filter.c>\r\n    AddOutputFilterByType DEFLATE \"application/atom+xml\" \\\r\n                                  \"application/javascript\" \\\r\n                                  \"application/json\" \\\r\n                                  \"application/ld+json\" \\\r\n                                  \"application/manifest+json\" \\\r\n                                  \"application/rdf+xml\" \\\r\n                                  \"application/rss+xml\" \\\r\n                                  \"application/schema+json\" \\\r\n                                  \"application/vnd.geo+json\" \\\r\n                                  \"application/vnd.ms-fontobject\" \\\r\n                                  \"application/x-font-ttf\" \\\r\n                                  \"application/x-javascript\" \\\r\n                                  \"application/x-web-app-manifest+json\" \\\r\n                                  \"application/xhtml+xml\" \\\r\n                                  \"application/xml\" \\\r\n                                  \"font/eot\" \\\r\n                                  \"font/opentype\" \\\r\n                                  \"image/bmp\" \\\r\n                                  \"image/svg+xml\" \\\r\n                                  \"image/vnd.microsoft.icon\" \\\r\n                                  \"image/x-icon\" \\\r\n                                  \"text/cache-manifest\" \\\r\n                                  \"text/css\" \\\r\n                                  \"text/html\" \\\r\n                                  \"text/javascript\" \\\r\n                                  \"text/plain\" \\\r\n                                  \"text/vcard\" \\\r\n                                  \"text/vnd.rim.location.xloc\" \\\r\n                                  \"text/vtt\" \\\r\n                                  \"text/x-component\" \\\r\n                                  \"text/x-cross-domain-policy\" \\\r\n                                  \"text/xml\"\r\n\r\n</IfModule>\r\n```\r\n更多请往[github](https://github.com/junhey/studyNotes/blob/master/htaccess.md)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('75', '青葱创业计划--这个很不错，作为摘录', '75', '1450756481', '1450757929', '<!--markdown--># 摘要\r\n\r\n「青葱创业计划」是国内第一个针对大学生科技创业的技术性创业扶持计划，由七牛云存储发起并联合各领域合作伙伴共同推出。我们希望通过青葱计划，通过技术的力量能够帮助大学生创业者在创业初期能够更快更专注的开发产品。在计划中，我们会提供包括创业技术指导、人才培训、基础云服务、开源软件及开发工具等免费的创业扶持资源。\r\n\r\n> 创业需要导师，需要平台，青葱把所有导师和平台列了一个，可以参考\r\n\r\n# [青葱活动链接](http://hd.qiniu.com/qingcong)\r\n\r\n![青葱活动1.png][1]\r\n\r\n![青葱活动2.png][2]\r\n\r\n  [1]: http://junhey.com/usr/uploads/2015/12/1425343916.png\r\n  [2]: http://junhey.com/usr/uploads/2015/12/781191523.png', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('77', '青葱活动1.png', '青葱活动1-png', '1450757830', '1450757830', 'a:5:{s:4:\"name\";s:17:\"青葱活动1.png\";s:4:\"path\";s:35:\"/usr/uploads/2015/12/1425343916.png\";s:4:\"size\";i:195981;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '75');
INSERT INTO `typecho_contents` VALUES ('78', '青葱活动2.png', '青葱活动2-png', '1450757830', '1450757830', 'a:5:{s:4:\"name\";s:17:\"青葱活动2.png\";s:4:\"path\";s:34:\"/usr/uploads/2015/12/781191523.png\";s:4:\"size\";i:85255;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '2', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '75');
INSERT INTO `typecho_contents` VALUES ('79', '移动web的简要知识', '79', '1450928400', '1450933308', '<!--markdown--># viewport\r\n\r\n> viewport，翻译为中文可以叫做“视区”，大家都知道移动设备的屏幕一般都比PC小很多，webkit浏览器会将一个较大的“虚拟”窗口映射到移动设备的屏幕上，默认的虚拟窗口为980像素宽（目前大部分网站的标准宽度），然后按一定的比例（3：1或2：1）进行缩放。也就是说当我们加载一个普通网页的时候，webkit会先以980像素的浏览器标准加载网页，然后再缩小为490像素的宽度。注意这个缩小是一个全局缩小，也就是页面上的所有元素都会缩小。他有以下几个属性\r\n- width 控制 viewport 的大小，一般为了自适应设置为device-width\r\n- height 一般为了自适应设置为device-height\r\n- target-densitydpi 设备的默认缩。打个比方说，一张320*480的图片，放在iphone4里面，默认是占满屏幕的，但如果定义了target-densitydpi=device-dpi，那么图片只占屏幕的四分之一（二分之一的平方），因为iphone4的默认缩放比例为2(查上表)。\r\n他可以设置的之如下：\r\n- low-dpi – 使用ldpi作为目标 dpi。中等像素密度和高像素密度设备相应放大\r\n- medium-dpi – 使用mdpi作为目标 dpi。 高像素密度设备相应放大， 像素密度设备相应缩小。 这是默认的target density.\r\n- device-dpi 使用设备原本的 dpi 作为目标 dp。 不会发生默认缩放。\r\n- high-dpi 使用hdpi 作为目标 dpi。 中等像素密度和低像素密度设备相应缩小\r\n- initial-scale 初始缩放，如果你设置初始缩放为“1.0”，那么，web页面在展现的时候就会以target density分辨率的1:1来展现\r\n- maximum-scale 最大缩放。即允许的最大缩放程度。这也是一个浮点值，用以指出页面大小与屏幕大小相比的最大乘数。\r\n- user-scalable 用户调整缩放。即用户是否能改变页面缩放程度。如果设置为yes则是允许用户对其进行改变，反之为no。\r\n\r\n> 常见viewport设置\r\n\r\n```html\r\n    <meta name=\"viewport\" content=\"width=device-width,target-densitydpi=high-dpi,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\"/>\r\n```\r\n\r\n> 移动Web布局三种方法\r\n\r\n1. fixed\r\n\r\n实现原理就是header和footer部分都为fixed定位。内容页面可以使用-webkit-overflow-scrolling:touch来进行滚动，当然，对于不支持的，也可以使用iscroll来兼容\r\n\r\n2. absolute\r\n\r\n和fixed一样，只不过将fixed定位设为绝对定位。设定其left,right等值。下面有一个绝对定位的DEMO。\r\n\r\n3. flexbox\r\n\r\nflexbox布局我估计是仿照flex*布局方式。由于主流移动端都使用的现代浏览器都支持这个CSS3属性。Flexbox布局俗称伸缩布局，它可以简单快速的创建一个具有弹性功能的布局。由于移动多终端的需求，所以首选是flexbox。\r\n\r\n> 背景图片\r\n\r\nbackground-size设置为高度，自适应宽度100%，这也是CSS3的属性。\r\n\r\n> 文字\r\n\r\n1. px单位\r\n\r\n传统PC端常用的px来设置大小。因为他比较稳定和精确。\r\n\r\n2. em单位\r\n\r\n浏览器中放大或缩放浏览页面时会存在一个问题，因为字体大小是固定了的。要解决这个问题，我们可以使用“em”单位。 em有如下特点：\r\n- em的值并不是固定的;\r\n- em会继承父级元素的字体大小。\r\n\r\n3. rem单位\r\n\r\nrem是CSS3的属性，和em一样，他的值是不固定的。区别在于他参考的是一个根元素的确定值。em是相对于其父元素来设置字体大小的，这样就会存在一个问题，进行任何元素设置，都有可能需要知道他父元素的大小，在我们多次使用时，就会带来无法预知的错误风险。而rem是相对于根元素html，这样就意味着，我们只需要在根元素确定一个参考值。\r\n\r\n在了解了px,em,rem的区别后，我们可以进行如下设置：\r\n```\r\nhtml { font-size: 62.5%; } \r\nbody { font-size: 14px; font-size: 1.4rem; }\r\n```\r\n我们在写大小的时候通过一些简单的计算就可以了，比如的拿到的设计稿有一一部分为18px的文字，那我们在写代码的时候就可以写：\r\n```\r\np : {font-size:18px；font-size:1.8rem}/*(1.8 x 10=18)*/\r\n```\r\n> 动画\r\n\r\n移动端动画优先选择为以下顺序：\r\ntransition > Animation > js\r\n\r\n> 一些事件\r\n\r\n移动端原生的最重要的事件touch ：\r\n- touchstart\r\n- touchmove\r\n- touchend\r\n- touchcancel\r\n\r\n其中，他们之间触发的先后顺序为：\r\ntouchstart > touchmove > touchend > click\r\n移动端click会延迟300ms，原因是他在等待判断是不是双击。当然，现在的一些框架解决了这个问题：\r\n- [fastclick](https://github.com/ftlabs/fastclick)\r\n- [tap.js](https://github.com/alexgibson/tap.js)\r\n\r\n用这几个事件可以衍生出很多事件，比如左滑右滑，上下滑屏，放大，缩放等。现在已经有一些封装了的框架：\r\n- hammer.js(https://github.com/hammerjs/hammer.js)\r\n- touch.js(https://github.com/Clouda-team/touch.code.baidu.com)\r\n\r\n当然还有其他移动端专属的事件，比如：\r\n- 触摸事件\r\n- 屏幕旋转事件\r\n\r\n参考网站：\r\n- [移动Web初级入门](http://www.cnblogs.com/hacke2/p/4090079.html)\r\n- [指尖下的js](http://www.cnblogs.com/pifoo/archive/2011/05/23/webkit-touch-event-1.html)\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('87', 'linux的命令', '87', '1452138060', '1452151756', '<!--markdown-->1、cd命令\r\n这是一个非常基本，也是大家经常需要使用的命令，它用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。如：\r\ncd /root/Docements # 切换到目录/root/Docements  \r\ncd ./path          # 切换到当前目录下的path目录中，“.”表示当前目录    \r\ncd ../path         # 切换到上层目录中的path目录中，“..”表示上一层目录  \r\n\r\n2、ls命令\r\n这是一个非常有用的查看文件与目录的命令，list之意，它的参数非常多，下面就列出一些我常用的参数吧，如下：\r\n-l ：列出长数据串，包含文件的属性与权限数据等  \r\n-a ：列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用）  \r\n-d ：仅列出目录本身，而不是列出目录的文件数据  \r\n-h ：将文件容量以较易读的方式（GB，kB等）列出来  \r\n-R ：连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来  \r\n注：这些参数也可以组合使用，下面举两个例子：\r\nls -l #以长数据串的形式列出当前目录下的数据文件和目录  \r\nls -lR #以长数据串的形式列出当前目录下的所有文件  \r\n\r\n3、grep命令\r\n该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等，它的简单语法为\r\ngrep [-acinv] [--color=auto] \'查找字符串\' filename  \r\n它的常用参数如下：\r\n-a ：将binary文件以text文件的方式查找数据  \r\n-c ：计算找到‘查找字符串’的次数  \r\n-i ：忽略大小写的区别，即把大小写视为相同  \r\n-v ：反向选择，即显示出没有‘查找字符串’内容的那一行  \r\n例如：  \r\n取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色  \r\ngrep --color=auto \'MANPATH\' /etc/man.config  \r\n把ls -l的输出中包含字母file（不区分大小写）的内容输出  \r\nls -l | grep -i file  \r\n\r\n4、find命令\r\nfind是一个基于查找的功能非常强大的命令，相对而言，它的使用也相对较为复杂，参数也比较多，所以在这里将给把它们分类列出，它的基本语法如下：\r\nfind [PATH] [option] [action]  \r\n  \r\n与时间有关的参数：  \r\n-mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；  \r\n-mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；  \r\n-mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；  \r\n-newer file : 列出比file还要新的文件名  \r\n例如：  \r\nfind /root -mtime 0 # 在当前目录下查找今天之内有改动的文件  \r\n  \r\n与用户或用户组名有关的参数：  \r\n-user name : 列出文件所有者为name的文件  \r\n-group name : 列出文件所属用户组为name的文件  \r\n-uid n : 列出文件所有者为用户ID为n的文件  \r\n-gid n : 列出文件所属用户组为用户组ID为n的文件  \r\n例如：  \r\nfind /home/ljianhui -user ljianhui 在目录/home/ljianhui中找出所有者为ljianhui的文件  \r\n  \r\n与文件权限及名称有关的参数：  \r\n-name filename ：找出文件名为filename的文件  \r\n-size [+-]SIZE ：找出比SIZE还要大（+）或小（-）的文件  \r\n-tpye TYPE ：查找文件的类型为TYPE的文件，TYPE的值主要有：一般文件（f)、设备文件（b、c）、  \r\n             目录（d）、连接文件（l）、socket（s）、FIFO管道文件（p）；  \r\n-perm mode ：查找文件权限刚好等于mode的文件，mode用数字表示，如0755；  \r\n-perm -mode ：查找文件权限必须要全部包括mode权限的文件，mode用数字表示  \r\n-perm +mode ：查找文件权限包含任一mode的权限的文件，mode用数字表示  \r\n例如：  \r\nfind / -name passwd # 查找文件名为passwd的文件  \r\nfind . -perm 0755 # 查找当前目录中文件权限的0755的文件  \r\nfind . -size +12k # 查找当前目录中大于12KB的文件，注意c表示byte  \r\n\r\n5、cp命令\r\n该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下，它的常用参数如下：\r\n-a ：将文件的特性一起复制  \r\n-p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份  \r\n-i ：若目标文件已经存在时，在覆盖时会先询问操作的进行  \r\n-r ：递归持续复制，用于目录的复制行为  \r\n-u ：目标文件与源文件有差异时才会复制  \r\n例如 ：\r\ncp -a file1 file2 #连同文件的所有特性把文件file1复制成文件file2  \r\ncp file1 file2 file3 dir #把文件file1、file2、file3复制到目录dir中  \r\n\r\n6、mv命令\r\n该命令用于移动文件、目录或更名，move之意，它的常用参数如下：\r\n-f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖  \r\n-i ：若目标文件已经存在，就会询问是否覆盖  \r\n-u ：若目标文件已经存在，且比目标文件新，才会更新  \r\n注：该命令可以把一个文件或多个文件一次移动一个文件夹中，但是最后一个目标文件一定要是“目录”。\r\n例如：\r\nmv file1 file2 file3 dir # 把文件file1、file2、file3移动到目录dir中  \r\nmv file1 file2 # 把文件file1重命名为file2  \r\n\r\n7、rm命令\r\n该命令用于删除文件或目录，remove之间，它的常用参数如下：\r\n-f ：就是force的意思，忽略不存在的文件，不会出现警告消息  \r\n-i ：互动模式，在删除前会询问用户是否操作  \r\n-r ：递归删除，最常用于目录删除，它是一个非常危险的参数  \r\n例如：\r\nrm -i file # 删除文件file，在删除之前会询问是否进行该操作  \r\nrm -fr dir # 强制删除目录dir中的所有文件  \r\n\r\n8、ps命令\r\n该命令用于将某个时间点的进程运行情况选取下来并输出，process之意，它的常用参数如下：\r\n-A ：所有的进程均显示出来  \r\n-a ：不与terminal有关的所有进程  \r\n-u ：有效用户的相关进程  \r\n-x ：一般与a参数一起使用，可列出较完整的信息  \r\n-l ：较长，较详细地将PID的信息列出  \r\n其实我们只要记住ps一般使用的命令参数搭配即可，它们并不多，如下：\r\nps aux # 查看系统所有的进程数据  \r\nps ax # 查看不与terminal有关的所有进程  \r\nps -lA # 查看系统所有的进程数据  \r\nps axjf # 查看连同一部分进程树状态  \r\n\r\n9、kill命令\r\n该命令用于向某个工作（%jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用，它的基本语法如下：\r\nkill -signal PID  \r\nsignal的常用参数如下：\r\n注：最前面的数字为信号的代号，使用时可以用代号代替相应的信号。\r\n1：SIGHUP，启动被终止的进程  \r\n2：SIGINT，相当于输入ctrl+c，中断一个程序的进行  \r\n9：SIGKILL，强制中断一个进程的进行  \r\n15：SIGTERM，以正常的结束进程方式来终止进程  \r\n17：SIGSTOP，相当于输入ctrl+z，暂停一个进程的进行  \r\n例如：\r\n以正常的结束进程方式来终于第一个后台工作，可用jobs命令查看后台中的第一个工作进程  \r\nkill -SIGTERM %1   \r\n重新改动进程ID为PID的进程，PID可用ps命令通过管道命令加上grep命令进行筛选获得  \r\nkill -SIGHUP PID  \r\n\r\n10、killall命令\r\n该命令用于向一个命令启动的进程发送一个信号，它的一般语法如下：\r\nkillall [-iIe] [command name]  \r\n它的参数如下：\r\n-i ：交互式的意思，若需要删除时，会询问用户  \r\n-e ：表示后面接的command name要一致，但command name不能超过15个字符  \r\n-I ：命令名称忽略大小写  \r\n例如：  \r\nkillall -SIGHUP syslogd # 重新启动syslogd  \r\n\r\n11、file命令\r\n该命令用于判断接在file命令后的文件的基本数据，因为在Linux下文件的类型并不是以后缀为分的，所以这个命令对我们来说就很有用了，它的用法非常简单，基本语法如下：\r\nfile filename  \r\n例如：  \r\nfile ./test  \r\n\r\n12、tar命令\r\n该命令用于对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压。它的常用参数如下：\r\n-c ：新建打包文件  \r\n-t ：查看打包文件的内容含有哪些文件名  \r\n-x ：解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中  \r\n-j ：通过bzip2的支持进行压缩/解压缩  \r\n-z ：通过gzip的支持进行压缩/解压缩  \r\n-v ：在压缩/解压缩过程中，将正在处理的文件名显示出来  \r\n-f filename ：filename为要处理的文件  \r\n-C dir ：指定压缩/解压缩的目录dir  \r\n上面的解说可以已经让你晕过去了，但是通常我们只需要记住下面三条命令即可：\r\n压缩：tar -jcv -f filename.tar.bz2 要被处理的文件或目录名称  \r\n查询：tar -jtv -f filename.tar.bz2  \r\n解压：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录  \r\n注：文件名并不定要以后缀tar.bz2结尾，这里主要是为了说明使用的压缩程序为bzip2\r\n\r\n13、cat命令\r\n该命令用于查看文本文件的内容，后接要查看的文件名，通常可用管道与more和less一起使用，从而可以一页页地查看数据。例如：\r\ncat text | less # 查看text文件中的内容  \r\n注：这条命令也可以使用less text来代替  \r\n\r\n14、chgrp命令\r\n该命令用于改变文件所属用户组，它的使用非常简单，它的基本用法如下：\r\nchgrp [-R] dirname/filename  \r\n-R ：进行递归的持续对所有文件和子目录更改  \r\n例如：  \r\nchgrp users -R ./dir # 递归地把dir目录下中的所有文件和子目录下所有文件的用户组修改为users  \r\n\r\n15、chown命令\r\n该命令用于改变文件的所有者，与chgrp命令的使用方法相同，只是修改的文件属性不同，不再详述。\r\n\r\n16、chmod命令\r\n该命令用于改变文件的权限，一般的用法如下：\r\nchmod [-R] xyz 文件或目录  \r\n-R：进行递归的持续更改，即连同子目录下的所有文件都会更改  \r\n同时，chmod还可以使用u（user）、g（group）、o（other）、a（all）和+（加入）、-（删除）、=（设置）跟rwx搭配来对文件的权限进行更改。\r\n例如：  \r\nchmod 0755 file # 把file的文件权限改变为-rxwr-xr-x  \r\nchmod g+w file # 向file的文件权限中加入用户组可写权限  \r\n18、vim命令\r\n该命令主要用于文本编辑，它接一个或多个文件名作为参数，如果文件存在就打开，如果文件不存在就以该文件名创建一个文件。vim是一个非常好用的文本编辑器，它里面有很多非常好用的命令，在这里不再多说。你可以从这里下载vim常用操作的详细说明。\r\n\r\n19、gcc命令\r\n对于一个用Linux开发C程序的人来说，这个命令就非常重要了，它用于把C语言的源程序文件，编译成可执行程序，由于g++的很多参数跟它非常相似，所以这里只介绍gcc的参数，它的常用参数如下：\r\n-o ：output之意，用于指定生成一个可执行文件的文件名  \r\n-c ：用于把源文件生成目标文件（.o)，并阻止编译器创建一个完整的程序  \r\n-I ：增加编译时搜索头文件的路径  \r\n-L ：增加编译时搜索静态连接库的路径  \r\n-S ：把源文件生成汇编代码文件  \r\n-lm：表示标准库的目录中名为libm.a的函数库  \r\n-lpthread ：连接NPTL实现的线程库  \r\n-std= ：用于指定把使用的C语言的版本  \r\n  \r\n例如：  \r\n把源文件test.c按照c99标准编译成可执行程序test  \r\ngcc -o test test.c -lm -std=c99  \r\n把源文件test.c转换为相应的汇编程序源文件test.s  \r\ngcc -S test.c  \r\n\r\n20、time命令\r\n该命令用于测算一个命令（即程序）的执行时间。它的使用非常简单，就像平时输入命令一样，不过在命令的前面加入一个time即可，例如：\r\ntime ./process  \r\ntime ps aux  \r\n在程序或命令运行结束后，在最后输出了三个时间，它们分别是：\r\nuser：用户CPU时间，命令执行完成花费的用户CPU时间，即命令在用户态中执行时间总和；\r\nsystem：系统CPU时间，命令执行完成花费的系统CPU时间，即命令在核心态中执行时间总和；\r\nreal：实际时间，从command命令行开始执行到运行终止的消逝时间；\r\n\r\n注：用户CPU时间和系统CPU时间之和为CPU时间，即命令占用CPU执行的时间总和。实际时间要大于CPU时间，因为Linux是多任务操作系统，往往在执行一条命令时，系统还要处理其它任务。另一个需要注意的问题是即使每次执行相同命令，但所花费的时间也是不一样，其花费时间是与系统运行相关的。', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('81', '布局小记', '81', '1449636780', '1450933938', '<!--markdown-->> 列表页布局有N种\r\n\r\n- float布局\r\n\r\nfloat 布局 需要注意兼容性，还有父元素清空浮动\r\n\r\n- display:inline-block;\r\n\r\ninline-block 布局需要注意宽度不同时顶端对其vertical-align:top,letter-spacing:0;还有父元素font-size:0;\r\neg：\r\n```\r\nul{text-align:justify;}\r\nli{display:inline-block;}\r\n```\r\n对于IE8浏览器，列表元素不能处在font-size:0的环境下，至少code>font-size:1px，因为IE8浏览器font-size:0或直接把换行空格或普通空格抹掉而无法实现两端对齐效果。[参考](http://www.zhangxinxu.com/wordpress/?p=1514)\r\n\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('90', '阿里云linux一键安装web环境', '90', '1446540300', '1452156893', '<!--markdown-->------------------------- 自动安装过程 -------------------------\r\n\r\n图文教程地址：http://help.aliyun.com/manual?spm=0.0.0.0.oMceY0&helpId=129\r\n\r\n此安装包可在阿里云所有linux系统上部署安装。\r\n\r\n此安装包包含的软件及版本为：\r\nnginx：1.0.15、1.2.5、1.4.4（删除老版本1.0.4）\r\napache：2.2.22、2.4.2\r\nmysql：5.1.73、5.5.35、5.6.15\r\nphp：5.3.18、5.4.23、5.5.7（删除老版本5.2.17）\r\nphp扩展：memcache、Zend Engine/OPcache\r\nftp：（yum/apt-get安装）\r\nphpwind：8.7 GBK\r\nphpmyadmin：3.2.2.2\r\n\r\n安装步骤：\r\n\r\nxshell/xftp上传sh目录\r\n\r\nchmod –R 777 sh\r\ncd sh\r\n./install.sh\r\n\r\n安装完成后请查看account.log文件，数据库密码在里面。\r\n\r\n卸载步骤：\r\n./uninstall.sh\r\n\r\n相关文件：\r\n[Linux一键安装web环境全攻略.pdf][1]\r\n[Linux一键安装web环境使用教程.pdf][2]\r\n[sh-1.4.5.zip][3]\r\n\r\n\r\n相关链接：\r\n[http://market.aliyun.com/products/53690006/cmgj000262.html][4]\r\n[http://www.cnblogs.com/ada-zheng/p/3724957.html][5]\r\n\r\n\r\n  [1]: http://junhey.com/usr/uploads/2016/01/3412166618.pdf\r\n  [2]: http://junhey.com/usr/uploads/2016/01/2361605688.pdf\r\n  [3]: http://junhey.com/usr/uploads/2016/01/2206388391.zip\r\n  [4]: http://market.aliyun.com/products/53690006/cmgj000262.html\r\n  [5]: http://www.cnblogs.com/ada-zheng/p/3724957.html', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('91', 'Linux一键安装web环境全攻略.pdf', 'Linux一键安装web环境全攻略-pdf', '1452156529', '1452156529', 'a:5:{s:4:\"name\";s:39:\"Linux一键安装web环境全攻略.pdf\";s:4:\"path\";s:35:\"/usr/uploads/2016/01/3412166618.pdf\";s:4:\"size\";i:1792275;s:4:\"type\";s:3:\"pdf\";s:4:\"mime\";s:15:\"application/pdf\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '90');
INSERT INTO `typecho_contents` VALUES ('92', 'Linux一键安装web环境使用教程.pdf', 'Linux一键安装web环境使用教程-pdf', '1452156530', '1452156530', 'a:5:{s:4:\"name\";s:42:\"Linux一键安装web环境使用教程.pdf\";s:4:\"path\";s:35:\"/usr/uploads/2016/01/2361605688.pdf\";s:4:\"size\";i:1072576;s:4:\"type\";s:3:\"pdf\";s:4:\"mime\";s:15:\"application/pdf\";}', '2', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '90');
INSERT INTO `typecho_contents` VALUES ('93', 'sh-1.4.5.zip', 'sh-1-4-5-zip', '1452156745', '1452156745', 'a:5:{s:4:\"name\";s:12:\"sh-1.4.5.zip\";s:4:\"path\";s:35:\"/usr/uploads/2016/01/2206388391.zip\";s:4:\"size\";i:77116;s:4:\"type\";s:3:\"zip\";s:4:\"mime\";s:15:\"application/zip\";}', '3', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '90');
INSERT INTO `typecho_contents` VALUES ('94', 'linux 下 apache启动、停止、重启命令', '94', '1436257020', '1452654273', '<!--markdown-->基本的操作方法：\r\n本文假设你的apahce安装目录为/usr/local/apache2，这些方法适合任何情况\r\napahce启动命令：\r\n推荐/usr/local/apache2/bin/apachectl start apaceh启动\r\napache停止命令\r\n/usr/local/apache2/bin/apachectl stop   停止\r\napache重新启动命令：\r\n/usr/local/apache2/bin/apachectl restart 重启\r\n要在重启 Apache 服务器时不中断当前的连接，则应运行：\r\n/usr/local/sbin/apachectl graceful\r\n如果apache安装成为linux的服务的话，可以用以下命令操作：\r\nservice httpd start 启动\r\nservice httpd restart 重新启动\r\nservice httpd stop 停止服务\r\n\r\nLinux系统为Ubuntu\r\n一、Start Apache 2 Server /启动apache服务\r\n  /etc/init.d/apache2 start\r\nor\r\n$ sudo /etc/init.d/apache2 start\r\n二、 Restart Apache 2 Server /重启apache服务\r\n  /etc/init.d/apache2 restart\r\nor\r\n$ sudo /etc/init.d/apache2 restart\r\n三、Stop Apache 2 Server /停止apache服务\r\n  /etc/init.d/apache2 stop\r\nor\r\n$ sudo /etc/init.d/apache2 stop', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('117', 'JavaScript面向对象编程', '117', '1447643700', '1452655324', '<!--markdown-->Javascript是一个类C的语言，他的面向对象的东西相对于C++/Java比较奇怪，但是其的确相当的强大，在 Todd 同学的“对象的消息模型”一文中我们已经可以看到一些端倪了。这两天有个前同事总在问我Javascript面向对象的东西，所以，索性写篇文章让他看去吧，这里这篇文章主要想从一个整体的角度来说明一下Javascript的面向对象的编程。\r\n初探\r\n我们知道Javascript中的变量定义基本如下：\r\n```\r\nvar name = \'Chen Hao\';;\r\nvar email = \'haoel(@)hotmail.com\';\r\nvar website = \'http://coolshell.cn\';\r\n```\r\n如果要用对象来写的话，就是下面这个样子：\r\n```\r\nvar chenhao = {\r\n    name :\'Chen Hao\',\r\n    email : \'haoel(@)hotmail.com\',\r\n    website : \'http://coolshell.cn\'\r\n};\r\n```\r\n于是，我就可以这样访问：\r\n```\r\n//以成员的方式\r\nchenhao.name;\r\nchenhao.email;\r\nchenhao.website;\r\n```\r\n```\r\n//以hash map的方式\r\nchenhao[\"name\"];\r\nchenhao[\"email\"];\r\nchenhao[\"website\"];\r\n```\r\n关于函数，我们知道Javascript的函数是这样的：\r\n```\r\nvar doSomething = function(){\r\n   alert(\'Hello World.\');\r\n};\r\n```\r\n于是，我们可以这么干：\r\n```\r\nvar sayHello = function(){\r\n   var hello = \"Hello, I\'m \"+ this.name\r\n                + \", my email is: \" + this.email\r\n                + \", my website is: \" + this.website;\r\n   alert(hello);\r\n};\r\n```\r\n//直接赋值，这里很像C/C++的函数指针\r\n```\r\nchenhao.Hello = sayHello;\r\nchenhao.Hello();\r\n```\r\n相信这些东西都比较简单，大家都明白了。 可以看到javascript对象函数是直接声明，直接赋值，直接就用了。runtime的动态语言。\r\n\r\n还有一种比较规范的写法是：\r\n```\r\n//我们可以看到， 其用function来做class。\r\nvar Person = function(name, email, website){\r\n    this.name = name;\r\n    this.email = email;\r\n    this.website = website;\r\n\r\n    this.sayHello = function(){\r\n        var hello = \"Hello, I\'m \"+ this.name  + \", \\n\" +\r\n                    \"my email is: \" + this.email + \", \\n\" +\r\n                    \"my website is: \" + this.website;\r\n        alert(hello);\r\n    };\r\n};\r\n\r\nvar chenhao = new Person(\"Chen Hao\", \"haoel@hotmail.com\",\r\n                                     \"http://coolshell.cn\");\r\nchenhao.sayHello(); \r\n```\r\n顺便说一下，要删除对象的属性，很简单：\r\n```\r\ndelete chenhao[\'email\']\r\n```\r\n上面的这些例子，我们可以看到这样几点：\r\nJavascript的数据和成员封装很简单。没有类完全是对象操作。纯动态！\r\nJavascript function中的this指针很关键，如果没有的话，那就是局部变量或局部函数。\r\nJavascript对象成员函数可以在使用时临时声明，并把一个全局函数直接赋过去就好了。\r\nJavascript的成员函数可以在实例上进行修改，也就是说不同实例相同函数名的行为不一定一样。\r\n\r\n参考 [http://coolshell.cn/articles/6441.html](http://coolshell.cn/articles/6441.html)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('97', '链接', 'links', '1452162060', '1456391506', '<!--markdown-->### 推荐 / Recommend\r\n\r\n一些推荐链接，如果您有意注册，希望您通过如下链接来注册，我们可以同时得到好处哦～\r\n\r\n- 阿里云9折推荐码：z1f8j6   [http://t.cn/zjxZrUk](http://t.cn/zjxZrUk)  [如何使用？选好产品->立即购买->确认订单环节->点击「我有推荐码」->输入推荐码->立享9折](https://help.aliyun.com/knowledge_detail/6568905.html?spm=5176.100126.3.1.FG2QxW)\r\n\r\n- uber邀请码：726pque   ￥30乘车优惠。在 [https://get.uber.com.cn/invite/726pque](https://get.uber.com.cn/invite/726pque) 兑换\r\n\r\n- 360联盟-注册：[http://youqian.360.cn/invite?id=20845](http://youqian.360.cn/invite?id=20845)\r\n\r\n- 新浪云-注册：[新浪云福利](http://t.cn/R4YQFlI)1000云豆免费领！[http://t.cn/R4YQFlI](http://t.cn/R4YQFlI)\r\n\r\n- QQ推广-注册：[http://dlm.qq.com/#/?invid=2511906352](http://dlm.qq.com/#/?invid=2511906352)\r\n\r\n### 链接 / External Links\r\n\r\n- MDN : [https://developer.mozilla.org/zh-CN/](https://developer.mozilla.org/zh-CN/)\r\n- caniuse:[http://caniuse.com/](http://caniuse.com/)\r\n- coursera:[https://www.coursera.org/](https://www.coursera.org/)', '2', '1', null, 'page', 'publish', null, '0', '1', '0', '0', '0');
INSERT INTO `typecho_contents` VALUES ('100', 'typecho markdown 链接新窗口打开', '100', '1447239420', '1452164666', '<!--markdown-->打开HtmlRenderer.php文件，\r\n文件所在目录位置：typecho1.0根目录下/var/CommonMark\r\n104行 case CommonMark_Element_InlineElement::TYPE_LINK:下面增加代码段，根据需求增加，小不是2个都加了了，那么就是这样：\r\n```php\r\n            case CommonMark_Element_InlineElement::TYPE_LINK:\r\n                $attrs[\'href\'] = $this->escape($inline->getAttribute(\'destination\'), true);\r\n                $attrs[\'target\'] = $this->escape(_blank, true);\r\n                $attrs[\'rel\'] = $this->escape(nofollow, true);\r\n                if ($title = $inline->getAttribute(\'title\')) {\r\n                    $attrs[\'title\'] = $this->escape($title, true);\r\n                }\r\n```\r\n请对比源代码\r\n\r\ntypecho 1.0文章内连接新窗口打开\r\n\r\n增加代码段：\r\n$attrs[\'target\'] = $this->escape(_blank, true);\r\n\r\ntypecho 1.0文章内链接加上nofollow\r\n\r\n增加代码段：\r\n$attrs[\'rel\'] = $this->escape(nofollow, true);\r\n\r\n参考网站：[一极乐](http://yijile.com/)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('104', 'Jquery CDN', '104', '1452502200', '1452503949', '<!--markdown-->> 推荐几个国内的jquery CDN服务地址：\r\n\r\n- 新浪CDN，感觉很快，用的人很多，推荐使用！\r\n```\r\n<script src=\"http://lib.sinaapp.com/js/jquery/1.9.1/jquery-1.9.1.min.js\"></script>\r\n```\r\n其它版本可以在这里找地址 [http://lib.sinaapp.com/?path=/jquery](http://lib.sinaapp.com/?path=/jquery)\r\n\r\n- 百度CDN\r\n```\r\n<script src=\"http://libs.baidu.com/jquery/1.9.1/jquery.min.js\"></script>\r\n```\r\n其它版本之间修改代码中的版本号就行了\r\n- 360的CDN\r\n```\r\n<script src=\"http://libs.useso.com/js/jquery/1.9.1/jquery.min.js\"></script>\r\n```\r\n其它版本也是直接修改版本号就可以了\r\n\r\n- 谷歌jquery cdn加速点\r\n```\r\nhttp://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\r\n```\r\n- 微软jquery cdn加速点\r\n```\r\nhttp://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.2.min.js\r\n```\r\n\r\n- 你还可以这样写，第一个首选，如果加载失败js就会加载第二个地址\r\n```\r\n<script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\r\n<script type=\"text/javascript\">\r\n!window.jQuery && document.write(\'<script src=http://lib.sinaapp.com/js/jquery/1.7.2/jquery.min.js><\\/script>\');\r\n</script>\r\n```\r\n\r\n\r\n- 如果担心CDN地址加载失败，可以这样载入本地jquery\r\n```\r\n<script type=\"text/javascript\">\r\n!window.jQuery && document.write(\'<script src=\"js/jquery.min.js\"><\\/script>\');\r\n</script>\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('108', '软件', 'software', '1452583080', '1453551483', '<!--markdown--> - [360安全卫士](http://7xq00y.com1.z0.glb.clouddn.com/360safe%2B20845%2Bn0de1fb358b.exe)\r\n - [360杀毒](http://7xq00y.com1.z0.glb.clouddn.com/360sd_20845.exe)\r\n - [360浏览器](http://7xq00y.com1.z0.glb.clouddn.com/360se%2B20845%2Bn0de1fb358b.exe)\r\n - [360集合包选择安装](http://7xq00y.com1.z0.glb.clouddn.com/360jihe%2B20845%2Bn0de1fb358b.exe)\r\n - [360装机包安装](http://7xq00y.com1.z0.glb.clouddn.com/360yjzj%2B20845%2Bn0de1fb358b.exe)\r\n - [腾讯手机管家android](http://7xq00y.com1.z0.glb.clouddn.com/tencentmobilemanager5.7.0_android_build3146_356518.apk)\r\n - [腾讯电脑管家PC](http://7xq00y.com1.z0.glb.clouddn.com/QQPCMgr_123135688.exe)\r\n - [雷电OS](http://7xq00y.com1.z0.glb.clouddn.com/setupbeta_leidianqd.exe)\r\n - [我是大主宰游戏](http://7xq00y.com1.z0.glb.clouddn.com/dzz_channel%3D718990001%26from%3D238400012529%26placeid%3D20845.exe)', '1', '1', null, 'page', 'hidden', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('157', '《增长黑客》 一本很好的互联网书籍，关于创业（点赞）', '157', '1456585260', '1456587389', '<!--markdown-->## 增长黑客的成长\r\n\r\n- 创造正确的产品\r\n\r\n- 获取用户\r\n\r\n- 激发活跃\r\n\r\n- 提高留存\r\n\r\n- 增加收入\r\n\r\n- 病毒传播\r\n\r\n----------\r\n\r\n> 关注的指标 PV UV\r\n\r\n新增用户数，活跃用户数，总用户数\r\n\r\n> 推荐工具资源\r\n\r\n### 网站/APP 统计分析工具\r\n\r\nGoogle Analytics\r\n\r\nMixpanel\r\n\r\n友盟\r\n\r\nTalkingData\r\n\r\nGrowingIO\r\n\r\n诸葛IO\r\n\r\n云测\r\n\r\n腾讯WeTest\r\n\r\nAppLovin\r\n\r\n\r\n### 在线协作平台\r\n\r\nTower\r\n\r\nTeambition\r\n\r\n瀑布IM\r\n\r\n### 云服务\r\n\r\nUCloud\r\n\r\n七牛云存储\r\n\r\nLeanCloud\r\n\r\n游密通讯云\r\n\r\n新浪云\r\n\r\nDaoCloud\r\n\r\n### 投融资对接\r\n\r\nFellowPlus\r\n\r\n逐鹿X\r\n\r\n### 原型设计\r\n\r\nAxure\r\n\r\nBalsamiq Mockups\r\n\r\n墨刀\r\n\r\n### 创业空间/孵化器\r\n\r\n联合创业办公社\r\n\r\nWalunt\r\n\r\n氪空间\r\n\r\n邻客创业公社\r\n\r\n良仓孵化器\r\n\r\nUCloud Entreprise Program\r\n\r\n### 创业技能学习\r\n\r\n在行\r\n\r\n三节课\r\n\r\n人人都是产品经理\r\n\r\n麦子学院\r\n\r\n独角兽创业课\r\n\r\n作者说\r\n\r\n利器\r\n\r\nDraper University\r\n\r\n### 其他\r\n\r\nGitCafe\r\n\r\nPing++聚合支付SDK\r\n\r\n秒通客服\r\n\r\nSegmentFault\r\n\r\n麦克\r\n\r\nGrowingly\r\n\r\n电子工业出版社\r\n\r\n\r\n作者[微博](http://www.weibo.com/xdash)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('116', 'jquery获取css color 值返回RGB', '116', '1436148060', '1452654222', '<!--markdown-->css代码如下：\r\n```\r\na, a:link, a:visited { color:#4188FB; }\r\na:active, a:focus, a:hover { color:#FFCC00; }\r\n```\r\njs代码如下：\r\n```\r\nvar link_col = $(\"a:link\").css(\"color\");\r\nalert(link_col); // returns rgb(65, 136, 251)\r\n```\r\njquey貌似设置颜色，使用的是rgb格式的。\r\n\r\n用以下这个function，把rgb转成“#xxxx”(HEX )格式。\r\n```\r\nvar rgbString = \"rgb(0, 70, 255)\"; // get this in whatever way.\r\n \r\nvar parts = rgbString\r\n        .match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/)\r\n;\r\n// parts now should be [\"rgb(0, 70, 255\", \"0\", \"70\", \"255\"]\r\n \r\ndelete (parts[0]);\r\nfor (var i = 1; i <= 3; ++i) {\r\n    parts[i] = parseInt(parts[i]).toString(16);\r\n    if (parts[i].length == 1) parts[i] = \'0\' + parts[i];\r\n}\r\nvar hexString = parts.join(\'\'); // \"0070ff\"\r\n```\r\n或者用这个function\r\n```\r\nfunction rgb2hex(rgb) {\r\n rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\r\n function hex(x) {\r\n  return (\"0\" + parseInt(x).toString(16)).slice(-2);\r\n }\r\n return \"#\" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);\r\n}\r\n```\r\n参考 [http://www.ghugo.com/jquery-css-color-value-returns-rgb/](http://www.ghugo.com/jquery-css-color-value-returns-rgb/)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('121', 'jQuery插件开发全解析', '121', '1438483140', '1452656744', '<!--markdown-->jQuery插件的开发包括两种：\r\n一种是类级别的插件开发，即给jQuery添加新的全局函数，相当于给jQuery类本身添加方法。jQuery的全局函数就是属于jQuery命名空间的函数，另一种是对象级别的插件开发，即给jQuery对象添加方法。下面就两种函数的开发做详细的说明。\r\n1、类级别的插件开发\r\n类级别的插件开发最直接的理解就是给jQuery类添加类方法，可以理解为添加静态方法。典型的例子就是$.AJAX()这个函数，将函数定义于jQuery的命名空间中。关于类级别的插件开发可以采用如下几种形式进行扩展：\r\n1.1 添加一个新的全局函数\r\n添加一个全局函数，我们只需如下定义：\r\n```\r\njQuery.foo = function() {   \r\nalert(\'This is a test. This is only a test.\');  \r\n};    \r\n``` \r\n1.2 增加多个全局函数\r\n添加多个全局函数，可采用如下定义：\r\n```\r\njQuery.foo = function() {   \r\nalert(\'This is a test. This is only a test.\');  \r\n};  \r\njQuery.bar = function(param) {   \r\nalert(\'This function takes a parameter, which is \"\' + param + \'\".\');  \r\n}; \r\n```  \r\n调用时和一个函数的一样的:jQuery.foo();jQuery.bar();或者$.foo();$.bar(\'bar\');  \r\n1.3 使用jQuery.extend(object);　\r\n```\r\njQuery.extend({      \r\nfoo: function() {      \r\nalert(\'This is a test. This is only a test.\');      \r\n},      \r\nbar: function(param) {      \r\nalert(\'This function takes a parameter, which is \"\' + param +\'\".\');      \r\n}     \r\n});  \r\n```\r\n1.4 使用命名空间\r\n虽然在jQuery命名空间中，我们禁止使用了大量的javaScript函数名和变量名。但是仍然不可避免某些函数或变量名将于其他jQuery插件冲突，因此我们习惯将一些方法封装到另一个自定义的命名空间。\r\n```\r\njQuery.myPlugin = {          \r\nfoo:function() {          \r\nalert(\'This is a test. This is only a test.\');          \r\n},          \r\nbar:function(param) {          \r\nalert(\'This function takes a parameter, which is \"\' + param + \'\".\');    \r\n}         \r\n}; \r\n```\r\n采用命名空间的函数仍然是全局函数，调用时采用的方法：  \r\n$.myPlugin.foo();         \r\n$.myPlugin.bar(\'baz\');  \r\n通过这个技巧（使用独立的插件名），我们可以避免命名空间内函数的冲突。\r\n2、对象级别的插件开发\r\n对象级别的插件开发需要如下的两种形式：、\r\n形式1：  \r\n```\r\n(function($){     \r\n$.fn.extend({     \r\npluginName:function(opt,callback){     \r\n          // Our plugin implementation code goes here.       \r\n}     \r\n})     \r\n})(jQuery);\r\n```  \r\n形式2：\r\n```\r\n(function($) {       \r\n$.fn.pluginName = function() {     \r\n     // Our plugin implementation code goes here.     \r\n};     \r\n})(jQuery);\r\n```  \r\n上面定义了一个jQuery函数,形参是$，函数定义完成之后,把jQuery这个实参传递进去.立即调用执行。这样的好处是,我们在写jQuery插件时,也可以使用$这个别名,而不会与prototype引起冲突.\r\n2.1 在JQuery名称空间下申明一个名字\r\n这是一个单一插件的脚本。如果你的脚本中包含多个插件，或者互逆的插件（例如： $.fn.doSomething() 和 $.fn.undoSomething()），那么你需要声明多个函数名字。但是，通常当我们编写一个插件时，力求仅使用一个名字来包含它的所有内容。我们的示例插件命名为“highlight“    \r\n```\r\n$.fn.hilight = function() {    \r\n  // Our plugin implementation code goes here.    \r\n};\r\n```\r\n我们的插件通过这样被调用：  \r\n$(\'#myDiv\').hilight();  \r\n但是如果我们需要分解我们的实现代码为多个函数该怎么办？有很多原因：设计上的需要；这样做更容易或更易读的实现；而且这样更符合面向对象。 这真是一个麻烦事，把功能实现分解成多个函数而不增加多余的命名空间。出于认识到和利用函数是javascript中最基本的类对象，我们可以这样做。就像其他对象一样，函数可以被指定为属性。因此我们已经声明“hilight”为jQuery的属性对象，任何其他的属性或者函数我们需要暴露出来的，都可以在\"hilight\" 函数中被声明属性。稍后继续。\r\n2.2 接受options参数以控制插件的行为\r\n让我们为我们的插件添加功能指定前景色和背景色的功能。我们也许会让选项像一个options对象传递给插件函数。例如：   \r\n```\r\n// plugin definition    \r\n$.fn.hilight = function(options) {    \r\n  var defaults = {    \r\n    foreground: \'red\',    \r\n    background: \'yellow\'    \r\n  };    \r\n  // Extend our default options with those provided.    \r\n  var opts = $.extend(defaults, options);    \r\n  // Our plugin implementation code goes here.    \r\n}; \r\n```   \r\n我们的插件可以这样被调用：\r\n```\r\n$(\'#myDiv\').hilight({    \r\n  foreground: \'blue\'    \r\n});     \r\n```\r\n2.3 暴露插件的默认设置\r\n我们应该对上面代码的一种改进是暴露插件的默认设置。这对于让插件的使用者更容易用较少的代码覆盖和修改插件。接下来我们开始利用函数对象。     \r\n```\r\n// plugin definition    \r\n$.fn.hilight = function(options) {    \r\n  // Extend our default options with those provided.    \r\n  // Note that the first arg to extend is an empty object -    \r\n  // this is to keep from overriding our \"defaults\" object.    \r\n  var opts = $.extend({}, $.fn.hilight.defaults, options);    \r\n  // Our plugin implementation code goes here.    \r\n};    \r\n// plugin defaults - added as a property on our plugin function    \r\n$.fn.hilight.defaults = {    \r\n  foreground: \'red\',    \r\n  background: \'yellow\'    \r\n};\r\n```\r\n现在使用者可以包含像这样的一行在他们的脚本里：  \r\n//这个只需要调用一次，且不一定要在ready块中调用  \r\n$.fn.hilight.defaults.foreground = \'blue\';    \r\n接下来我们可以像这样使用插件的方法，结果它设置蓝色的前景色：  \r\n$(\'#myDiv\').hilight();   \r\n如你所见，我们允许使用者写一行代码在插件的默认前景色。而且使用者仍然在需要的时候可以有选择的覆盖这些新的默认值：\r\n// 覆盖插件缺省的背景颜色 \r\n$.fn.hilight.defaults.foreground = \'blue\'; \r\n// ... \r\n// 使用一个新的缺省设置调用插件 \r\n$(\'.hilightDiv\').hilight(); \r\n// ... \r\n// 通过传递配置参数给插件方法来覆盖缺省设置 \r\n$(\'#green\').hilight({ \r\n  foreground: \'green\' \r\n});  \r\n2.4 适当的暴露一些函数\r\n这段将会一步一步对前面那段代码通过有意思的方法扩展你的插件（同时让其他人扩展你的插件）。例如，我们插件的实现里面可以定义一个名叫\"format\"的函数来格式化高亮文本。我们的插件现在看起来像这样，默认的format方法的实现部分在hiligth函数下面。\r\n```\r\n// plugin definition    \r\n$.fn.hilight = function(options) {    \r\n  // iterate and reformat each matched element    \r\n  return this.each(function() {    \r\n    var $this = $(this);    \r\n    // ...    \r\n    var markup = $this.html();    \r\n    // call our format function    \r\n    markup = $.fn.hilight.format(markup);    \r\n    $this.html(markup);    \r\n  });    \r\n};    \r\n// define our format function    \r\n$.fn.hilight.format = function(txt) {    \r\nreturn \'<strong>\' + txt + \'</strong>\';    \r\n};\r\n```\r\n我们很容易的支持options对象中的其他的属性通过允许一个回调函数来覆盖默认的设置。这是另外一个出色的方法来修改你的插件。这里展示的技巧是进一步有效的暴露format函数进而让他能被重新定义。通过这技巧，是其他人能够传递他们自己设置来覆盖你的插件，换句话说，这样其他人也能够为你的插件写插件。 \r\n考虑到这个篇文章中我们建立的无用的插件，你也许想知道究竟什么时候这些会有用。一个真实的例子是Cycle插件.这个Cycle插件是一个滑动显示插件，他能支持许多内部变换作用到滚动，滑动，渐变消失等。但是实际上，没有办法定义也许会应用到滑动变化上每种类型的效果。那是这种扩展性有用的地方。 Cycle插件对使用者暴露\"transitions\"对象，使他们添加自己变换定义。插件中定义就像这样：\r\n$.fn.cycle.transitions = { \r\n// ... \r\n}; \r\n这个技巧使其他人能定义和传递变换设置到Cycle插件。\r\n2.5 保持私有函数的私有性\r\n这种技巧暴露你插件一部分来被覆盖是非常强大的。但是你需要仔细思考你实现中暴露的部分。一但被暴露，你需要在头脑中保持任何对于参数或者语义的改动也许会破坏向后的兼容性。一个通理是，如果你不能肯定是否暴露特定的函数，那么你也许不需要那样做。\r\n那么我们怎么定义更多的函数而不搅乱命名空间也不暴露实现呢？这就是闭包的功能。为了演示，我们将会添加另外一个“debug”函数到我们的插件中。这个 debug函数将为输出被选中的元素格式到firebug控制台。为了创建一个闭包，我们将包装整个插件定义在一个函数中。 \r\n```\r\n (function($) {    \r\n  // plugin definition    \r\n  $.fn.hilight = function(options) {    \r\n    debug(this);    \r\n    // ...    \r\n  };    \r\n  // private function for debugging    \r\n  function debug($obj) {    \r\n    if (window.console && window.console.log)    \r\n      window.console.log(\'hilight selection count: \' + $obj.size());    \r\n  };    \r\n//  ...    \r\n})(jQuery);    \r\n```\r\n我们的“debug”方法不能从外部闭包进入,因此对于我们的实现是私有的。\r\n2.6 支持Metadata插件\r\n在你正在写的插件的基础上，添加对Metadata插件的支持能使他更强大。个人来说，我喜欢这个Metadata插件，因为它让你使用不多的\"markup”覆盖插件的选项（这非常有用当创建例子时）。而且支持它非常简单。更新：注释中有一点优化建议。\r\n```\r\n$.fn.hilight = function(options) {    \r\n  // ...    \r\n  // build main options before element iteration    \r\n  var opts = $.extend({}, $.fn.hilight.defaults, options);    \r\n  return this.each(function() {    \r\n    var $this = $(this);    \r\n    // build element specific options    \r\n    var o = $.meta ? $.extend({}, opts, $this.data()) : opts;    \r\n    //...   \r\n```  \r\n这些变动行做了一些事情：它是测试Metadata插件是否被安装如果它被安装了，它能扩展我们的options对象通过抽取元数据这行作为最后一个参数添加到JQuery.extend，那么它将会覆盖任何其它选项设置。现在我们能从\"markup”处驱动行为,如果我们选择了“markup”：\r\n 调用的时候可以这样写： jQuery.foo(); 或 $.foo(); \r\n```\r\n<!--  markup  -->    \r\n<div class=\"hilight { background: \'red\', foreground: \'white\' }\">    \r\n  Have a nice day!    \r\n</div>    \r\n<div class=\"hilight { foreground: \'orange\' }\">    \r\n  Have a nice day!    \r\n</div>    \r\n<div class=\"hilight { background: \'green\' }\">    \r\n  Have a nice day!    \r\n</div>\r\n```\r\n现在我们能高亮哪些div仅使用一行脚本：  \r\n$(\'.hilight\').hilight();     \r\n \r\n2.7 整合\r\n下面使我们的例子完成后的代码：\r\n```\r\n// 创建一个闭包    \r\n(function($) {    \r\n  // 插件的定义    \r\n  $.fn.hilight = function(options) {    \r\n    debug(this);    \r\n    // build main options before element iteration    \r\n    var opts = $.extend({}, $.fn.hilight.defaults, options);    \r\n    // iterate and reformat each matched element    \r\n    return this.each(function() {    \r\n      $this = $(this);    \r\n      // build element specific options    \r\n      var o = $.meta ? $.extend({}, opts, $this.data()) : opts;    \r\n      // update element styles    \r\n      $this.css({    \r\n        backgroundColor: o.background,    \r\n        color: o.foreground    \r\n      });    \r\n      var markup = $this.html();    \r\n      // call our format function    \r\n      markup = $.fn.hilight.format(markup);    \r\n      $this.html(markup);    \r\n    });    \r\n  };    \r\n  // 私有函数：debugging    \r\n  function debug($obj) {    \r\n    if (window.console && window.console.log)    \r\n      window.console.log(\'hilight selection count: \' + $obj.size());    \r\n  };    \r\n  // 定义暴露format函数    \r\n  $.fn.hilight.format = function(txt) {    \r\n    return \'<strong>\' + txt + \'</strong>\';    \r\n  };    \r\n  // 插件的defaults    \r\n  $.fn.hilight.defaults = {    \r\n    foreground: \'red\',    \r\n    background: \'yellow\'    \r\n  };    \r\n// 闭包结束    \r\n})(jQuery);     \r\n```\r\n这段设计已经让我创建了强大符合规范的插件。我希望它能让你也能做到。\r\n3、总结\r\njQuery为开发插件提拱了两个方法，分别是：\r\njQuery.fn.extend(object);  给jQuery对象添加方法。\r\njQuery.extend(object);  为扩展jQuery类本身.为类添加新的方法。\r\n3.1 jQuery.fn.extend(object);\r\nfn 是什么东西呢。查看jQuery代码，就不难发现。\r\njQuery.fn = jQuery.prototype = {  \r\ninit: function( selector, context ) {//....　  \r\n//......  \r\n};   \r\n原来 jQuery.fn = jQuery.prototype.对prototype肯定不会陌生啦。虽然 javascript　没有明确的类的概念，但是用类来理解它，会更方便。jQuery便是一个封装得非常好的类，比如我们用 语句　$(\"#btn1\") 会生成一个 jQuery类的实例。\r\njQuery.fn.extend(object); 对jQuery.prototype进得扩展，就是为jQuery类添加“成员函数”。jQuery类的实例可以使用这个“成员函数”。\r\n比如我们要开发一个插件，做一个特殊的编辑框，当它被点击时，便alert 当前编辑框里的内容。可以这么做：\r\n```\r\n$.fn.extend({        \r\n     alertWhileClick:function(){       \r\n         $(this).click(function(){      \r\n              alert($(this).val());       \r\n          });       \r\n      }       \r\n});   \r\n$(\"#input1\").alertWhileClick(); //页面上为：<input id=\"input1\" type=\"text\"/>\r\n```\r\n$(\"#input1\")　为一个jQuery实例，当它调用成员方法 alertWhileClick后，便实现了扩展，每次被点击时它会先弹出目前编辑里的内容。\r\n3.2 jQuery.extend(object);　\r\n为jQuery类添加添加类方法，可以理解为添加静态方法。如：\r\n$.extend({  \r\n    add:function(a,b){return a+b;}  \r\n});  \r\n便为　jQuery　添加一个为 add　的　“静态方法”，之后便可以在引入 jQuery　的地方，使用这个方法了，$.add(3,4); //return 7\r\n\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('217', '未命名文档', '217', '1473429965', '1473431984', '<!--markdown-->\r\n    push()\r\n    pop()\r\n    shift()\r\n    unshift()\r\n    splice()\r\n    sort()\r\n    reverse()\r\n\r\n\r\nilter(), concat() 和 slice()\r\n\r\n\r\nindexof()', '0', '1', null, 'post_draft', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('218', '关于', '@about', '1357399020', '1473860973', '<!--markdown-->### 关于我 / About Me\r\n\r\nMy name is junhey.  I come from China, Xinyu City, Jiangxi Province, and now working in web development.\r\n\r\nLife is colorful, this website was, is and will be my window which used to present the color of my life.\r\n\r\nI like programming, reading book, surfing internet, traveling. And I love making friends very much, if you want to be my friend, I will be pleasure.\r\n\r\n### 关于内容 / About The Website\r\n\r\n版权声明：「自由转载-非商用-非衍生-保持署名」（[创意共享3.0许可证](http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh)）\r\n\r\n所有文章非特别说明皆为原创。由于文章表述或者内容可能存在诸多错误，所以部分内容会作修改，为保证转载信息与源同步，转载请注明文章出处！谢谢合作 :-)\r\n\r\n文章为个人观点，不代表服务的公司。\r\n\r\n### 订阅地址 / The RSS Address\r\n\r\n本网站 RSS 订阅地址：[http://junhey.com/feed](http://junhey.com/feed)\r\n\r\n### 其他信息 / External Links\r\n\r\n- github : [https://github.com/junhey](https://github.com/junhey)\r\n- email : [junhey(at)qq.com](mailto:junhey@qq.com)', '3', '1', null, 'page_draft', 'publish', null, '0', '1', '1', '1', '2');
INSERT INTO `typecho_contents` VALUES ('124', '菜鸟入门：阿里云服务器&amp;Centos系统', '124', '1452831060', '1452831435', '<!--markdown-->完全是电脑hold不住文本挖掘的数据，正巧赶上阿里云免费试用，所以就去申请了ECS服务器。\r\n系统是：centos（linux redhat 社区化版本）\r\n默认的使用版本只有内IP，之后花钱升级之后有了公IP\r\n目前的需求：\r\n\r\n1. 两种方法连接服务器\r\n\r\n（1）用putty或者xshell连接服务器（注意：填入的IP应该为公IP）\r\n（2）阿里云自带的管理链接服务器\r\n\r\n2. shell的常见指令\r\n\r\n（1）常见文件操作\r\nls        显示文件或目录\r\n      -l           列出文件详细信息l(list)\r\n     -a          列出当前目录下所有文件及目录，包括隐藏的a(all)\r\n\r\nmkdir         创建目录\r\n     -p           创建目录，若无父目录，则创建p(parent)\r\ncd               切换目录\r\ntouch          创建空文件\r\necho           创建带有内容的文件。\r\ncat              查看文件内容\r\nmv               移动或重命名\r\nrm               删除文件\r\n     -r            递归删除，可删除子目录及文件\r\n     -f            强制删除\r\nfind              在文件系统中搜索某文件\r\nwc                统计文本中行数、字数、字符数\r\ngrep             在文本文件中查找某个字符串\r\nrmdir           删除空目录\r\ntree             树形结构显示目录，需要安装tree包\r\npwd              显示当前目录\r\nln                  创建链接文件\r\nmore、less  分页显示文本文件内容\r\nhead、tail    显示文件头、尾内容\r\nctrl+alt+F1  命令行全屏模式\r\n\r\n（2）移动文件或文件夹\r\n\r\nmv [options] 源文件或目录 目标文件或目录\r\n示例：\r\na、移动hscripts文件夹/目录下的所有文件，目录和子目录到tmp目录mv hscripts tmp\r\n分析：在上述命令中，如果tmp目录已经存在，mv命令将移动hscripts文件夹/目录下的所有文件，目录和子目录到tmp目录。 如果没有tmp目录，它将重命名 hscripts目录为tmp目录。\r\nb、移动多个文件/更多问价到另一目录\r\nmv file1.txt tmp/file2.txt newdir\r\n这个命令移动当前目录的file1.txt文件和tmp文件夹/目录的file2.txt文件到newdir目录。\r\n参数：\r\n-i：交互方式操作。如果mv操作将导致对已存在的目标文件的覆盖，此时系统询问是否重写，要求用户回答”y”或”n”，这样可以避免误覆盖文件。\r\n-f：禁止交互操作。mv操作要覆盖某个已有的目标文件时不给任何指示，指定此参数后i参数将不再起作用。\r\n\r\n（3）复制文件或文件夹\r\n\r\ncp [options] 来源档(source) 目的檔(destination)\r\n参数：\r\n-a ：相当于 -pdr 的意思；\r\n-d ：若来源文件为连结文件的属性(link file)，则复制连结文件属性而非档案本身；\r\n-f ：为强制 (force) 的意思，若有重复或其它疑问时，不会询问使用者，而强制复制；\r\n-i ：若目的檔(destination)已经存在时，在覆盖时会先询问是否真的动作！\r\n-l ：进行硬式连结 (hard link) 的连结档建立，而非复制档案本身；\r\n-p ：连同档案的属性一起复制过去，而非使用预设属性；\r\n-r ：递归持续复制，用于目录的复制行为；\r\n-s ：复制成为符号连结文件 (symbolic link)，亦即『快捷方式』档案；\r\n-u ：若 destination 比 source 旧才更新 destination ！\r\n最后需要注意的，如果来源档有两个以上，则最后一个目的文件一定要是『目录』才行！\r\n示例:\r\na、复制两个文件:\r\ncp file1 file2\r\n上述cp命令复制文件file1.php 的内容到文件file2.php中。\r\nb、备份拷贝的文件:\r\ncp -b file1.php file2.php\r\n创建文件file1.php的带着符号 ‘~’的备份文件file2.php~。\r\nc、复制文件夹和子文件夹:\r\ncp -R scripts scripts1\r\n上面的 cp 命令从 scripts 复制文件夹和子文件夹到 scripts1。\r\n\r\n3. 软件的安装\r\n\r\n（1）关于R\r\n安装R程序，安装常用的packages，尝试着去跑一段R程序\r\nhttp://blog.csdn.net/lhyan792/article/details/6362014\r\nhttp://blog.csdn.net/wangxianshou/article/details/8740282\r\n\r\n（2）关于python\r\n使用python 默认的版本为2.5\r\na）版本升级\r\n\r\n下载，解压，编译，安装，这些都是常规操作了。据说系统自带的旧版本python被严重依赖，所以不能卸载原Python，这里选择全新安装。\r\ntar -xvf Python-2.7.3.tgz\r\ncd Python-2.7.3\r\n./configure --prefix=/usr/local/python2.7\r\nmake\r\nmake install\r\n安装好后可以运行一下Python看看是否正常了\r\n\r\n/usr/local/python2.7/bin/python2.7 -V\r\n其他的文章提到python都是在/usr/local/bin目录里的，但是我没有找到，而是在/usr/local/python2.7/bin/里。\r\n\r\n接下来需要创建一个链接来使系统默认python变为python2.7。\r\nln -fs /usr/local/python2.7/bin/python2.7 /usr/bin/python\r\n\r\n运行python查看版本\r\npython -V\r\n进行更改后，yum果然无法运行了。修改/usr/bin/yum文件，将第一行的\r\n#!/usr/bin/python\r\n中的python改为系统原有的python版本，我的如下：\r\n#!/usr/bin/python2.6\r\n\r\n参考：http://www.phodal.com/blog/install-python27-on-centos/\r\n\r\nb）安装算法包\r\n\r\nhttp://blog.sina.com.cn/s/blog_7673d4a50102v06i.html\r\n\r\n4. 熟悉linux环境\r\n\r\nhttp://www.cnblogs.com/ssgblue/archive/2011/08/02/2125123.html  vi的使用方法\r\nctrl+d 关闭程序\r\n\r\n5. 图形化的系统界面\r\n\r\nhttp://help.aliyun.com/view/13435408.html\r\n\r\n\r\n6. 文件的传输（FTP）\r\n\r\nwinscp 搞定\r\n\r\n7. 查看空间使用情况\r\n\r\ndf -hl\r\n\r\n参考网址：[http://www.douban.com/note/469628969/](http://www.douban.com/note/469628969/)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('128', 'linux yum命令详解', '128', '1434590880', '1453085499', '<!--markdown-->yum（全称为 Yellow dog Updater, Modified）是一个在Fedora和RedHat以及SUSE中的Shell前端软件包管理器。基於RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软体包，无须繁琐地一次次下载、安装。yum提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。\r\n\r\nyum的命令形式一般是如下：yum [options] [command] [package ...]\r\n其中的[options]是可选的，选项包括-h（帮助），-y（当安装过程提示选择全部为\"yes\"），-q（不显示安装的过程）等等。[command]为所要进行的操作，[package ...]是操作的对象。\r\n\r\n概括了部分常用的命令包括：\r\n\r\n自动搜索最快镜像插件：   yum install yum-fastestmirror\r\n安装yum图形窗口插件：    yum install yumex\r\n查看可能批量安装的列表： yum grouplist\r\n\r\n1 安装\r\nyum install 全部安装\r\nyum install package1 安装指定的安装包package1\r\nyum groupinsall group1 安装程序组group1\r\n\r\n2 更新和升级\r\nyum update 全部更新\r\nyum update package1 更新指定程序包package1\r\nyum check-update 检查可更新的程序\r\nyum upgrade package1 升级指定程序包package1\r\nyum groupupdate group1 升级程序组group1\r\n\r\n3 查找和显示\r\nyum info package1 显示安装包信息package1\r\nyum list 显示所有已经安装和可以安装的程序包\r\nyum list package1 显示指定程序包安装情况package1\r\nyum groupinfo group1 显示程序组group1信息yum search string 根据关键字string查找安装包\r\n\r\n4 删除程序\r\nyum remove &#124; erase package1 删除程序包package1\r\nyum groupremove group1 删除程序组group1\r\nyum deplist package1 查看程序package1依赖情况\r\n\r\n5 清除缓存\r\nyum clean packages 清除缓存目录下的软件包\r\nyum clean headers 清除缓存目录下的 headers\r\nyum clean oldheaders 清除缓存目录下旧的 headers\r\nyum clean, yum clean all (= yum clean packages; yum clean oldheaders) 清除缓存目录下的软件包及旧的headers\r\n\r\n比如，要安装游戏程序组，首先进行查找：\r\n＃：yum grouplist\r\n可以发现，可安装的游戏程序包名字是”Games and Entertainment“，这样就可以进行安装：\r\n＃：yum groupinstall \"Games and Entertainment\"\r\n所 有的游戏程序包就自动安装了。在这里Games and Entertainment的名字必须用双引号选定，因为linux下面遇到空格会认为文件名结束了，因此必须告诉系统安装的程序包的名字是“Games and Entertainment”而不是“Games\"。\r\n\r\n此外，还可以修改配置文件/etc/yum.conf选择安装源。可见yum进行配置程序有多方便了吧。更多详细的选项和命令，当然只要在命令提示行下面:man yum', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('144', '深入理解ANGULAR中的$APPLY()以及$DIGEST()', '144', '1454497140', '1454497613', '<!--markdown-->Angular.js 中的特性,双向绑定.\r\n多么神奇的功能,让视图的改变直接反应到数据中,数据的改变又实时的通知到视图,如何做到的?\r\n这要归功于 scope 下面3个重要的方法:$watch $digest $apply\r\n\r\n他们的区别是什么,我们来介绍下:\r\n\r\n- $watch\r\n\r\n这是一个监听 scope 上数据的监听器\r\n方法说明:\r\n```\r\n$scope.$watch(\'参数\',function(newValue,oldValue){\r\n //逻辑处理\r\n})\r\n```\r\n上面我们就是创建了一个监听器.\r\n‘参数\' 就是$scope对象下的一个对象(或者一个对象的属性),注意,这里是字符串形式.\r\n假如你要监听 $scope.name 属性.\r\n```\r\n$scope.$watch(\'name\',function(newValue,oldValue){\r\n //逻辑处理\r\n})\r\n```\r\n如上代码, ‘name\' 需要引号\r\n参数后面跟着回调函数,回调函数参数返回了被监听 属性,变化后的新值,以前变化前的旧值.\r\n\r\n- $digest\r\n\r\n他负责检查 scope 中的数据是否发生了变化,如果某个属性有变化,马上会通知此属性的监听器 ($watch 注册的监听器),触发监听器,执行回调函数.\r\n\r\n- $apply\r\n\r\n这个方法和 $digest 很相似, $digest 检查scope 中的所有数据\r\n$apply 相当于检查 rootScope 中的所有数据,他会从父级到子级来检查所有数据\r\n$apply() == $rootScope.$digest()\r\n$apply() 方法有两种形式.\r\n第一种 接受一个 function作为参数.\r\n这样触发 $digest 函数并且执行一次 参数中的 function\r\n第二种  不接受任何参数.\r\n这样只是触发一轮 $digest 父级到子级的循环\r\nAngular.js 中一般不会直接调用 $digest ,而是用 $scope.$apply() 来代替\r\n我没有设定监视器,为什么视图和数据可以双向绑定\r\n比如一个文本框 ng-model=\"name\"\r\n这时其实 $scope 对象下已经有了一个属性 name 来对应和 上面的视图进行双向绑定\r\n如何实现的?\r\n其实,当我们定义 ng-model=\"name\"  或者 ng-bind=\"name\" 或者 {{name}}\r\n这时 angular.js 会在 $scope 模型上自动为 “name” 属性设置一个监听器:\r\n```\r\n$scope.$watch(\'name\', function(newValue, oldValue) {\r\n  //监听 name 属性的变化\r\n});\r\n```\r\n原来这里 angular.js 帮我们自动创建了一个监听器,所以此属性和 $scope.name 数据才会实时的双向绑定.\r\n当然,有时候你也会发现明明数据变化了.但是UI没有刷新,是双向绑定失效了吗?\r\n没有  只是在 $scope 模型遍历 digest 循环时,你的数据还没有返回来,\r\n比如异步调用方法,callbac 返回的数据\r\n比如你在 setTimeout 设置了定时触发函数,然后修改模型数据\r\n总之,是错过了 $scope 模型的 digest 循环,导致模型没有通知UI去根据新数据刷新.\r\n遇到这样的问题怎么办?\r\n我们只好自己去手动调用 digest来循环检查一次数据.实现双向绑定\r\n上面我们已经说过,通常不要去直接调用 digest 方法,而是手动调用 $apply 方法,间接实现触发 $digest 循环.\r\n如下:\r\n```\r\nsetTimeout(function() {\r\n $scope.name= \'一介布衣\';\r\n $scope.$apply();\r\n}, 2000);\r\n```\r\n问题来了,上面时候该去手动调用 apply 方法\r\n目前为止, angular.js 为一部分指令和服务自动实现了 $apply() 方法.\r\n例如, ng-click ,ng-model ,$timeout服务,$http服务 等\r\n调用后,angular.js 会自动帮我们调用 $apply() 来实现数据双向绑定.\r\n\r\n因此引入今天用到setTimeout时就遇到这样的问题，代码如下：\r\n```\r\n                $scope.error = [data.error];\r\n                //myTips([data.error], false);\r\n                setTimeout(function(){\r\n                    $scope.error = false;\r\n                    $scope.$apply();\r\n                    //$scope.digestScope = function () {\r\n                    //    setTimeout(function () {\r\n                    //        try {\r\n                    //            $scope.$digest();\r\n                    //        }\r\n                    //        catch (error) {\r\n                    //        }\r\n                    //    }, 200);\r\n                    //};\r\n                },3000);\r\n```\r\n\r\n![微信截图_20160203190454.png][1]\r\n\r\n参考原文地址：\r\n[http://www.sitepoint.com/understanding-angulars-apply-digest/](http://www.sitepoint.com/understanding-angulars-apply-digest/)\r\n[http://www.cnphp6.com/archives/64167](http://www.cnphp6.com/archives/64167)\r\n[http://www.jb51.net/article/73359.htm](http://www.jb51.net/article/73359.htm)\r\n\r\n\r\n  [1]: http://junhey.com/usr/uploads/2016/02/1384285715.png', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('127', 'VMware上安装CentOS-6.5 minimal - 配置网络并安装VMware Tools', '127', '1444698300', '1453083311', '<!--markdown-->装完centos之后发现没有网络，可能是minimal版的吧，所以就网上找了很多教程，下面记录下怎么上网。\r\n\r\nCentOS的minimal版本默认不启动网络，所以安装完CentOS要自己配置网络。\r\n\r\n- 修改配置文件 vi /etc/sysconfig/network-script/ifcfg-eth0\r\n\r\n修改下面两项：\r\n 1. 是否依赖Network Manager的控制，minimal没装这玩意，所以设为no\r\n> NM_CONTROLLED=\"no\" \r\n\r\n 2. 开机启动，当然yes\r\n> ONBOOT=\"yes\"\r\n \r\n\r\n- 重启服务\r\n\r\n使用命令重启：service network restart\r\n\r\n配置好网络之后进行安装VMware Tools\r\n\r\n- 首先安装Perl\r\n\r\n> yum install perl \r\n\r\n- 安装VMware Tools\r\n\r\n1. 点击VMware菜单上的Install VMware Tools选项后，光驱就会自动加载linux.iso文件。\r\n\r\n2. 挂载光驱\r\n\r\n   mount /dev/cdrom /mnt\r\n\r\n3. 将/mnt/VMwareTools-xxx-xxx.tar.gz压缩包拷贝到/root上，\r\n\r\n   cp /mnt/VMwareTools-9.2.0-799703.tar.gz /root\r\n\r\n4. 良好习惯:)\r\n\r\n   umount /mnt\r\n\r\n5. 进入/root解压压缩包，这时候内容会解压到/root/vmware-tools-distrib\r\n\r\n   cd /root\r\n\r\n   tar zxvf VMwareTools-9.2.0-799703.tar.gz\r\n\r\n6. 安装VMware Tools\r\n\r\n   ./vmware-install.pl\r\n\r\n \r\n\r\n安装VMware Tools遇到的问题\r\n问题1：\r\n安装到最后会报错\r\ninitctl: Job failed to start\r\nUnable to start services for VMware Tools\r\n解决办法：\r\n提示不能启动服务，那么就自己手动启动呗 \r\n/etc/vmware-tools/services.sh start\r\n问题2\r\n启动服务后出现：\r\nBlocking file system: [FAILED]\r\n解决办法：\r\nyum install fuse-libs\r\n安装完之后，重启服务\r\n/etc/vmware-tools/services.sh restart\r\n\r\n参考网站：[http://www.cnblogs.com/xyq/p/4068018.html](http://www.cnblogs.com/xyq/p/4068018.html)\r\n\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('129', '常用正则表达式大全', '129', '1453103248', '1453103267', '<!--markdown-->一、校验数字的表达式\r\n\r\n1 数字：\r\n^[0-9]*$\r\n\r\n2 n位的数字：\r\n^\\d{n}$\r\n\r\n3 至少n位的数字：\r\n^\\d{n,}$\r\n\r\n4 m-n位的数字：\r\n^\\d{m,n}$\r\n\r\n5 零和非零开头的数字：\r\n^(0|[1-9][0-9]*)$\r\n\r\n6 非零开头的最多带两位小数的数字：\r\n^([1-9][0-9]*)+(.[0-9]{1,2})?$\r\n\r\n7 带1-2位小数的正数或负数：\r\n^(\\-)?\\d+(\\.\\d{1,2})?$\r\n\r\n8 正数、负数、和小数：\r\n^(\\-|\\+)?\\d+(\\.\\d+)?$\r\n\r\n9 有两位小数的正实数：\r\n^[0-9]+(.[0-9]{2})?$\r\n\r\n10 有1~3位小数的正实数：\r\n^[0-9]+(.[0-9]{1,3})?$\r\n\r\n11 非零的正整数：\r\n^[1-9]\\d*$ \r\n或 \r\n^([1-9][0-9]*){1,3}$ \r\n或 \r\n^\\+?[1-9][0-9]*$\r\n\r\n12 非零的负整数：\r\n^\\-[1-9][]0-9\"*$ \r\n或 \r\n^-[1-9]\\d*$\r\n\r\n13 非负整数：\r\n^\\d+$ \r\n或\r\n ^[1-9]\\d*|0$\r\n\r\n14 非正整数：\r\n^-[1-9]\\d*|0$ \r\n或 \r\n^((-\\d+)|(0+))$\r\n\r\n15 非负浮点数：\r\n^\\d+(\\.\\d+)?$ \r\n或 \r\n^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0$\r\n\r\n16 非正浮点数：\r\n^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$ \r\n或 \r\n^(-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*))|0?\\.0+|0$\r\n\r\n17 正浮点数：\r\n^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*$ \r\n或 \r\n^(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*))$\r\n\r\n18 负浮点数：\r\n^-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*)$ \r\n或\r\n ^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$\r\n\r\n19 浮点数：\r\n^(-?\\d+)(\\.\\d+)?$ \r\n或 \r\n^-?([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0)$\r\n\r\n二、校验字符的表达式\r\n\r\n1 汉字：\r\n^[\\u4e00-\\u9fa5]{0,}$\r\n\r\n2 英文和数字：\r\n^[A-Za-z0-9]+$ \r\n或 \r\n^[A-Za-z0-9]{4,40}$\r\n\r\n3 长度为3-20的所有字符：\r\n^.{3,20}$\r\n\r\n4 由26个英文字母组成的字符串：\r\n^[A-Za-z]+$\r\n\r\n5 由26个大写英文字母组成的字符串：\r\n^[A-Z]+$\r\n\r\n6 由26个小写英文字母组成的字符串：\r\n^[a-z]+$\r\n\r\n7 由数字和26个英文字母组成的字符串：\r\n^[A-Za-z0-9]+$\r\n\r\n8 由数字、26个英文字母或者下划线组成的字符串：\r\n^\\w+$ \r\n或\r\n ^\\w{3,20}$\r\n\r\n9 中文、英文、数字包括下划线：\r\n^[\\u4E00-\\u9FA5A-Za-z0-9_]+$\r\n\r\n10 中文、英文、数字但不包括下划线等符号：\r\n^[\\u4E00-\\u9FA5A-Za-z0-9]+$ \r\n或\r\n^[\\u4E00-\\u9FA5A-Za-z0-9]{2,20}$\r\n\r\n11 可以输入含有^%&\',;=?$\\\"等字符：\r\n[^%&\',;=?$\\x22]+\r\n\r\n12 禁止输入含有~的字符：\r\n[^~\\x22]+\r\n\r\n三、特殊需求表达式\r\n\r\n1 Email地址：\r\n^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$\r\n\r\n2 域名：\r\n[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?\r\n\r\n3 InternetURL：\r\n[a-zA-z]+://[^\\s]* \r\n或 \r\n^http://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&=]*)?$\r\n\r\n4 手机号码：\r\n^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$\r\n\r\n5 电话号码(\"XXX-XXXXXXX\"、\"XXXX-XXXXXXXX\"、\"XXX-XXXXXXX\"、\"XXX-XXXXXXXX\"、\"XXXXXXX\"和\"XXXXXXXX)：\r\n^(\\(\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$\r\n\r\n6 国内电话号码(0511-4405222、021-87888822)：\r\n\\d{3}-\\d{8}|\\d{4}-\\d{7}\r\n\r\n7 身份证号(15位、18位数字)：\r\n^\\d{15}|\\d{18}$\r\n\r\n8 短身份证号码(数字、字母x结尾)：\r\n^([0-9]){7,18}(x|X)?$ \r\n或 \r\n^\\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$\r\n\r\n9 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：\r\n^[a-zA-Z][a-zA-Z0-9_]{4,15}$\r\n\r\n10 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：\r\n^[a-zA-Z]\\w{5,17}$\r\n\r\n11 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10\r\n之间)：\r\n^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$\r\n\r\n12 日期格式：\r\n^\\d{4}-\\d{1,2}-\\d{1,2}\r\n\r\n13 一年的12个月(01～09和1～12)：\r\n^(0?[1-9]|1[0-2])$\r\n\r\n14 一个月的31天(01～09和1～31)：\r\n^((0?[1-9])|((1|2)[0-9])|30|31)$\r\n\r\n15 xml文件：\r\n^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\\\.[x|X][m|M][l|L]$\r\n\r\n16 中文字符的正则表达式：\r\n[\\u4e00-\\u9fa5]\r\n\r\n17 双字节字符：\r\n[^\\x00-\\xff] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))\r\n\r\n18 空白行的正则表达式：\r\n\\n\\s*\\r (可以用来删除空白行)\r\n\r\n19 HTML标记的正则表达式：\r\n<(\\S*?)[^>]*>.*?</\\1>|<.*? /> (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)\r\n\r\n20 首尾空白字符的正则表达式：\r\n^\\s*|\\s*$或(^\\s*)|(\\s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)\r\n\r\n21 腾讯QQ号：\r\n[1-9][0-9]{4,} (腾讯QQ号从10000开始)\r\n\r\n22 中国邮政编码：\r\n[1-9]\\d{5}(?!\\d) (中国邮政编码为6位数字)\r\n\r\n23 IP地址：\r\n\\d+\\.\\d+\\.\\d+\\.\\d+ (提取IP地址时有用)\r\n\r\n24 IP地址：\r\n((?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d))\r\n\r\n25 钱的输入格式：\r\n\r\n1）.有四种钱的表示形式我们可以接受:\"10000.00\" 和 \"10,000.00\", 和没有 \"分\" 的 \"10000\" 和 \"10,000\"：\r\n^[1-9][0-9]*$\r\n\r\n2）.这表示任意一个不以0开头的数字,但是,这也意味着一个字符\"0\"不通过,所以我们采用下面的形式：\r\n^(0|[1-9][0-9]*)$\r\n\r\n3）.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：\r\n^(0|-?[1-9][0-9]*)$\r\n\r\n4）.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：\r\n^[0-9]+(.[0-9]+)?$\r\n\r\n5）.必须说明的是,小数点后面至少应该有1位数,所以\"10.\"是不通过的,但是 \"10\" 和 \"10.2\" 是通过的：\r\n^[0-9]+(.[0-9]{2})?$\r\n\r\n6）.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：\r\n^[0-9]+(.[0-9]{1,2})?$\r\n\r\n7）.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：\r\n^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$\r\n\r\n8）.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：\r\n^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$\r\n\r\n备注：这就是最终结果了,别忘了\"+\"可以用\"*\"替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('130', 'Xshell5 注册码 ,Xftp5 注册码，Xmanager5注册码(已测)', '130', '1402920660', '1453123061', '<!--markdown-->\r\n## Xshell5 注册码 ,Xftp5 注册码，Xmanager5注册码(已测)\r\n\r\n官网下载链接[http://www.netsarang.com/download/main.html](http://www.netsarang.com/download/main.html)\r\n\r\n### Xshell\r\n\r\nXshell是一个用于MS Windows平台的强大的SSH，TELNET，和RLOGIN终端仿真软件。它使得用户能轻松和安全地从Windows PC上访问Unix/Linux主机。\r\n\r\n> Xshell注册码: 690313-111999-999313\r\n\r\n### Xftp\r\n\r\nXftp是一个用于MS Windows平台的强大的FTP和SFTP文件传输程序。Xftp能安全地在Unix/Linux和Windows PC之间传输文件。\r\n\r\n> Xftp注册码: 101210-450789-147200\r\n\r\n\r\n### Xmanager\r\n\r\nXmanager Enterprise是应用于WIN系统的Xserver服务器软件，通过它可将远程的LINUX/UNIX桌面无缝传输到你的WINDOWS桌面，即使你处在内网或者防火墙环境下，通过安全的SSH协议连接X远端应用程序。丰富的选项设置，可以自定义设置各种属性，对于高级用户Xmanager提供更多的高级选项。如设置Xsound的端口，设置Xsound静音选项，重置缓冲区及进程等。\r\n\r\n> Xmanager注册码: 101210-450789-147200\r\n\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('131', 'supervisor提高nodejs调试效率', '131', '1437545520', '1453866677', '<!--markdown-->缘由：开发nodejs程序，调试的时候，无论你修改了代码的哪一部分，都需要重启服务才能生效。这是因为 Node.js 只有在第一次引用到某部份时才会去解析脚本文件，以后都会直接访问内存，避免重复载入。Node.js的这种设计虽然有利于提高性能，却不利于开发调试，因为我们在开发过程中总是希望修改后立即看到效果，而不是每次都要终止进程并重启。\r\n\r\nsupervisor可以帮助你实现这个功能，它会监视你对代码的改动，并自动重启 Node.js。\r\n\r\nsupervisor安装很简单,直接用npm安装既可，键入命令: \r\n\r\n> npm -g install supervisor\r\n\r\n这里注意一点的就是，supervisor必须安装到全局，如果你不安装到全局，错误命令会提示你安装到全局。\r\n如果不想安装到默认的全局,也可以自己修改全局路径到当前路径\r\n\r\n> npm config set prefix \"路径\"\r\n\r\n安装完以后就可以用supervisor 来启动服务了。\r\n\r\n> supervisor app.js\r\n\r\n或\r\n\r\n> supervisor bin/www\r\n\r\nwebstorm设置supervisor方法如下：\r\n1、安装supervisor\r\n  npm install -g supervisor\r\n2、WebStorm中选择要Run--Edit Configurations 下选中要运行的JS文件（如 www）\r\n  Working directory选择项目目录（supervisor会监控此目录内所有文件的改变自动重启）\r\n![ws-config.png][1]\r\n\r\n\r\n  [1]: http://junhey.com/usr/uploads/2016/01/3608869695.png', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('136', 'ws-config.png', 'ws-config-png', '1453866653', '1453866653', 'a:5:{s:4:\"name\";s:13:\"ws-config.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/01/3608869695.png\";s:4:\"size\";i:16206;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '131');
INSERT INTO `typecho_contents` VALUES ('137', 'Linux(CentOS)nodejs项目部署', '137', '1454250240', '1454250998', '<!--markdown-->系统：CentOS 64位（查看系统位数请执行命令：getconf LONG_BIT）\r\n\r\n \r\n\r\n1、到http://nodejs.org/download/找到系统对应的安装文件\r\n\r\n执行如下命令：\r\n\r\nwget http://nodejs.org/dist/v0.8.7/node-v0.8.7.tar.gz (稳定版)\r\n\r\n//wget  http://nodejs.org/dist/v0.10.22/node-v0.10.22.tar.gz （最新版）\r\n\r\n \r\n\r\n2、解压\r\n\r\n tar -xvf node-v0.10.22-linux-x64.tar.gz\r\n\r\ncd node_xxx \r\n\r\n \r\n\r\n3、安装\r\n\r\nyum install gcc-c++(if has no c compiler)\r\n\r\n./configure\r\n\r\n \r\n\r\n4、安装nodejs\r\n\r\nmake install\r\n\r\n如果python版本过低，可能会报错，请先升级http://gavinshaw.blog.51cto.com/385947/610585\r\n\r\n这个一定有用：http://www.cyberciti.biz/faq/wget-example-download-from-https-web-sites/\r\n\r\n \r\n\r\n5、安装完毕，接下来就可以利用node命令启动服务了。\r\n\r\ncd /$app_path/\r\n\r\nnode /nodejs/app.js\r\n\r\n \r\n\r\n值得注意的是，我们使用node命令启动后，服务会因为我们关闭这个操作窗口而挂断，解决办法是使用nohup命令不挂断执行。\r\n\r\n \r\n\r\n以下为我在项目中使用的发布脚本：\r\n\r\nrm -rf /data/webapps/bds_nodejs\r\n\r\ncd /data/trunk/bds_nodejs\r\nsvn update .\r\nsvn export /data/trunk/bds_nodejs /data/webapps/bds_nodejs\r\n\r\nkill -9 \'netstat -nlp | grep 3000 |awk \'{print $7}\' | awk -F/ \'{print $1}\'\'\r\ncd /data/webapps/bds_nodejs\r\nnohup node app.js &\r\n\r\n如果遇到编码问题，请把这段shell脚本保存为ANSI格式再上传到svn服务器上，或者直接在linux上使用vi编写。\r\n\r\n \r\n\r\n--------------------------------------------------------------------------------------------------------------\r\n\r\nmake install 以后，有点系统直接执行node -v会报命令不存在的错误，\r\n\r\n这个时候就要配置一下node的环境变量。\r\n\r\n1、先找到node安装在哪里\r\n\r\nwhereis node\r\n\r\n找到node命令的路径。\r\n\r\n2、打开配置文件，并增加path\r\n\r\nvi /etc/profile\r\n\r\n增加：\r\n\r\nexport PATH = /usr/local/bin\r\n\r\n3、修改完以后执行 source profile即可生效。\r\n\r\n \r\n\r\n附：\r\n\r\n环境变量的查看\r\n（1）使用echo命令查看单个环境变量。例如：\r\necho $PATH\r\n（2）使用env查看所有环境变量。例如：\r\nenv\r\n（3）使用set查看所有本地定义的环境变量。例如：\r\nset\r\n另外，unset可以删除指定的环境变量。\r\n\r\n常用的环境变量\r\nPATH 决定了shell将到哪些目录中寻找命令或程序\r\nHOME 当前用户主目录\r\nHISTSIZE　历史记录数\r\nLOGNAME 当前用户的登录名\r\nHOSTNAME　指主机的名称\r\nSHELL 当前用户Shell类型\r\nLANGUGE 　语言相关的环境变量，多语言可以修改此环境变量\r\nMAIL　当前用户的邮件存放目录\r\nPS1　基本提示符，对于root用户是#，对于普通用户是$\r\n\r\n\r\n针对生产环境中express应用安装部署上需要注意的问题。\r\n>设置NODE_ENV为“production”\r\n确保应用的自动重启\r\n将应用部署一个集群中\r\n缓存请求结果\r\n使用负载均衡\r\n使用反向代理\r\n\r\n1. 设置运行环境变量\r\n\r\n一般我们设置node环境变量有两种，分别是 development 和 production。设置环境变量为production将会使得express应用\r\n\r\n缓存视图模板\r\n缓存css文件\r\n生成更少的冗余错误信息\r\n另外如果大家感兴趣的话可以查看这篇文章环境变量测试，这里作者对于设置该变量前后做了一些性能上的对比，非常详细。\r\n\r\n如果我们使用upstart来管理应用的话我们需要配置文件中加入环境变量\r\n\r\n#/etc/init/env.conf\r\nenv NODE_ENV=production\r\n如果是使用systemd来管理的话，则修改配置文件如下：\r\n\r\n#/etc/systemd/system/myservice.service\r\nEnvironment=NODE_ENV=production\r\n2.确保自启动\r\n\r\n这里自启动不仅仅指的是如何在程序异常终止之后启动而且还要保证程序在操作系统重启之后能自启动。这里我们分别介绍下两种情况。\r\n\r\n使用一个进程管理器\r\n进程管理器一般可以帮助我们，获得进程的运行性能和资源的消耗，动态的修改配置提升性能，集群控制。这里我么推荐的一般可以使用strongloop process manager或者pm2还有forever，同样详细的参考如下链接进程管理器比较\r\n通过上述的比较我们可以看出，strongloop的进程管理器支持的特性更丰富一些，特别是查看cpu占用堆占用，集成操作系统脚本，远程管理集群等等。\r\n\r\n随系统启动的程序自启动\r\n随系统启动的程序，我们可以使用之前的进程管理器，forever应该是不支持的。其他的都可以生成对应的启动脚本，当操作系统启动的时候，进程管理器启动，并带动程序的启动。或者我们可以直接配置使用systemd等方式来管理进程的开机启动。\r\n我们这里简单的通过介绍systemd的方式来介绍如何设置程序的随系统启动。systemd是一个linux系统的服务管理器。一个systemd的配置文件被称作为unit file.以.service为后缀。\r\n\r\n[Unit]\r\nDescription=Awesome Express App\r\n\r\n[Service]\r\nType=simple\r\nExecStart=/usr/local/bin/node /projects/myapp/index.js\r\nWorkingDirectory=/projects/myapp\r\n\r\nUser=nobody\r\nGroup=nogroup\r\n\r\n#Environment variables:\r\nEnvironment=NODE_ENV=production\r\n\r\n#Allow many incoming connections\r\nLimitNOFILE=infinity\r\n\r\n#Allow core dumps for debugging\r\nLimitCORE=infinity\r\n\r\nStandardInput=null\r\nStandardOutput=syslog\r\nStandardError=syslog\r\nRestart=always\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n3. 将app运行在一个集群中\r\n\r\n在多核心处理上运行的应用，可以通过使用cluster模块启动多个实例运行在不同的处理器上。并在多个实例上实现“负载均衡”。\r\nimage\r\n但是对于不同的实例，由于内存空间的隔离，导致所有的程序对象都是本地的，无法实现共享，但是我们可以借助于redis这样的工具实现对象的共享。并且对于某个进程的终端不会影响其他进程的处理，只需要在编写代码的时候记录此次终端并生成一个新的实例即可。\r\n\r\n我们可以使用node的cluster模块（需要编写代码实现）或者是strongloop的进程管理器来处理，并且不需要修改代码。strongloop PM将根据cpu的数目自动的生成多个进程，并且可以手动调整该值。\r\n\r\n4. 缓存请求\r\n\r\n使用缓存，可以极大的提升响应速度，而不需要对于重复的请求做重复的操作。我们可以使用nginx缓存配置来配置缓存\r\n\r\n5. 使用负载均衡\r\n\r\n单一的express进程服务，不管如何优化都无法达到一个很高的性能需求，特别是对于一个拥有很多用户的web应用。我们可以通过使用一个负载均衡器来完成应用的水平的扩展。比如使用nginx或者HAProxy来完成负载均衡。在使用负载均衡的时候，我们可能需要确保每一个请求关联相对应的会话ID落到同一个进程上。这里有一篇文章可以供参考，了解如何配置负载均衡socket.io配置负载均衡\r\n\r\n另外strongloop pm可以很好的与nginx配合设置负载均衡。\r\n\r\n6. 反向代理服务\r\n\r\n反向代理服务器一般设置在请求入口处，完成错误页面处理，压缩处理，缓存和静态文件处理，负载均衡操作等等。具体的可参考nginx或者HAProxy的配置来完成反向代理服务的搭建。', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('139', 'git-cheatsheet.pdf', 'git-cheatsheet-pdf', '1454309270', '1454309270', 'a:5:{s:4:\"name\";s:18:\"git-cheatsheet.pdf\";s:4:\"path\";s:35:\"/usr/uploads/2016/02/1092438996.pdf\";s:4:\"size\";i:259772;s:4:\"type\";s:3:\"pdf\";s:4:\"mime\";s:15:\"application/pdf\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '141');
INSERT INTO `typecho_contents` VALUES ('140', 'git-cheatsheet-CN-dark.pdf', 'git-cheatsheet-CN-dark-pdf', '1454309270', '1454309270', 'a:5:{s:4:\"name\";s:26:\"git-cheatsheet-CN-dark.pdf\";s:4:\"path\";s:35:\"/usr/uploads/2016/02/1232664522.pdf\";s:4:\"size\";i:769423;s:4:\"type\";s:3:\"pdf\";s:4:\"mime\";s:15:\"application/pdf\";}', '2', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '141');
INSERT INTO `typecho_contents` VALUES ('141', 'git指令速查文档（纯手工打造）', '141', '1454309280', '1461061311', '<!--markdown--># Git基本常用命令如下：\r\n```\r\nmkdir： XX (创建一个空目录 XX指目录名)\r\npwd：   显示当前目录的路径。\r\ngit init    把当前的目录变成可以管理的git仓库，生成隐藏.git文件。\r\ngit add XX   把xx文件添加到暂存区去。\r\ngit commit –m “XX”  提交文件 –m 后面的是注释。\r\ngit status   查看仓库状态\r\ngit diff  XX   查看XX文件修改了那些内容\r\ngit log    查看历史记录\r\ngit reset  --hard HEAD^ 或者 git reset  --hard HEAD~ 回退到上一个版本\r\n(如果想回退到100个版本，使用git reset –hard HEAD~100 )\r\ncat XX  查看XX文件内容\r\ngit reflog   查看历史记录的版本号id\r\ngit checkout -- XX  把XX文件在工作区的修改全部撤销。\r\ngit rm XX   删除XX文件\r\ngit remote add origin https://github.com/tugenhua0707/testgit 关联一个远程库\r\ngit push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库\r\ngit clone https://github.com/tugenhua0707/testgit  从远程库中克隆\r\ngit checkout –b dev  创建dev分支 并切换到dev分支上\r\ngit branch  查看当前所有的分支\r\ngit checkout master 切换回master分支\r\ngit merge dev    在当前的分支上合并dev分支\r\ngit branch –d dev 删除dev分支\r\ngit branch name  创建分支\r\ngit stash 把当前的工作隐藏起来 等以后恢复现场后继续工作\r\ngit stash list 查看所有被隐藏的文件列表\r\ngit stash apply 恢复被隐藏的文件，但是内容不删除\r\ngit stash drop 删除文件\r\ngit stash pop 恢复文件的同时 也删除文件\r\ngit remote 查看远程库的信息\r\ngit remote –v 查看远程库的详细信息\r\ngit push origin master  Git会把master分支推送到远程库对应的远程分支上远程仓库。\r\n```\r\n# 创建\r\n\r\n- 复制一个已创建的仓库\r\n> git clone ssh://user@admin.com/repo.git\r\n\r\n- 创建一个新建的本地仓库\r\n> git init\r\n\r\n# 本地修改\r\n\r\n- 显示工作路径下全部已修改的文件\r\n> git status\r\n\r\n- 显示与上次提交版本文件的不同\r\n> git diff\r\n\r\n- 把当前某个文件添加到下次提交中\r\n> git add.\r\n\r\n- 指定某个文件的修改添加到下次提交中\r\n> git add -p <file>\r\n\r\n- 提交本地的所有修改\r\n> git commit -a\r\n\r\n- 提交之前已标记的变化\r\n> git commit\r\n\r\n- 修改上次提交（请勿修改已发布的提交记录）\r\n> git commit --amend\r\n\r\n# 提交历史\r\n\r\n- 从最新提交开始显示所有的提交记录\r\n> git log\r\n\r\n- 显示指定文件的所有修改\r\n> git log -p <file>\r\n\r\n- 谁，在什么时候修改了文件的什么内容\r\n> git blame <file>\r\n\r\n# 分支与标签\r\n\r\n- 显示所有分支\r\n> git branch -av\r\n\r\n- 切换当前分支\r\n> git checkout <branch>\r\n\r\n- 创建新分支（基于当前分支）\r\n> git branch <new-branch>\r\n\r\n- 创建新分支（基于远程分支）\r\n> git checkout --track <remote/branch>\r\n\r\n- 删除本地分支\r\n> git branch -d <branch>\r\n\r\n- 给当前分支打标签\r\n> git tag <tag-name>\r\n\r\n# 更新与发布\r\n\r\n- 列出当前配置的远程端\r\n> git remote -v\r\n\r\n- 显示远程端信息\r\n> git remote show <remote>\r\n\r\n- 添加新的远程端\r\n> git remote add <shortname> <url>\r\n\r\n- 下载远程端所有改动到本地（不会自动合并到当前）\r\n> git fetch <remote>\r\n\r\n- 下载远程端所有改动到本地（自动合并到当前）\r\n> git pull <remote> <branch>\r\n\r\n- 将本地版本发布到远程端\r\n> git push <remote> <branch>\r\n\r\n- 删除远程端分支\r\n> git branch -dr <remote/branch>\r\n\r\n- 发布标签\r\n> git push --tags\r\n\r\n# 合并和重置\r\n\r\n- 将分支合并到当前\r\n> git merge <branch>\r\n\r\n- 将当前版本重置到当前分支（请勿重置已发布的提交）\r\n> git rebase <branch>\r\n\r\n- 退出重置\r\n>git rebase --abort\r\n\r\n- 解决冲突后继续重置\r\n> git rebase --continue\r\n\r\n- 使用配置好的合并工具去解决冲突\r\ngit mergetool\r\n\r\n- 在编辑器中手动解决冲突后，标记文件为已解决冲突\r\n> git add <resolved-file>\r\n  git rm <resolved-file>\r\n\r\n# 撤销\r\n\r\n- 放弃工作目录下所有修改稿\r\n> git reset --hard HEAD\r\n\r\n- 放弃某个文件的所有本地修改\r\n> git checkout HEAD <file>\r\n\r\n- 重置一个提交（通过创建一个截然不同的新提交）\r\n> git revert <commit>\r\n\r\n- 将HEAD重置到上一次提交的版本并抛弃改版本之后的所有修改\r\n> git reset  --head <commit>\r\n\r\n- 将HEAD重置到上一次提交的版本并将之后修改为未添加到缓存区的修改\r\n> git reset <commit>\r\n\r\n- 将HEAD重置到上一次提交的版本并保留未提交的本地修改\r\n> git reset --keep <commit>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[git-cheatsheet.pdf][1]\r\n[git-cheatsheet-CN-dark.pdf][2]\r\n\r\n\r\n  [1]: http://junhey.com/usr/uploads/2016/02/1092438996.pdf\r\n  [2]: http://junhey.com/usr/uploads/2016/02/1232664522.pdf\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('145', '微信截图_20160203190454.png', '微信截图_20160203190454-png', '1454497507', '1454497507', 'a:5:{s:4:\"name\";s:31:\"微信截图_20160203190454.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/02/1384285715.png\";s:4:\"size\";i:64152;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '144');
INSERT INTO `typecho_contents` VALUES ('152', '微信截图_20160219154303.png', '微信截图_20160219154303-png', '1455868521', '1455868521', 'a:5:{s:4:\"name\";s:31:\"微信截图_20160219154303.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/02/1874123057.png\";s:4:\"size\";i:5015;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '150');
INSERT INTO `typecho_contents` VALUES ('153', '微信截图_20160219154326.png', '微信截图_20160219154326-png', '1455868547', '1455868547', 'a:5:{s:4:\"name\";s:31:\"微信截图_20160219154326.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/02/2958961288.png\";s:4:\"size\";i:15303;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '2', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '150');
INSERT INTO `typecho_contents` VALUES ('160', 'browser-sync自动刷新', '160', '1456717680', '1458379758', '<!--markdown-->1. 安装 Node.js\r\n\r\n2. 安装 BrowserSync\r\n\r\nNode.js的包管理（NPM）库中 安装BrowserSync\r\n```\r\nnpm install -g browser-sync\r\n```\r\n结合gulpjs或gruntjs构建工具来使用\r\n```\r\nnpm install --save-dev browser-sync\r\n```\r\n\r\n3. 启动 BrowserSync\r\n\r\n// --files 路径是相对于运行该命令的项目（目录） \r\n```\r\nbrowser-sync start --server --files \"css/*.css\"\r\n```\r\n// 主机名可以是ip或域名\r\n```\r\nbrowser-sync start --proxy \"主机名\" \"css/*.css\"\r\n```\r\ngulp结合broweser-sync\r\n\r\n首先，您需要安装 Browsersync 和 依赖包 Gulp 。如果你是第一次安装，那么你可以通过--save-dev命令，这将会自动在你的package.JSON里添加依赖，下一次再安装时，你只需要npm install\r\n```\r\n$ npm install browser-sync gulp --save-dev\r\n```\r\n然后，在您的 gulpfile.js 文件里使用它们。\r\n```\r\nvar gulp        = require(\'gulp\');\r\nvar browserSync = require(\'browser-sync\').create();\r\n```\r\n// 静态服务器\r\n```\r\ngulp.task(\'browser-sync\', function() {\r\n    browserSync.init({\r\n        server: {\r\n            baseDir: \"./\"\r\n        }\r\n    });\r\n});\r\n```\r\n// 代理\r\n```\r\ngulp.task(\'browser-sync\', function() {\r\n    browserSync.init({\r\n        proxy: \"你的域名或IP\"\r\n    });\r\n});\r\n```\r\n\r\n参考网站：[http://caibaojian.com/browser-sync.html](http://caibaojian.com/browser-sync.html)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('161', 'footer', '161', '1409209080', '1456732858', '<!--markdown-->> 采用display: inline-block;替代浮动布局的情况\r\n\r\n代码如下\r\n```\r\n<html>\r\n<head>\r\n	<title></title>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\r\n</head>\r\n<style>\r\n.my-foot{\r\n	width: 100%;\r\n	height: 400px;\r\n	background-color: #212328;\r\n}\r\n.my-container{\r\n	width: 1170px;\r\n	height: 400px;\r\n	margin: 0 auto;\r\n}\r\n.foot-header{\r\n	height: 130px;\r\n	padding-top: 40px;\r\n	padding-bottom: 30px;\r\n	font-size: 0;\r\n}\r\n.foot-logo{\r\n    height: 130px;\r\n    width: 320px;\r\n    display: inline-block;\r\n    vertical-align: top;\r\n}\r\n.myoffer-logo{\r\n    height: 80px;\r\n    width: 170px;\r\n    margin-top: 15px;\r\n    margin-bottom: 15px;\r\n    background-image: url(\'http://www.myoffer.cn/images/logo/logo_web_beta_zh_white.png\');\r\n	background-repeat:no-repeat;\r\n	background-size:contain;\r\n}\r\n.myoffer-copyright{\r\n    color: #55575c;\r\n    font-size: 12px;\r\n}\r\n.foot-about{\r\n    height: 130px;\r\n    width: 850px;\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    font-size: 0;\r\n}\r\n.foot-about dl{\r\n    height: 130px;\r\n    width: 212.5px;\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    text-align: center;\r\n}\r\n\r\n.foot-about dl dt{font-size: 14px;color: #fff;}\r\n.foot-about dl dd{margin-left: 0;}\r\n.foot-about dl dd ul{padding: 0;}\r\n.foot-about dl dd ul li{margin-top: 20px;font-size: 12px; list-style-type:none;}\r\n.foot-about dl dd ul li a{color: #55575c;text-decoration:none;}\r\n.foot-about dl:last-child dd ul li a{color:#fff;}\r\n.foot-footer{\r\n    height: 170px;\r\n    padding-top: 30px;\r\n}\r\n.foot-title{\r\n    height: 20px\r\n}\r\n.foot-title ul{padding: 0;}\r\n.foot-title ul li{\r\n    height: 14px;\r\n    line-height: 14px;\r\n    overflow: hidden;\r\n    font-size: 14px;\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    padding-left: 12px;\r\n    padding-right: 13px;\r\n    cursor: pointer;\r\n    border-left:3px solid #212328;\r\n	list-style-type:none;\r\n}\r\n.foot-title-active{\r\n    border-left-color:#f2287b !important;\r\n}\r\n.foot-title ul li a{\r\n    font-size: 14px;\r\n    text-decoration:none;\r\n    color:#fff;\r\n}\r\n.foot-link{\r\n    height: auto;\r\n}\r\n.foot-link dl{}\r\n.foot-link dl dd{margin-left: 0;}\r\n.foot-link ul{padding: 0;}\r\n.foot-link ul li{\r\n    height: 14px;\r\n    line-height: 14px;\r\n    overflow: hidden;\r\n    border-left:2px solid #55575c;\r\n    padding-left: 8px;\r\n    font-size: 12px;\r\n    color: #fff;\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    list-style-type:none;\r\n}\r\n.foot-link ul li:first-child{\r\n    border-left:none;\r\n    padding-left: 0;\r\n}\r\n.foot-link ul li a{\r\n    text-decoration:none;\r\n    color: #55575c;\r\n}\r\n</style>\r\n<body>\r\n    <div class=\"my-foot\">\r\n        <div class=\"my-container\">\r\n            <div class=\"foot-header\">\r\n                <div class=\"foot-logo\">\r\n                    <div class=\"myoffer-logo\">\r\n                    </div>\r\n                    <div class=\"myoffer-copyright\">\r\n                        深圳学无国界教育科技有限公司<br/>\r\n                        粤ICP备15082229号-1\r\n                    </div>\r\n                </div>\r\n                <div class=\"foot-about\">\r\n                    <dl>\r\n                        <dt>About myOffer®</dt>\r\n                        <dd>\r\n                            <ul>\r\n                                <li><a href=\"\">About us</a></li>\r\n                                <li><a href=\"\">Join us</a></li>\r\n                                <li><a href=\"\">Pretnership</a></li>\r\n                            </ul>\r\n                        </dd>\r\n                    </dl>\r\n                    <dl>\r\n                        <dt>About myOffer®</dt>\r\n                        <dd>\r\n                            <ul>\r\n                                <li><a href=\"\">About us</a></li>\r\n                                <li><a href=\"\">Join us</a></li>\r\n                                <li><a href=\"\">Pretnership</a></li>\r\n                            </ul>\r\n                        </dd>\r\n                    </dl>\r\n                    <dl>\r\n                        <dt>About myOffer®</dt>\r\n                        <dd>\r\n                            <ul>\r\n                                <li><a href=\"\">About us</a></li>\r\n                                <li><a href=\"\">Join us</a></li>\r\n                                <li><a href=\"\">Pretnership</a></li>\r\n                            </ul>\r\n                        </dd>\r\n                    </dl>\r\n                    <dl>\r\n                        <dt>About myOffer®</dt>\r\n                        <dd>\r\n                            <ul>\r\n                                <li><a href=\"\">About us</a></li>\r\n                                <li><a href=\"\">Join us</a></li>\r\n                                <li><a href=\"\">Pretnership</a></li>\r\n                            </ul>\r\n                        </dd>\r\n                    </dl>\r\n                </div>\r\n            </div>\r\n            <div class=\"foot-footer\">\r\n                <div class=\"foot-title\">\r\n                    <ul>\r\n                        <li class=\"foot-title-active\"><a href=\"javascript:;\">热门学校</a></li>\r\n                        <li><a href=\"javascript:;\">专题推荐</a></li>\r\n                        <li><a href=\"javascript:;\">友情链接</a></li>\r\n                        <li><a href=\"javascript:;\">学校文章</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"foot-link\">\r\n                    <dl>\r\n                        <dd>\r\n                            <ul>\r\n                                <li><a href=\"\">山野日本语学校</a></li>\r\n                                <li><a href=\"\">罗德学校</a></li>\r\n                                <li><a href=\"\">亚伯学校</a></li>\r\n                                <li><a href=\"\">山野日本语学校</a></li>\r\n                                <li><a href=\"\">罗德学校</a></li>\r\n                                <li><a href=\"\">亚伯学校</a></li>\r\n                                <li><a href=\"\">山野日本语学校</a></li>\r\n                                <li><a href=\"\">罗德学校</a></li>\r\n                                <li><a href=\"\">亚伯学校</a></li>\r\n                                <li><a href=\"\">山野日本语学校</a></li>\r\n                                <li><a href=\"\">罗德学校</a></li>\r\n                                <li><a href=\"\">亚伯学校</a></li>\r\n                                <li><a href=\"\">山野日本语学校</a></li>\r\n                                <li><a href=\"\">罗德学校</a></li>\r\n                                <li><a href=\"\">亚伯学校</a></li>\r\n                            </ul>\r\n                        </dd>\r\n                    </dl>\r\n                    <dl style=\"display:none\">\r\n                        <dd>\r\n                            <ul>\r\n                                <li><a href=\"\">专题推荐</a></li>\r\n                                <li><a href=\"\">专题推荐</a></li>\r\n                                <li><a href=\"\">专题推荐</a></li>\r\n                                <li><a href=\"\">专题推荐</a></li>\r\n                                <li><a href=\"\">专题推荐</a></li>\r\n                                <li><a href=\"\">专题推荐</a></li>\r\n                                <li><a href=\"\">专题推荐</a></li>\r\n                            </ul>\r\n                        </dd>\r\n                    </dl>\r\n                    <dl style=\"display:none\">\r\n                        <dd>\r\n                            <ul>\r\n                                <li><a href=\"\">友情链接</a></li>\r\n                                <li><a href=\"\">baidu</a></li>\r\n                            </ul>\r\n                        </dd>\r\n                    </dl>\r\n                    <dl style=\"display:none\">\r\n                        <dd>\r\n                            <ul>\r\n                                <li><a href=\"\">学校文章</a></li>\r\n                                <li><a href=\"\">学校文章</a></li>\r\n                                <li><a href=\"\">友情链接</a></li>\r\n                            </ul>\r\n                        </dd>\r\n                    </dl>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n	<script src=\"http://apps.bdimg.com/libs/jquery/2.1.4/jquery.js\"></script>\r\n	<script type=\"text/javascript\">\r\n	//footer link显示和隐藏\r\n		$(\'.foot-title ul\').on(\'click\',\'li\',function(){\r\n			$(this).addClass(\'foot-title-active\').siblings().removeClass(\'foot-title-active\');\r\n			$(\'.foot-link dl\').eq($(this).index()).slideDown().siblings().slideUp();\r\n		});\r\n	</script>\r\n</body>\r\n</html>\r\n```', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('148', '强烈推荐一款护眼的软件', '148', '1455590644', '1455590755', '<!--markdown-->[f.lux](https://justgetflux.com/) 官网\r\n\r\n下面是它的介绍：\r\nEver notice how people texting at night have that eerie blue glow?\r\n\r\nOr wake up ready to write down the Next Great Idea, and get blinded by your computer screen?\r\n\r\nDuring the day, computer screens look good—they\'re designed to look like the sun. But, at 9PM, 10PM, or 3AM, you probably shouldn\'t be looking at the sun.\r\n\r\nf.lux\r\nf.lux fixes this: it makes the color of your computer\'s display adapt to the time of day, warm at night and like sunlight during the day.\r\n\r\nIt\'s even possible that you\'re staying up too late because of your computer. You could use f.lux because it makes you sleep better, or you could just use it just because it makes your computer look better.\r\n\r\n下载链接：[https://justgetflux.com/flux-setup.exe](https://justgetflux.com/flux-setup.exe)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('149', 'git本地有修改 如何强制更新', '149', '1455698645', '1455698670', '<!--markdown-->本地有修改和提交，如何强制用远程的库更新更新。我尝试过用git pull -f，总是提示 You have not concluded your merge. (MERGE_HEAD exists)。\r\n\r\n我需要放弃本地的修改，用远程的库的内容就可以，应该如何做？傻傻地办法就是用心的目录重新clone一个，正确的做法是什么？\r\n\r\n正确的做法应该是：\r\n\r\ngit fetch --all\r\ngit reset --hard origin/master\r\ngit fetch 只是下载远程的库的内容，不做任何的合并git reset 把HEAD指向刚刚下载的最新的版本\r\n\r\n参考链接：\r\n\r\n[http://stackoverflow.com/questions/1125968/force-git-to-overwrite-local-files-on-pull](http://stackoverflow.com/questions/1125968/force-git-to-overwrite-local-files-on-pull)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('150', 'Window下Git和Github的环境配置', '150', '1455781080', '1455868619', '<!--markdown-->1. 注册一个Github账号\r\n\r\n进入github.com使用邮箱注册，这是必须的，github会成为你写程序过程中的一个名片\r\n\r\n2. 安装msysgit\r\n\r\n下载网址：http://msysgit.github.io/\r\n安装过程使用默认选项即可，安装成功后会生成两个工具：Git Gui和Git Bash。前者是图形界面，后者为命令行界面（由于Git最初是用在linux上的，所以为了保持操作风格，Git Bash使用的是linux下的命令，该命令会被翻译成windows docs命令）。\r\n安装成功后具有两种不同风格的页面：Git Gui和Git Bash\r\n\r\n3. 将GitHub账号和本地Git客户端连接\r\n\r\nGithub账号与Git客户端需要有一个连接标识，即SSH密钥，通过这个密钥，我们可以在客户端下操作即可获取github服务器上的数据。这个密钥需要使用Git Bash来生成，操作如下：\r\ngit config –global user.name <</span>用户名>\r\ngit config –global user.email <</span>邮箱>\r\n![微信截图_20160219154303.png](http://junhey.com/usr/uploads/2016/02/1874123057.png)\r\ngit config –global alias.ci commit//为长度较长的命令取一个别名，如本命令中即是为commit取别名为ci，\r\nssh –t git@github.com //这步判断是否能连接github\r\nssh –keygen //这步是关键，会指定工作目录，并且会生成SSH密钥文件\r\n![微信截图_20160219154326.png](http://junhey.com/usr/uploads/2016/02/2958961288.png)\r\n经过以上操作后，会生成一个目录（.ssh），目录下有三个文件，其中SSH密钥在id_rsa.pub中 \r\n用记事本打开文件即可\r\n这就是SSH。\r\n接下来，就是把SSH密钥拷贝一份到Github账号中。\r\n添加成功后，Github和Git客户端就拥有了连接认证标识，之后就可以通过Git客户端在本地进行操作了。\r\n\r\n参考链接\r\n1 [http://www.cnblogs.com/sorex/archive/2011/08/10/2132359.html](http://www.cnblogs.com/sorex/archive/2011/08/10/2132359.html)\r\n2 [http://www.cnblogs.com/fnng/archive/2012/01/07/2315685.html](http://www.cnblogs.com/fnng/archive/2012/01/07/2315685.html)\r\n3 [http://blog.sina.com.cn/s/blog_a5191b5c0102v4w6.html](http://blog.sina.com.cn/s/blog_a5191b5c0102v4w6.html)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('154', 'git错误error: Your local changes to the following files would be overwritten', '154', '1456308780', '1456311856', '<!--markdown-->服务器上git pull是出现以下错误：\r\n```\r\nerror: Your local changes to the following files would be overwritten by merge:\r\n        application/config/config.php\r\n        application/controllers/home.php\r\nPlease, commit your changes or stash them before you can merge.\r\nAborting\r\n```\r\n不知道什么原因造成的代码冲突，处理方法如下：\r\n如果希望保留生产服务器上所做的改动,仅仅并入新配置项:\r\n```\r\ngit stash\r\ngit pull\r\ngit stash pop\r\n```\r\n然后可以使用git diff -w +文件名 来确认代码自动合并的情况.\r\n如果希望用代码库中的文件完全覆盖本地工作版本. 方法如下:\r\n```\r\ngit reset --hard\r\ngit pull\r\n```\r\n其中git reset是针对版本,如果想针对文件回退本地修改,使用\r\n```\r\ngit checkout HEAD file/to/restore\r\n```\r\n\r\n在开发过程中，git提交的过程中合并了很多东西提交上去，就是这个原因，解决方法就是先放入暂存区，然后pull，再pop然后提交。\r\n\r\n如果多次提交的话，先git reset到原来的状态，然后git pull拉下代码，再git add . & git commit代码，再git push。\r\n\r\n这里有一篇好文章：[https://segmentfault.com/q/1010000000140446](https://segmentfault.com/q/1010000000140446)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('188', 'npm切换源', '188', '1461665980', '1461666034', '<!--markdown-->npm全称Node Package Manager，是node.js的模块依赖管理工具。由于npm的源在国外，所以国内用户使用起来各种不方便。下面整理出了一部分国内优秀的npm镜像资源，国内用户可以选择使用。\r\n\r\n国内优秀npm镜像\r\n淘宝npm镜像\r\n\r\n    搜索地址：http://npm.taobao.org/\r\n    registry地址：http://registry.npm.taobao.org/\r\n\r\ncnpmjs镜像\r\n\r\n    搜索地址：http://cnpmjs.org/\r\n    registry地址：http://r.cnpmjs.org/\r\n\r\n如何使用\r\n\r\n有很多方法来配置npm的registry地址，下面根据不同情境列出几种比较常用的方法。以淘宝npm镜像举例：\r\n1.临时使用\r\n\r\nnpm --registry https://registry.npm.taobao.org install express\r\n\r\n2.持久使用\r\n\r\nnpm config set registry https://registry.npm.taobao.org\r\n\r\n// 配置后可通过下面方式来验证是否成功\r\nnpm config get registry\r\n// 或\r\nnpm info express\r\n\r\n3.通过cnpm使用\r\n\r\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\r\n\r\n// 使用\r\ncnpm install express\r\n\r\n摘自：[http://riny.net/2014/cnpm/](http://riny.net/2014/cnpm/)\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('186', 'Ubuntu下安装MongoDB 及自启动启动方法', '186', '1461168180', '1461169029', '<!--markdown-->在Ubuntu 14.10下安装了下Mongodb数据库，现在记下安装操作方法以及自动启动的方法：\r\n\r\n1. apt-get update  更新软件库\r\n\r\n2. apt-get install mongodb\r\n\r\n3. 安装完之后，就需要修改相关的配置文件修改数据存放路径\r\n\r\nvi /etc/mongodb.conf\r\n\r\ndbpath=/www/mongodb\r\n\r\nvi /etc/init.d/mongodb\r\n\r\nDATA=/www/mongodb\r\n\r\nmkdir /www/mongodb/\r\n\r\nchown -R mongodb:nogroup /www/mongodb/\r\n\r\n4. 启动Mongodb\r\n\r\n/etc/init.d/mongodb start，刚开始装完是默认启动的，可以不需要这一步\r\n\r\n5. 确认是否启动成功\r\n\r\nnetstat -antup\r\n\r\ncat /var/log/mongodb/mongodb.log\r\n\r\n6. 测试mongo客户端\r\n\r\nmongo\r\n\r\ndb.foo.save({a:1})\r\n\r\ndb.foo.findOne()\r\n\r\n7. 操作Mongodb服务后台自动启动\r\n\r\n进入/usr/bin/下输入以下命令\r\n\r\n./mongod --dbpath /var/lib/mongodb/ --logpath /var/log/mongodb/mongodb.log --logappend &\r\n后台运行程序\r\n\r\n到这一步Mongodb数据库安装完毕了\r\n\r\n补充说明：\r\n\r\n怎么在PHP里打开Mongodb的扩展呢？\r\n\r\n1.安装php mongo\r\n\r\nsudo pecl install mongo\r\n\r\n2.启用模块\r\n\r\nvi /etc/php5/cli/conf.d/mongodb.ini\r\nextension=mongo.so\r\n\r\n3.确认是否成功安装\r\n\r\nphp –m\r\n\r\n4.重启Apache\r\n\r\n完成。\r\n\r\n相关阅读：\r\n\r\nLinux下设置MongoDB开机自启动  http://www.linuxidc.com/Linux/2011-07/39149.htm\r\n\r\nCentOS编译安装MongoDB http://www.linuxidc.com/Linux/2012-02/53834.htm\r\n\r\nCentOS 编译安装 MongoDB与mongoDB的php扩展 http://www.linuxidc.com/Linux/2012-02/53833.htm\r\n\r\nCentOS 6 使用 yum 安装MongoDB及服务器端配置 http://www.linuxidc.com/Linux/2012-08/68196.htm\r\n\r\nUbuntu 13.04下安装MongoDB2.4.3 http://www.linuxidc.com/Linux/2013-05/84227.htm\r\n\r\nMongoDB入门必读(概念与实战并重) http://www.linuxidc.com/Linux/2013-07/87105.htm\r\n\r\n《MongoDB 权威指南》(MongoDB: The Definitive Guide)英文文字版[PDF] http://www.linuxidc.com/Linux/2012-07/66735.htm\r\n\r\n已经亲测，来源：[http://www.linuxidc.com/Linux/2014-04/100753.htm](http://www.linuxidc.com/Linux/2014-04/100753.htm)', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('164', 'node生产环境部署', '164', '1457674080', '1457674365', '<!--markdown-->> node生产环境部署包括部署nodejs、mongodb、nginx、git、pm2\r\n\r\n- nodejs\r\n\r\n安装 nodejs\r\ncd /root/program\r\nwget http://nodejs.org/dist/v0.12.5/node-v0.12.5-linux-x64.tar.gz\r\ntar -zxvf node-v0.12.5-linux-x64.tar.gz\r\n\r\n设置软连接，类似于wins的快捷方式，这里为了全局使用node、npm\r\nln -s /root/program/node-v0.12.5-linux-x64/bin/node /usr/local/bin/node\r\nln -s /root/program/node-v0.12.5-linux-x64/bin/npm /usr/local/bin/npm\r\n\r\n- mongodb\r\n\r\n安装 mongodb\r\ncd /root/program\r\nwget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1404-3.0.3.tgz\r\ntar -zxvf mongodb-linux-x86_64-ubuntu1404-3.0.3.tgz\r\n\r\n设置数据和日志目录\r\nmkdir data\r\nmkdir logs\r\n\r\n启动mongodb\r\n./mongod --dbpath=\"/root/program/mongodb-linux-x86_64-ubuntu1404-3.0.3/data\" --logpath=\"/root/program/mongodb-linux-x86_64-ubuntu1404-3.0.3/logs/mongodb.log\"\r\n\r\n- nginx 反向代理服务\r\n\r\n安装依赖库PCRE\r\nwget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.gz\r\ntar -zxvf pcre-8.36.tar.gz\r\ncd pcre-8.36\r\n./configure\r\nmake\r\nmake install\r\n\r\n安装依赖库zlib\r\ncd /root/program\r\nwget http://zlib.net/zlib-1.2.8.tar.gz\r\ntar -zxvf zlib-1.2.8.tar.gz\r\ncd zlib-1.2.8\r\n./configure\r\nmake\r\nmake install\r\n\r\n安装nginx\r\ncd /root/program\r\nwget http://nginx.org/download/nginx-1.8.0.tar.gz\r\ntar -zxvf nginx-1.8.0.tar.gz\r\ncd nginx-1.8.0\r\n./configure\r\nmake\r\nmake install\r\n\r\n配置nginx\r\ncd /usr/local/nginx\r\n增加nodejs站群配置\r\nvi conf/nginx.conf\r\nvi编辑配置文件，在http{..}中新增’include node.js;’,然后新建node.js\r\nvi node.js\r\nvi 编辑内容如下（多个站点配置多个server）\r\nserver { \r\n    listen 80; \r\n    server_name mhbseal.com www.mhbseal.com;\r\n    location / { \r\n        proxy_pass http://localhost:3000; \r\n    }\r\n}\r\n\r\n启动nginx\r\nsbin/nginx\r\n\r\n如果再次修改配置可重启\r\nsbin/nginx -s reload\r\n\r\n- git版本控制\r\n\r\n安装git\r\napt-get install git\r\n把开发人员的SSH公钥加入到服务\r\ncd /root/.ssh\r\nvi authorized_keys2\r\n把类似ssh-rsa … local 这样的公钥加入到authorized_keys2的最后一行\r\n\r\n新建git仓库\r\ncd /root/repository\r\ngit init —-bare blog.git\r\ncd blog.git\r\n\r\n新建自动更新hook\r\nvi hooks/post-receive\r\n内容如下\r\n#!/bin/sh\r\nGIT_WORK_TREE=/root/website/blog git checkout -f\r\n然后添加执行权限\r\nchmod +x hooks/post-receive\r\n\r\n新建website/blog\r\ncd /root/website\r\ngit clone /root/repository/blog.git\r\n\r\n客户端\r\ngit clone root@127.0.0.1:/root/repository/blog.git\r\nclone下仓库之后就可以pull push代码了，并且服务端的website/blog也会自动更新\r\n\r\n- pm2 Node App 进程管理器\r\n\r\n安装pm2\r\nnpm install -g pm2\r\n\r\n启动app\r\nNODE_ENV=production pm2 start app.js --name blog --node-args=\"--harmony\" --watch\r\n\r\n重新启动app\r\nNODE_ENV=production pm2 reload app.js --name blog --node-args=\"--harmony\" --watch\r\n\r\n参考链接：\r\n[http://mhbseal.com/article?id=558b5520c968dd7663e31e2a](http://mhbseal.com/article?id=558b5520c968dd7663e31e2a)\r\n\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('163', 'Sublime Text 3常用快捷键', '163', '1457576880', '1457576960', '<!--markdown-->收集的一些常用快捷键：\r\n\r\n选择类\r\nCtrl+D 选中光标所占的文本，继续操作则会选中下一个相同的文本。\r\nAlt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。举个栗子：快速选中并更改所有相同的变量名、函数名等。\r\nCtrl+L 选中整行，继续操作则继续选择下一行，效果和 Shift+↓ 效果一样。\r\nCtrl+Shift+L 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。\r\nCtrl+Shift+M 选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。\r\nCtrl+M 光标移动至括号内结束或开始的位置。\r\nCtrl+Enter 在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。\r\nCtrl+Shift+Enter 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。\r\nCtrl+Shift+[ 选中代码，按下快捷键，折叠代码。\r\nCtrl+Shift+] 选中代码，按下快捷键，展开代码。\r\nCtrl+K+0 展开所有折叠代码。\r\nCtrl+← 向左单位性地移动光标，快速移动光标。\r\nCtrl+→ 向右单位性地移动光标，快速移动光标。\r\nshift+↑ 向上选中多行。\r\nshift+↓ 向下选中多行。\r\nShift+← 向左选中文本。\r\nShift+→ 向右选中文本。\r\nCtrl+Shift+← 向左单位性地选中文本。\r\nCtrl+Shift+→ 向右单位性地选中文本。\r\nCtrl+Shift+↑ 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。\r\nCtrl+Shift+↓ 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。\r\nCtrl+Alt+↑ 或Ctrl+Alt+鼠标向上拖动 向上添加多行光标，可同时编辑多行。\r\nCtrl+Alt+↓或Ctrl+Alt+鼠标向下拖动 向下添加多行光标，可同时编辑多行。\r\n多重选择（Multi-Selection）\r\n多重选择功能允许在页面中同时存在多个光标，让很多本来需要正则表达式、高级搜索和替换才能完成的任务也变得游刃有余了。\r\n\r\n激活多重选择的方法有两几种：\r\n\r\n按住 Ctrl 然后在页面中希望中现光标的位置点击。\r\n选择数行文本，然后按下 Shift + Ctrl + L。\r\n通过反复按下 Ctrl + D 即可将全文中与光标当前所在位置的词相同的词逐一加入选择，而直接按下 Alt+F3即可一次性选择所有相同的词。\r\n按下鼠标中键来进行垂直方向的纵列选择，也可以进入多重编辑状态。\r\n编辑类\r\nCtrl+J 合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。\r\nCtrl+Shift+D 复制光标所在整行，插入到下一行。\r\nTab 向右缩进。只对光标后（或者选中的）的代码有效\r\nShift+Tab 向左缩进。\r\nCtrl+[ 向左缩进。对整行有效\r\nCtrl+] 向右缩进。对整行有效\r\nCtrl+K+K 从光标处开始删除代码至行尾。按住Ctrl，按两次K。\r\nCtrl+Shift+K 删除整行。\r\nCtrl+/ 注释单行。\r\nCtrl+Shift+/ 注释多行。\r\nCtrl+K+U 转换大写。\r\nCtrl+K+L 转换小写。\r\nCtrl+Z 撤销。\r\nCtrl+Y 恢复撤销。\r\nCtrl+U 软撤销，感觉和 Gtrl+Z 一样。\r\nCtrl+F2 设置书签，F2切换书签\r\nCtrl+T 左右字母互换。\r\nF6 单词检测拼写\r\n搜索类\r\nCtrl+F 打开底部搜索框，查找关键字。\r\nCtrl+shift+F 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。\r\nCtrl+P 打开搜索框。举个栗子：1、输入当前项目中的文件名，快速搜索文件，2、输入@和关键字，查找文件中函数名，3、输入：和数字，跳转到文件中该行代码，4、输入#和关键字，查找变量名。\r\nCtrl+G 打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。\r\nCtrl+R 打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。\r\nCtrl+： 打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。\r\nEsc 退出光标多行选择，退出搜索框，命令框等。\r\nCtrl+Shift+P 打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。\r\n显示类\r\nCtrl+Tab 按文件浏览过的顺序，切换当前窗口的标签页。\r\nCtrl+PageDown 向左切换当前窗口的标签页。\r\nCtrl+PageUp 向右切换当前窗口的标签页。\r\nAlt+Shift+1 窗口分屏，恢复默认1屏（非小键盘的数字）\r\nAlt+Shift+2 左右分屏-2列\r\nAlt+Shift+3 左右分屏-3列\r\nAlt+Shift+4 左右分屏-4列\r\nAlt+Shift+5 等分4屏\r\nAlt+Shift+8 垂直分屏-2屏\r\nAlt+Shift+9 垂直分屏-3屏\r\nCtrl+K+B 开启/关闭侧边栏。\r\nF11 全屏模式\r\nShift+F11 免打扰模式', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('180', 'jswidth.jpg', 'jswidth-jpg', '1460971157', '1460971157', 'a:5:{s:4:\"name\";s:11:\"jswidth.jpg\";s:4:\"path\";s:35:\"/usr/uploads/2016/04/1706032792.jpg\";s:4:\"size\";i:369502;s:4:\"type\";s:3:\"jpg\";s:4:\"mime\";s:10:\"image/jpeg\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '179');
INSERT INTO `typecho_contents` VALUES ('167', 'AngularJS 路由', '167', '1458375420', '1458381274', '<!--markdown-->##  Angular ui-router\r\n\r\n## 前言\r\n\r\n之前不太理解前端怎么实现路由功能，以前知道有一种方式使用html5的pushState可以操作url才实现路由的功能，在实践项目中也用过一次，后来这种操作叫成了pajax，这里有一个[demo](http://html5demos.com/history)，具体怎么用可以[点我](https://developer.mozilla.org/en-US/docs/Web/API/History/pushState)\r\n\r\n## cnodejs\r\n\r\ngithub想要star更多，需要时间投入开源的怀抱，让我想起了经常在cnodejs上的api，想想是不是可以做点什么，然后结合最近的工作，想起了通过api才做一个web app ，其中有一个做的很不错的，基于VUE的cnodejs webapp，可以[点我](https://github.com/shinygang/Vue-cnodejs)看。\r\n工作中闲下来了也想在github上打造自己的简历，然后就想起来了自己做一个类是的webapp，说好了就开始，先写好页面，页面上用的腾讯的一个UI组件，[http://frozenui.github.io/](http://frozenui.github.io/)，页面搭好了之后就开始用angular调用api实现功能。\r\n\r\n## 功能模块\r\n\r\n大概看了所有的类似客户端，需要一下模块：\r\n\r\n- 文章列表\r\n\r\n- 文章详情\r\n\r\n- 用户详情\r\n\r\n- 消息列表\r\n\r\n- 登录\r\n\r\n- 点赞、评论\r\n\r\n- 关于\r\n\r\n基于这些模块，刚开始是独立开发的，做好了文章列表和文章详情之后，发现自己没有建立路由机制，刚开始想用node，然后想想是否可以用angular做路由，就开始查谷歌，看了官方文档，确实可以实现，这里可以看[官方的案例](https://docs.angularjs.org/api/ngRoute/service/$route)\r\n\r\n\r\n## route\r\n\r\n看到这里了，我想告诉你，自学来说最重要的就是谷歌，很多东西走可以学到，这里放几遍对于angular route理解的文章。\r\n\r\n- [AngularJS 路由：ng-route 与 ui-router](http://harttle.com/2015/06/10/angular-route.html)\r\n\r\n- [学习 ui-router - 路由控制](http://bubkoo.com/2014/01/02/angular/ui-router/guide/url-routing/)\r\n\r\n- [Single Page Apps with AngularJS Routing and Templating](https://scotch.io/tutorials/single-page-apps-with-angularjs-routing-and-templating)\r\n\r\n对，就如第三篇文章写的，我想做一个单页面，通过angular实现路由。\r\n然后通过这些学习，实现了一个简单的例子，界面上没有做优化，主要是功能上。[戳我](http://junhey.com/demo/angular-route-example/main.html)看在线运行实例，代码如下\r\n\r\n> index.html\r\n\r\n```html\r\n<html ng-app=\"cnodejsapp\">\r\n	<head>\r\n		<title>Angular.js的route单页面路由</title>\r\n		<meta charset=\"utf-8\">\r\n		<meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=1, user-scalable=no\">\r\n		<script src=\"./angular.min.js\"></script>\r\n		<script src=\"./angular-route.min.js\"></script>\r\n		<script src=\"./main.js\"></script>\r\n	</head>\r\n	<body>\r\n		<div>\r\n			<!-- 头部 -->\r\n			<header id=\"head\" class=\"ui-header ui-header-positive ui-border-b\">\r\n				<h1>Angular route</h1>\r\n			</header>\r\n			<!-- 导航 -->\r\n			<section class=\"ui-container\">				\r\n				<div class=\"ui-label-list\">\r\n					<label class=\"ui-label\"><a href=\"#/list\">列表</a></label>\r\n					<label class=\"ui-label\"><a href=\"#/add\">发布</a></label>\r\n					<label class=\"ui-label\"><a href=\"#/about\">关于</a></label>\r\n				</div>\r\n			</section>\r\n			<!-- 首页列表 -->\r\n			<section class=\"ui-container\">\r\n				<br /><br />			\r\n				<div ng-view class=\"view-animate\"></div>\r\n			</section>\r\n			<!-- 列表页 -->\r\n			<script type=\"text/ng-template\" id=\"list.html\">				\r\n				<table width=\"100%\" border=\"1\" style=\"border-collapse:collapse;\">\r\n					<thead>\r\n						<td>id</td>\r\n						<td>标题</td>\r\n						<td>内容</td>\r\n						<td>发布时间</td>\r\n					</thead>\r\n					<tr ng-repeat=\"message in messageList\">\r\n						<td>{{message.id}}</td>\r\n						<td><a href=\'#/content/{{message.id}}\'>{{message.title}}</a></td>\r\n						<td>{{message.content}}</td>\r\n						<td>{{message.date|date:YY-mm-dd}}</td>\r\n					</tr>\r\n				</table>\r\n			</script>\r\n			<!-- 内容页 -->\r\n			<script type=\"text/ng-template\" id=\"content.html\">\r\n				<a href=\"#/edit/{{message.id}}\">编辑</a>\r\n                <h1>{{message.title}}</h1>\r\n                <span class=\"date\">发布日期：{{message.date|date:YY-mm-dd}}</span>\r\n                <div class=\"content\">正文：{{message.content}}</div>\r\n			</script>\r\n			<!-- 增加页 -->\r\n			<script type=\"text/ng-template\" id=\"add.html\">\r\n				<h1>添加留言</h1>\r\n				标题：<input type=\"text\" ng-model=\"title\"><br>\r\n				内容：<textarea ng-model=\"content\" cols=\"30\" rows=\"10\" style=\"vertical-align:top;\"></textarea><br>\r\n				<button ng-click=\"add()\">提交</button>\r\n			</script>\r\n			<!-- 编辑页 -->\r\n			<script type=\"text/ng-template\" id=\"edit.html\">\r\n				<h1>编辑留言{{message.id}}</h1>\r\n				标题：<input type=\"text\" ng-model=\"message.title\"><br>\r\n				内容：<textarea ng-model=\"message.content\" cols=\"30\" rows=\"10\" style=\"vertical-align:top;\"></textarea><br>\r\n				<button ng-click=\"update()\">提交</button>\r\n			</script>			\r\n			<!-- 关于页 -->\r\n			<script type=\"text/ng-template\" id=\"about.html\">\r\n				{{about}}\r\n				<h1 ng-click=\"index()\">点击回首页</h1>\r\n			</script>\r\n		</div>\r\n	</body>\r\n</html>\r\n```\r\n\r\n> main.js\r\n\r\n```js\r\nvar app=angular.module(\'cnodejsapp\',[\'ngRoute\']);\r\nfunction routeConfig($routeProvider){\r\n	$routeProvider\r\n	.when(\'/list\',{controller:\'ListController\',templateUrl:\'list.html\'})\r\n	.when(\'/content/:id\',{controller:\'ContentController\',templateUrl:\'content.html\'})\r\n	.when(\'/add\',{controller:\'AddController\',templateUrl:\'add.html\'})\r\n	.when(\'/edit/:id\',{controller:\'EditController\',templateUrl:\'edit.html\'})\r\n	.when(\'/about\',{controller:\'AboutController\',templateUrl:\'about.html\'})\r\n	.otherwise({redirectTo:\'/\'});\r\n};\r\napp.config(routeConfig);\r\n\r\nvar messageList=[{\r\n		id : 1,\r\n		title : \'title1\',\r\n		content : \'content1\',\r\n		date : new Date()\r\n	},{\r\n		id : 2,\r\n		title : \'title2\',\r\n		content : \'content2\',\r\n		date : new Date()\r\n	},{\r\n		id : 3,\r\n		title : \'title3\',\r\n		content : \'content3\',\r\n		date : new Date()\r\n	}];\r\napp.controller(\'ListController\',function($scope){\r\n	$scope.messageList=messageList;\r\n});\r\napp.controller(\'ContentController\',function($scope,$routeParams){\r\n	$scope.message=messageList[$routeParams.id-1];\r\n});\r\napp.controller(\'AddController\',function($scope,$location){\r\n	$scope.title=\"\";\r\n	$scope.content=\"\";\r\n	$scope.add=function(){\r\n		messageList.push({\r\n			id:messageList.length+1,\r\n			title:$scope.title,\r\n			content:$scope.content,\r\n			date:new Date()\r\n		});\r\n		$location.path(\'list\');\r\n	}\r\n	\r\n});\r\napp.controller(\'EditController\',function($scope,$routeParams,$location){\r\n	$scope.message=messageList[$routeParams.id-1];\r\n	$scope.update=function(){\r\n		messageList[$routeParams.id-1]=$scope.message;\r\n		$location.path(\'list\');\r\n	}\r\n});\r\napp.controller(\'AboutController\',function($scope,$location){\r\n	$scope.about=\"该项目是基于Angular的route项目，实现单页面路由功能\";\r\n	$scope.index=function(){\r\n		$location.path(\'list\');\r\n	}\r\n});\r\n```\r\n\r\n做好了这个的时候已经是3月19日晚上一两点了，第二天早上睡不着就爬起来了把剩下的cnodejs的功能实现，然后把路由功能做好就差不多可以看了。\r\n代码上也就是两个文件index.html和index.js，其中用到了```<script type=\"text/ng-template\" id=\"index.html\">```作为模板来使用，也没有单独建立文件。\r\n其他的实现基本上上angular的基础，具体代码可以到[github:https://github.com/junhey/Angular-Cnodejs](https://github.com/junhey/Angular-Cnodejs)上看，欢迎star。\r\n如果你对ng-template迷惑，这里说明下Angular Template\r\n\r\n## Angular 模板\r\n\r\n通过``` <script> ```或者 $templateCache 添加，通过这两种方式添加的模板存在于内存中，请求模板的时候不会发起 HTTP 请求。除了这种方式，可以通过 HTTP 直接请求单独的模板文件。\r\n\r\n模板请求的循序优先级从高到低为：\r\n\r\n> ```<script> ```方式 > $templateCache > 独立的模板文件\r\n\r\n通过angular的功能可以直接把页面放在一个页面上，当然也可以分开，考虑到性能方面，建议分开放。\r\n\r\n其中还可以通过$templateCache 服务服务添加模板，代码如下：\r\n```js\r\nvar myApp = angular.module(\'myApp\', []);\r\nmyApp.run(function($templateCache) {\r\n  $templateCache.put(\'templateId.html\', \'This is the content of the template\');\r\n});\r\n```\r\n\r\n也可以在 HTML 中通过 ng-include 加载模板：\r\n```\r\n<div ng-include=\" \'templateId.html\' \"></div>\r\n```\r\n也可以通过 Javascript 加载:\r\n```\r\n$templateCache.get(\'templateId.html\')\r\n```\r\n$templateCache 服务 put 方法负责向内存写入模板内容。\r\n$templateCache基于cacheFactory而来，接口保持一致，可以认为\r\n$templateCache = $cacheFactory(\'template\');\r\n\r\n具体怎么用，参考一下两篇博文\r\n\r\n- [angular模板加载 ----ng-template](https://www.zybuluo.com/bornkiller/note/6023)\r\n\r\n- [Angular Template Loading](http://blog.inching.org/2014/09/23/angular-template/)\r\n\r\n## 展望\r\n\r\n通过在github:[https://github.com/junhey/Angular-Cnodejs](https://github.com/junhey/Angular-Cnodejs)看到的，其实还有很多功能待完善，比如说分页的实现，通过二维码登录等等，后面采用angular指令来做分页，这里留下两篇参考博文：\r\n\r\n- [创建自定义 AngularJS 指令，第一部分，基础知识](https://github.com/nixzhu/dev-blog/blob/master/2014-05-03-creating-custom-angularjs-directives-part-1-the-fundamentals.md)\r\n\r\n- [angular学习笔记(三十)-指令(3)-templateUrl](http://www.cnblogs.com/liulangmao/p/3927760.html)\r\n\r\n\r\n## [在线运行](http://junhey.com/demo/cnodejs)\r\n\r\n基于Angular.js重写cnodejs.org社区的webapp 欢迎提[建议](https://github.com/junhey/Angular-Cnodejs/issues/1)\r\n\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('173', 'ubuntu下webstorm软件的何安装？', '173', '1459912440', '1460535168', '<!--markdown-->WebStorm 是 jetbrains 公司旗下一款 JavaScript 开发工具，被广大 JS 开发者誉为“Web前端开发神器”。\r\n\r\n下载了软件webstorm软件的tar.gz格式的软件包该如何安装？\r\n\r\n这里给一种解决方法，步骤：\r\n\r\n1.sudo apt-get install default-jdk \r\n\r\n2.然后将webstorm解压，运行bin/webstorm.sh，命令行：sh bin/webstorm.sh，至此webstorm安装完成。\r\n\r\n不过 WebStorm 默认情况下是需要收费的，可以申请为开源项目的贡献者来获得 licenses。\r\n\r\n- 安装插件\r\n\r\n安装完成后，在 File - Settings - Plugins，选择需要安装的插件，例如 AngularJS、Markdown 等。\r\n\r\n- 设置项目\r\n\r\n在 File - Settings - Directories 下，通过 Add content Root 来设置我们的项目路径\r\n\r\n在 File - Settings - JavaScript - Libraries 下，勾选想要支持的库，建议全部勾上（如 NodeJS）。\r\n\r\n- 设置外观、字体\r\n\r\n在 File - Settings - Editor - Colors & Fonts - Font 下，选择自己想要的主题，然后 Save as... 保存自己想要的主题名称，设置字体为Ubuntu Mono，字体设置为 16（貌似有点小，相当于 Eclipse 下的 12）\r\n\r\n- 显示行数\r\n\r\n在 File - Settings - Appearance 下，勾选 Show line numbers 选项。\r\n\r\n下面分享网上的一些webstorm注册码：\r\n User Name:\r\nEMBRACE \r\nLicense Key:\r\n===== LICENSE BEGIN =====\r\n24718-12042010\r\n00001h6wzKLpfo3gmjJ8xoTPw5mQvY\r\nYA8vwka9tH!vibaUKS4FIDIkUfy!!f\r\n3C\"rQCIRbShpSlDcFT1xmJi5h0yQS6\r\n===== LICENSE END ===== \r\nPhpStorm注册码\r\nUser Name:\r\nEMBRACE\r\n License Key:\r\n===== LICENSE BEGIN =====\r\n43136-12042010\r\n00002UsvSON704l\"dILe1PVx3y4\"B3\r\n49AU6oSDJrsjE8nMOQh\"8HTDJHIUUh\r\ngd1BebYc5U\"6OxDbVsALB4Eb10PW8\"\r\n===== LICENSE END =====\r\nwebStorm :\r\nUserName:William\r\n===== LICENSE BEGIN =====\r\n45550-12042010\r\n00001SzFN0n1bPII7FnAxnt0DDOPJA\r\nINauvJkeVJBuE5bqLEznccE4tet6tr\r\nRiyoMxDK8oDY93tx!ipPyGmqYYeWxS\r\n===== LICENSE END =====\r\nUserName:Microsoft\r\n===== LICENSE BEGIN =====\r\n44827-12042010\r\n00001xZTATXBeJGHI0CFFRIdOKjhQ7\r\neiwIjgK7qohmwGSZRUK!lINYbpNQKk\r\n5AtC16jzcy6KWlkBBjTZXwL8fnebTM\r\n===== LICENSE END =====\r\nUserName:ChinaRed\r\n===== LICENSE BEGIN =====\r\n41806-12042010\r\n000006gMpIpRoMPJdqqPfxIYyr5UPx\r\nfTuYnZxklVYrNOZUHL6YnHTAUM4zqe\r\nqNrt8QzsZERfO\"XiHa802ejK9GtcSj\r\n===== LICENSE END =====\r\nrubyMine :\r\nUserName:William\r\n===== LICENSE BEGIN =====\r\n73770-12042010\r\n00000LsPnluU7HZh4TgJoxNDbnCr!T\r\n0yDfranplDJF4ESFHxfhN6dMBEogxt\r\nS!qZH7LvIjab\"9qbXrSfL9NitEBODm\r\n===== LICENSE END =====\r\nUserName:Microsoft\r\n===== LICENSE BEGIN =====\r\n05071-12042010\r\n00001DGDB7Ih6YT6ApG0Uh4wxMwJqf\r\nUjDDJvi5mX0yJS!72q8ZrLhKQfusV\"\r\nNVSB9iV!lO1tRbt265\"z0vZJBwpl!9\r\n===== LICENSE END =====\r\nUserName:ChinaRed\r\n===== LICENSE BEGIN =====\r\n26405-12042010\r\n00001cYtAkKGNyQA7Er6A9e4oS2Y\"I\r\nfK\"d\"APYe591kwLAHVZ7ieFmfoTKTS\r\n90BTaTdrTg36JEivKlxfVaDszIkWuM\r\n===== LICENSE END =====\r\nphpStorm :\r\nUserName:William\r\n===== LICENSE BEGIN =====\r\n56731-12042010\r\n00001F\"L73xP5zfOyL58\"Vg0hu\"R8S\r\n!aPyCtkqgqc5fEvdQLlLs5a9gzvAcu\r\n!2Gb!gp9kfKoAp1e81dVuhM\"a8OJ4v\r\n===== LICENSE END =====\r\nUserName:Microsoft\r\n===== LICENSE BEGIN =====\r\n06656-12042010\r\n00002NFsdQw64GSoAeS1!oxQRM!H8k\r\nRh3soGkXar1UJa27G0Gx3uz4FEq6Fb\r\nCW09ado0neq\"3gqd3lZ8KnE303G\"MP\r\n===== LICENSE END =====\r\nUserName:ChinaRed\r\n===== LICENSE BEGIN =====\r\n83865-12042010\r\n00001jJvs5lu13QqsSxk1XXwwpiGL1\r\n4GGM\"RKB0xBaYtK6Uh4NVG26\"TBhTA\r\nHNKvcsV38NwMho1Wdy75KY61SwSdVQ\r\n===== LICENSE END =====\r\npyCharm :\r\nUserName:William\r\n===== LICENSE BEGIN =====\r\n43064-12042010\r\n00002qm1!PHwV!dC19Cvu04E6IXZJ9\r\nGN\"RaF03!bwPE\"x3RZbg7ctJld7yZl\r\nXkVf40g3JJGG4Ibbbg4\"HQPwWJWSFU\r\n===== LICENSE END =====\r\nUserName:Microsoft\r\n===== LICENSE BEGIN =====\r\n77380-12042010\r\n000017q0LbsOLEIcYF3VRZszWAYE\"K\r\nCYfpWmqrUTJy\"ROE03pXMWLZ6Z9jbh\r\ncccsmd3P32vdo!L4tnEkp1jrOuySvx\r\n===== LICENSE END =====\r\nUserName:ChinaRed\r\n===== LICENSE BEGIN =====\r\n42852-12042010\r\n00000zw1KaqXWsbN7MiExhdvN!PIjf\r\nZDCOi0vxBEGX9QDUYIyvr0768OloCU\r\nFUZ4Evyh4lNEFKRDEVnKye9W2DYxPp\r\n===== LICENSE END ===== \r\nWebStorm9:\r\n用户名 oschina\r\n注册码 \r\n===== LICENSE BEGIN =====\r\n7362-D18089T\r\n00000xmyY1VfVxjkElWULKcA5XHbfN\r\n5qjOh3fgGZvNXH6ZhNShaoflITUXPF\r\n2YBJzmziQfirMgKbsaT8fCS2hzWIW0\r\n===== LICENSE END =====\r\nWebStorm10:\r\n用户名 oschina\r\n注册码 \r\n===== LICENSE BEGIN =====\r\n4383-D76624T\r\n00001f5bo5TyzKTl8s98xBQJ4Ups!f\r\nbcboOWvzs3Fm0cE3p66!G6D!Pg!vj7\r\nB9BeKhPH5nE52Z0dPANreJWLGoZi5q\r\n===== LICENSE END =====\r\nPhpStorm9:\r\n用户名 oschina\r\n注册码 \r\n===== LICENSE BEGIN =====\r\n9362-D71509T\r\n00002vG0Ew9WZL\"mSK1bK4Wp9cPnPS\r\nowS6WZR26Dlk8jXTleDpboiESy0\"4E\r\nTEt2SY7kcmkTRSHHoDE6sqksYv!VPp\r\n===== LICENSE END =====\r\nIDEA13:\r\n用户名 oschina\r\n注册码 73702-JMMWT-BHTL0-E18XX-RBI3G-NAMK0\r\nIDEA14\r\n用户名 oschina\r\n注册码 81141-4T5I0-G3YYX-K21F4-F87VZ-45KF6\r\nPycharm13\r\n用户名 oschina\r\n注册码\r\n===== LICENSE BEGIN =====\r\n9902-D64920T\r\n00001MnCK6!znU5XyNoSmasdacmFyr\r\n92JMZfrYteQbQQQHs!5Pm9ErjesYLa\r\ncfPAwEiFmbIjqpop9YHkqEuXh51ZjU\r\n===== LICENSE END =====', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('174', '安装好ubuntu15之后需要做的事', '174', '1459308060', '1460520325', '<!--markdown-->ubuntu15虽然很新，有很多新功能，但是有一些不需要的东西，这里写一些安装完之后的修改地方。\r\n\r\n1. 设置root密码\r\n\r\njunhey@junhey-Inspiron-N4050:/$ sudo passwd\r\n[sudo] password for junhey: \r\n输入新的 UNIX 密码： \r\n重新输入新的 UNIX 密码： \r\npasswd：已成功更新密码\r\n\r\n2. 更换更快的源\r\n\r\n参考下面这篇文章：\r\n[http://jingyan.baidu.com/article/925f8cb8f3af25c0dde05681.html](http://jingyan.baidu.com/article/925f8cb8f3af25c0dde05681.html)\r\n更新完成之后输入sudo apt-get update\r\n\r\n3. 安装vim\r\n\r\n输入sudo apt-get install vim进行安装\r\n配置vim输入gedit ~/.vimrc\r\n\r\n4. 设置时间使用UTC\r\n\r\nsudo vim /etc/default/rcS\r\n将UTC=no改为UTC=yes\r\n\r\n5. 删除一些对开发没用的东西\r\n\r\n- 删除libreoffice\r\n\r\nsudo apt-get remove libreoffice-common\r\n\r\n- 删除Amazon的链接\r\n\r\nsudo apt-get remove unity-webapps-common\r\n\r\n- 删掉基本不用的自带软件（用的时候再装）\r\n\r\nsudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan gnome-mahjongg aisleriot gnome-mines cheese transmission-common gnome-orca webbrowser-app gnome-sudoku  landscape-client-ui-install\r\n\r\n卸载自带的大多数没用的软件和所有的自带游戏，保留了音乐和视频播放器。\r\n\r\nsudo apt-get remove onboard deja-dup \r\n\r\n6. 安装软件\r\n\r\n安装chrome，中文输入法，wps，sublime Text软件，具体方法可以百度。\r\n\r\n安装系统指示器SysPeek，监测系统\r\nsudo apt-get install syspeek\r\n\r\n安装git和vpnc-git和vpn大家都懂。\r\nsudo apt-get install git vpnc\r\n\r\n安装axel-linux命令行界面的多线程下载工具，替代wget\r\nsudo apt-get install axel \r\n\r\n安装openssh-server-安装之后，就可以在Win下用ssh工具远程登陆了\r\nsudo apt-get install openssh-server\r\n\r\n安装lnav-lnav工具是在终端界面看日志的神器，装上之后在终端里就可以用lnav彩色显示日志了。\r\nsudo apt-get install lnav\r\n\r\n安装unrar-系统默认不带解压缩rar文件的功能，手动安装unrar程序\r\nsudo apt-get install unrar\r\n装上之后就可以用命令解压缩rar文件了。\r\n使用如下命令解压缩文件到当前目录。\r\nunrar x test.rar\r\n\r\n\r\n7. 自定义DHCP网络的DNS\r\n\r\nsudo vim /etc/dhcp/dhclient.conf文件\r\n在第21行#prepend domain-name-servers 127.0.0.1;\r\n下一行添加如下2行使用aliyun和114的DNS\r\nprepend domain-name-servers 114.114.114.114;  \r\nprepend domain-name-servers 223.5.5.5;\r\n\r\n\r\n\r\n这里推荐几篇好的文章：\r\n[http://m.blog.csdn.net/article/details?id=50621579](http://m.blog.csdn.net/article/details?id=50621579)\r\n[http://blog.csdn.net/skykingf/article/details/45267517](http://blog.csdn.net/skykingf/article/details/45267517)\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('179', 'js获取页面高度的参数', '179', '1460970900', '1460971171', '<!--markdown-->```\r\ndocument.body.clientWidth ==> BODY对象宽度\r\ndocument.body.clientHeight ==> BODY对象高度\r\ndocument.documentElement.clientWidth ==> 可见区域宽度\r\ndocument.documentElement.clientHeight ==> 可见区域高度\r\n```\r\n\r\n网页可见区域宽： document.body.clientWidth\r\n网页可见区域高： document.body.clientHeight\r\n网页可见区域宽： document.body.offsetWidth (包括边线的宽)\r\n网页可见区域高： document.body.offsetHeight (包括边线的高)\r\n网页正文全文宽： document.body.scrollWidth\r\n网页正文全文高： document.body.scrollHeight\r\n网页被卷去的高： document.body.scrollTop\r\n网页被卷去的左： document.body.scrollLeft\r\n网页正文部分上： window.screenTop\r\n网页正文部分左： window.screenLeft\r\n屏幕分辨率的高： window.screen.height\r\n屏幕分辨率的宽： window.screen.width\r\n屏幕可用工作区高度： window.screen.availHeight\r\n屏幕可用工作区宽度： window.screen.availWidth\r\n```\r\n// 部分jQuery函数\r\n$(window).height() 　//浏览器时下窗口可视区域高度 \r\n$(document).height()　　　　//浏览器时下窗口文档的高度 \r\n$(document.body).height()　　　　　　//浏览器时下窗口文档body的高度 \r\n$(document.body).outerHeight(true)　//浏览器时下窗口文档body的总高度 包括border padding margin \r\n$(window).width() 　//浏览器时下窗口可视区域宽度 \r\n$(document).width()//浏览器时下窗口文档对于象宽度 \r\n$(document.body).width()　　　　　　//浏览器时下窗口文档body的高度 \r\n$(document.body).outerWidth(true)　//浏览器时下窗口文档body的总宽度 包括border padding\r\n```\r\n\r\nHTML精确定位:scrollLeft,scrollWidth,clientWidth,offsetWidth \r\n\r\nscrollHeight: 获取对象的滚动高度。 \r\nscrollLeft:设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离 \r\nscrollTop:设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离 \r\nscrollWidth:获取对象的滚动宽度 \r\noffsetHeight:获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的高度 \r\noffsetLeft:获取对象相对于版面或由 offsetParent 属性指定的父坐标的计算左侧位置 \r\noffsetTop:获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置 \r\nevent.clientX 相对文档的水平座标 \r\nevent.clientY 相对文档的垂直座标 \r\nevent.offsetX 相对容器的水平坐标 \r\nevent.offsetY 相对容器的垂直坐标 \r\ndocument.documentElement.scrollTop 垂直方向滚动的值 \r\nevent.clientX+document.documentElement.scrollTop 相对文档的水平座标+垂直方向滚动的量\r\n\r\n为了更好的来描述，一张图说明一切：\r\n\r\n\r\n![jswidth.jpg][1]\r\n\r\n\r\n  [1]: http://junhey.com/usr/uploads/2016/04/1706032792.jpg', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('178', 'json问题', '178', '1460713794', '1460714675', '<!--markdown-->### JSON介绍\r\n\r\n>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。它基于ECMAScript的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C、C++、C#、Java、JavaScript、Perl、Python等）。这些特性使JSON成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成(一般用于提升网络传输速率)。---来自百度百科\r\n\r\n这里有最关键的介绍:JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。它使得人们很容易的进行阅读和编写。 [http://www.json.org.cn/](http://www.json.org.cn/) \r\n\r\n### JSON 值\r\n\r\nJSON 值可以是：\r\n\r\n- 数字（整数或浮点数）\r\n- 字符串（在双引号中）\r\n- 逻辑值（true 或 false）\r\n- 数组（在方括号中）\r\n- 对象（在花括号中）\r\n- null\r\n\r\n### JSON 语法\r\n\r\n- JSON 语法规则\r\n\r\nJSON 语法是 JavaScript 对象表示法语法的子集。\r\n\r\n1. 数据在名称/值对中\r\n2. 数据由逗号分隔\r\n3. 花括号保存对象\r\n4. 方括号保存数组\r\n\r\n- JSON 名称/值对\r\n\r\nJSON 数据的书写格式是：名称/值对。\r\n名称/值对包括字段名称（在双引号中），后面写一个冒号，然后是值：\r\n```\r\n\"firstName\" : \"John\"\r\n```\r\n这很容易理解，等价于这条 JavaScript 语句：\r\n```\r\nfirstName = \"John\"\r\n```\r\n\r\n- JSON 对象\r\n\r\n对象可以包含多个名称/值对：```{ \"firstName\":\"John\" , \"lastName\":\"Doe\" }```\r\n\r\n- JSON 数组\r\n\r\n数组可包含多个对象：\r\n```\r\n{\r\n    \"employees\": [\r\n        { \"firstName\":\"John\" , \"lastName\":\"Doe\" },\r\n        { \"firstName\":\"Anna\" , \"lastName\":\"Smith\" },\r\n        { \"firstName\":\"Peter\" , \"lastName\":\"Jones\" }\r\n    ]\r\n}\r\n```\r\n\r\n- JSON 使用 JavaScript 语法\r\n\r\n因为 JSON 使用 JavaScript 语法，所以无需额外的软件就能处理 JavaScript 中的 JSON。\r\n通过 JavaScript，您可以创建一个对象数组，并像这样进行赋值：\r\n例子\r\n```\r\nvar employees = [\r\n    { \"firstName\":\"Bill\" , \"lastName\":\"Gates\" },\r\n    { \"firstName\":\"George\" , \"lastName\":\"Bush\" },\r\n    { \"firstName\":\"Thomas\" , \"lastName\": \"Carter\" }\r\n];\r\n```\r\n可以像这样访问 JavaScript 对象数组中的第一项：```employees[0].lastName;```\r\n返回的内容是：```Gates```\r\n可以像这样修改数据：```employees[0].lastName = \"Jobs\";```\r\n\r\n创建包含 JSON 语法的 JavaScript 字符串：\r\n```\r\nvar txt = \'{ \"employees\" : [\' +\r\n\'{ \"firstName\":\"Bill\" , \"lastName\":\"Gates\" },\' +\r\n\'{ \"firstName\":\"George\" , \"lastName\":\"Bush\" },\' +\r\n\'{ \"firstName\":\"Thomas\" , \"lastName\":\"Carter\" } ]}\';\r\n```\r\n由于 JSON 语法是 JavaScript 语法的子集，JavaScript 函数 eval() 可用于将 JSON 文本转换为 JavaScript 对象。\r\neval() 函数使用的是 JavaScript 编译器，可解析 JSON 文本，然后生成 JavaScript 对象。必须把文本包围在括号中，这样才能避免语法错误：\r\n```\r\nvar obj = eval (\"(\" + txt + \")\");\r\n```\r\n\r\n\r\n### JSON.parse()和JSON.stringify()\r\n\r\n- parse用于从一个字符串中解析出json对象\r\n\r\n例如\r\n```\r\nvar str = \'{\"name\":\"hejun\",\"age\":\"23\"}\'\r\nJSON.parse(str)\r\n```\r\n结果：Object\r\n\r\nage: \"23\"\r\nname: \"huangxiaojian\"\r\n__proto__: Object\r\n\r\n\r\n注意：单引号写在{}外，每个属性名都必须用双引号，否则会抛出异常。\r\n\r\n\r\n- stringify()用于从一个对象解析出字符串\r\n\r\n例如\r\n```\r\nvar a = {a:1,b:2}\r\nJSON.stringify(a)\r\n```\r\n结果：\r\n\"{\"a\":1,\"b\":2}\"\r\n\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('189', 'apache日志文件太大解决方法', '189', '1461751980', '1461753698', '<!--markdown-->apache日志文件太大\r\n\r\n按日期/指定生成日志文件\r\n\r\n指定apache日志每天生成一个文件\r\n\r\nLinux系统配置方法\r\n在apache的配置文件httpd.conf中找到\r\n\r\n```\r\nErrorLog logs/error_log\r\nCustomLog logs/access_log common\r\n```\r\n将其改为\r\n```\r\nErrorLog \"| /usr/local/apache/bin/rotatelogs /home/logs/www/%Y_%m_%d_error_log 86400 480\"\r\nCustomLog \"| /usr/local/apache/bin/rotatelogs /home/logs/www/%Y_%m_%d_access_log 86400 480\" common\r\n```\r\n\r\n\r\nWindows系统下配置方法：\r\n在apache的配置文件httpd.conf中找到\r\n```\r\nErrorLog logs/error_log\r\nCustomLog logs/access_log common\r\n```\r\n将其改为\r\n```\r\nErrorLog \"|c:/apache/bin/rotatelogs.exe  c:/apache/logs/error_%Y_%m_%d.log 86400 480\"\r\nCustomLog \"|c:/apache/bin/rotatelogs.exe c:/apache/logs/access_%Y_%m_%d.log 86400 480\" common\r\n```\r\n其中c:/apache/是你安装apache的路径\r\n\r\n指定apache日志生成大小\r\n```\r\n# 限制错误日志文件为 1M\r\nErrorLog “|bin/rotatelogs.exe -l logs/error-%Y-%m-%d.log 1M”\r\n# 每天生成一个错误日志文件\r\n#ErrorLog “|bin/rotatelogs.exe -l logs/error-%Y-%m-%d.log 86400″\r\n# 限制访问日志文件为 1M\r\nCustomLog “|bin/rotatelogs.exe -l logs/access-%Y-%m-%d.log 1M” common\r\n# 每天生成一个访问日志文件\r\n#CustomLog “|bin/rotatelogs.exe -l logs/access-%Y-%m-%d.log 86400″ common\r\n```\r\n\r\n补充:apache日志记录格式的设置\r\n定制日志文件的格式涉及到两个指令，即LogFormat指令和CustomLog指令，默认httpd.conf文件提供了关于这两个指令的几个示例。\r\nLogFormat指令定义格式并为格式指定一个名字，以后我们就可以直接引用这个名字。CustomLog指令设置日志文件，并指明日志文件所用的格式（通常通过格式的名字）。\r\nLogFormat指令的功能是定义日志格式并为它指定一个名字。例如，在默认的httpd.conf文件中，我们可以找到下面这行代码：\r\n\r\nLogFormat \"%h %l %u %t \"%r\" %>s %b\" common\r\n\r\n该指令创建了一种名为“common”的日志格式，日志的格式在双引号包围的内容中指定。格式字符串中的每一个变量代表着一项特定的信息，这些信息按照格式串规定的次序写入到日志文件。\r\n\r\nApache文档已经给出了所有可用于格式串的变量及其含义，下面是其译文：\r\n\r\n%…a: 远程IP地址\r\n%…A: 本地IP地址\r\n%…B: 已发送的字节数，不包含HTTP头\r\n%…b: CLF格式的已发送字节数量，不包含HTTP头。例如当没有发送数据时，写入‘-’而不是0。\r\n%…{FOOBAR}e: 环境变量FOOBAR的内容\r\n%…f: 文件名字\r\n%…h: 远程主机\r\n%…H 请求的协议\r\n%…{Foobar}i: Foobar的内容，发送给服务器的请求的标头行。\r\n%…l: 远程登录名字（来自identd，如提供的话）\r\n%…m 请求的方法\r\n%…{Foobar}n: 来自另外一个模块的注解“Foobar”的内容\r\n%…{Foobar}o: Foobar的内容，应答的标头行\r\n%…p: 服务器响应请求时使用的端口\r\n%…P: 响应请求的子进程ID。\r\n%…q 查询字符串（如果存在查询字符串，则包含“?”后面的部分；否则，它是一个空字符串。）\r\n%…r: 请求的第一行\r\n%…s: 状态。对于进行内部重定向的请求，这是指*原来*请求 的状态。如果用%…>s，则是指后来的请求。\r\n%…t: 以公共日志时间格式表示的时间（或称为标准英文格式）\r\n%…{format}t: 以指定格式format表示的时间\r\n%…T: 为响应请求而耗费的时间，以秒计\r\n%…u: 远程用户（来自auth；如果返回状态（%s）是401则可能是伪造的）\r\n%…U: 用户所请求的URL路径\r\n%…v: 响应请求的服务器的ServerName\r\n%…V: 依照UseCanonicalName设置得到的服务器名字\r\n好了到了这里我们的就介绍完了关于日志按日期与文件指定大小生成文件了，算是非常的完美了希望对各位有帮助，同时小编建义直接给每个站点生成一个日志而不要在conf文件中指定所有网站都生成在一个目录了，因为分开来好分析日志哦。', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('190', 'apache下403 Forbidden', '190', '1461122160', '1461752495', '<!--markdown-->apache下403 Forbidden错误问题解决方法\r\n\r\napache 403权限是告诉我们禁止访问文章此目录了，如果目录没有htm索引文件也会这样，这时还有apache必须设置一个参数才行，具体我们来看看。\r\n\r\n直接输入地址显示:\r\n\r\nForbidden\r\nYou don\'t have permission to access /news/search_fdsafdsa on this server.\r\nhttpd.conf，找到这么一段：\r\n```\r\n<Directory />\r\n     Options FollowSymLinks\r\n     AllowOverride None\r\n     Order deny,allow\r\n     deny from all\r\n     Satisfy all\r\n</Directory>\r\n```\r\n然后试着把deny\r\n\r\nfrom all中的deny改成了allow，保存后重起了apache，然后再一测试我的网页，哈哈\r\n\r\nps 403禁止访问 主要是apache中的 Order deny,allow deny影响到了，我们要解决它只需要把deny改成了allow就可以了，当然还有问题就是服务器权限问题。\r\n确保web文件夹下有index.html文件（或名为index而后缀为其他形式（如.jsp .php等）的文件） ，因为Apache默认以index.html为网站首页，如果没有这个文件就会出现上面的403错误。\r\n\r\n```\r\n<IfModule dir_module>\r\n       DirectoryIndex index.html\r\n</IfModule>\r\n```\r\n改为（如你想用index.jsp）：\r\n```\r\n<IfModule dir_module>\r\n       DirectoryIndex index.html index.jsp \r\n</IfModule>\r\n```\r\n如果需要浏览该文件夹下的内容，可以在</Directory>前添加：\r\nOptions Indexes\r\n就可以了。\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('193', '浏览器对本地存储的支持.png', '浏览器对本地存储的支持-png', '1461837136', '1461837136', 'a:5:{s:4:\"name\";s:37:\"浏览器对本地存储的支持.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/04/1398000061.png\";s:4:\"size\";i:100585;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '192');
INSERT INTO `typecho_contents` VALUES ('196', '浏览器与服务器的交互过程.png', '浏览器与服务器的交互过程-png', '1461838667', '1461838667', 'a:5:{s:4:\"name\";s:40:\"浏览器与服务器的交互过程.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/04/4244981949.png\";s:4:\"size\";i:65253;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '2', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '194');
INSERT INTO `typecho_contents` VALUES ('195', '浏览器对离线存储的支持.png', '浏览器对离线存储的支持-png', '1461838389', '1461838389', 'a:5:{s:4:\"name\";s:37:\"浏览器对离线存储的支持.png\";s:4:\"path\";s:34:\"/usr/uploads/2016/04/537910483.png\";s:4:\"size\";i:41191;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '194');
INSERT INTO `typecho_contents` VALUES ('197', '浏览器与服务器的交互过程再次访问.png', '浏览器与服务器的交互过程再次访问-png', '1461838802', '1461838802', 'a:5:{s:4:\"name\";s:52:\"浏览器与服务器的交互过程再次访问.png\";s:4:\"path\";s:34:\"/usr/uploads/2016/04/238521992.png\";s:4:\"size\";i:185302;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '3', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '194');
INSERT INTO `typecho_contents` VALUES ('201', 'Node+Mongoose常用查询中文文档', '201', '1462522914', '1462523296', '<!--markdown-->Mongoose 模型提供了 find, findOne, 和 findById 方法用于文档查询。\r\n\r\n# Model.find\r\n```\r\nModel.find(query, fields, options, callback)\r\n// fields 和 options 都是可选参数\r\n```\r\n> 简单查询\r\n```\r\nModel.find({ \'csser.com\': 5 }, function (err, docs) { // docs 是查询的结果数组 });\r\n```\r\n> 只查询指定键的结果\r\n```\r\nModel.find({}, [\'first\', \'last\'], function (err, docs) {\r\n  // docs 此时只包含文档的部分键值\r\n})\r\n```\r\n# Model.findOne\r\n\r\n与 Model.find 相同，但只返回单个文档\r\n```\r\nModel.findOne({ age: 5}, function (err, doc){\r\n  // doc 是单个文档\r\n});\r\n```\r\n# Model.findById\r\n\r\n与 findOne 相同，但它接收文档的 _id 作为参数，返回单个文档。_id 可以是字符串或 ObjectId 对象。\r\n```\r\nModel.findById(obj._id, function (err, doc){\r\n  // doc 是单个文档\r\n});\r\n```\r\n# Model.count\r\n\r\n> 返回符合条件的文档数。\r\n```\r\nModel.count(conditions, callback);\r\n```\r\n# Model.remove\r\n> 删除符合条件的文档。\r\n```\r\nModel.remove(conditions, callback);\r\nModel.distinct\r\n```\r\n> 查询符合条件的文档并返回根据键分组的结果。\r\n```\r\nModel.distinct(field, conditions, callback);\r\n```\r\n# Model.where\r\n\r\n> 当查询比较复杂时，用 where：\r\n```\r\nModel\r\n.where(\'age\').gte(25)\r\n.where(\'tags\').in([\'movie\', \'music\', \'art\'])\r\n.select(\'name\', \'age\', \'tags\')\r\n.skip(20)\r\n.limit(10)\r\n.asc(\'age\')\r\n.slaveOk()\r\n.hint({ age: 1, name: 1 })\r\n.run(callback);\r\n```\r\n# Model.$where\r\n\r\n> 有时我们需要在 mongodb 中使用 javascript 表达式进行查询，这时可以用 find({$where : javascript}) 方式，$where 是一种快捷方式，并支持链式调用查询。\r\n```\r\nModel.$where(\'this.firstname === this.lastname\').exec(callback)\r\n```\r\n# Model.update\r\n\r\n> 使用 update 子句更新符合指定条件的文档，更新数据在发送到数据库服务器之前会改变模型的类型。\r\n```\r\nvar conditions = { name: \'borne\' }\r\n  , update = { $inc: { visits: 1 }}\r\n  , options = { multi: true };\r\n\r\nModel.update(conditions, update, options, callback)\r\n```\r\n> 注意：为了向后兼容，所有顶级更新键如果不是原子操作命名的，会统一被按 $set 操作处理，例如：\r\n```\r\nvar query = { name: \'borne\' };\r\nModel.update(query, { name: \'jason borne\' }, options, callback)\r\n\r\n// 会被这样发送到数据库服务器\r\n\r\nModel.update(query, { $set: { name: \'jason borne\' }}, options, callback)\r\n```\r\n# 查询 API\r\n\r\n> 如果不提供回调函数，所有这些方法都返回 Query 对象，它们都可以被再次修改（比如增加选项、键等），直到调用 exec 方法。\r\n```\r\nvar query = Model.find({});\r\n\r\nquery.where(\'field\', 5);\r\nquery.limit(5);\r\nquery.skip(100);\r\n\r\nquery.exec(function (err, docs) {\r\n  // called when the `query.complete` or `query.error` are called\r\n  // internally\r\n});\r\n```', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('192', 'Htm5本地存储和离线存储', '192', '1461836940', '1461839049', '<!--markdown--># cookie存储\r\n\r\n缺点：\r\n\r\n- 大小限制\r\n\r\nCookie的大小被限制在4KB\r\n\r\n- 浪费带宽\r\n\r\nCookie是随HTTP事务一起发送，会浪费一部分带宽\r\n\r\n- 复杂性\r\n\r\n操作cookie是复杂的\r\n\r\n\r\n# 两种存储方式\r\n\r\n- sessionStorage\r\n\r\n临时存储，浏览器关闭后数据丢失\r\n\r\n- localStorage\r\n\r\n长久存储，浏览器关闭后数据依然存在\r\n\r\n# 浏览器对本地存储的支持\r\n\r\n![浏览器对本地存储的支持.png][1]\r\n\r\n# 数据的存储和读取方式\r\n\r\n- 存储数据\r\n\r\n```\r\nsessionStorage.setItem(key, value);\r\nlocalStorage.setItem(key, value);\r\n```\r\n\r\n- 读取数据\r\n\r\n```\r\nsessionStorage.getItem(key);\r\nlocalStorage.getItem(key);\r\n```\r\n\r\n# 实现简易数据库\r\n\r\n假设我们现在想要保存一个学生列表信息，学生的基本信息包括姓名、Email、电话号码以及简单描述？\r\n\r\nA、以姓名为键值（在这里，我们假设姓名没有重复值），学生的其他信息以JSON的形式保存起来。\r\nB、JSON是JavaScript Object Notation的缩写，是将JavaScript对象以文本的形式保存起来的一种格式\r\n\r\n# 本地数据库\r\n\r\n- 在html5中内置了一个可以通过sql语言访问的数据库；\r\n\r\n- 在html4中，数据库只能放在服务端，只能通过访问服务器来访问数据库；\r\n\r\n- 像这种不需要放在服务端的数据库被称为“SQLLite”文件型数据库；\r\n\r\n# 如何编写javascript脚本来访问本地数据库\r\n\r\n- 创建访问数据库的对象\r\n\r\n`var db = openDatabase(\'mydb\',\'1.0\',\'Test DB\',2 * 1024 * 1024);`\r\n参数依次是：数据库名，版本号，数据库的描述，数据库的大小；\r\n\r\n- 使用事务处理\r\n\r\n防止在对数据库进行访问及执行有关操作的时候受到外界的干扰；\r\n```\r\ndb.transaction(function(tx){\r\n	tx.executeSql(‘CREATE TABLE …’);\r\n});\r\n```\r\n\r\n# 用executeSql来执行SQL语句\r\n\r\n`Transaction.executeSql(sqljquery, [], dataHandler, errorHandler);`\r\n例：\r\n```\r\ntransaction.executeSql(‘update people set age=? Where name=?;’, [age, name],dataHandler, errorHandler);\r\nfunction dataHandler(transaction, results){//执行SQL语句成功时的处理}\r\nfunction errorHandler(transaction, errmsg) {//执行sql语句出错时的处理}\r\n```\r\n\r\n# 如何操作查询到的结果数据集?\r\n\r\n使用for循环，用rows[index]或者rows.Item([index])的形式依次取出每条数据。在JavaScript脚本中，一般采用rows[index]的形式；\r\n\r\n# 使用数据库实现Web留言本\r\n\r\n打开数据库\r\n初始化 \r\n擦除表格中当前显示的数据\r\n显示数据\r\n显示全部数据\r\n追加数据\r\n保存数据\r\n\r\n```\r\nvar datatable = null;\r\n		var db = openDatabase(\'MyData\', \'\', \'My Database\', 102400);\r\n\r\n		function init(){\r\n			datatable = document.getElementById(\'datatable\');\r\n			showAllData();\r\n		}\r\n\r\n		function removeAllData(){\r\n			for(var i=datatable.childNodes.length-1; i>=0; i--){\r\n				datatable.removeChild(datatable.childNodes[i]);\r\n			}\r\n\r\n			var tr = document.createElement(\'tr\');\r\n			var th1 = document.createElement(\'th\');\r\n			var th2 = document.createElement(\'th\');\r\n			var th3 = document.createElement(\'th\');\r\n\r\n			th1.innerHTML = \'姓名\';\r\n			th2.innerHTML = \'留言\';\r\n			th3.innerHTML = \'时间\';\r\n\r\n			tr.appendChild(th1);\r\n			tr.appendChild(th2);\r\n			tr.appendChild(th3);\r\n			datatable.appendChild(tr);\r\n		}\r\n\r\n		function showData(row){\r\n			var tr = document.createElement(\'tr\');\r\n			var td1 = document.createElement(\'td\');\r\n			td1.innerHTML = row.name;\r\n			var td2 = document.createElement(\'td\');\r\n			td2.innerHTML = row.message;\r\n			var td3 = document.createElement(\'td\');\r\n			var t = new Date();\r\n			t.setTime(row.time);\r\n			td3.innerHTML = t.toLocaleDateString()+\" \"+t.toLocaleTimeString();\r\n			tr.appendChild(td1);\r\n			tr.appendChild(td2);\r\n			tr.appendChild(td3);\r\n			datatable.appendChild(tr);\r\n		}\r\n\r\n		function showAllData(){\r\n			db.transaction(function(tx){\r\n				tx.executeSql(\'CREATE TABLE IF NOT EXISTS MsgData(name TEXT, message TEXT, time INTEGER)\',[]);\r\n				tx.executeSql(\'SELECT * FROM MsgData\', [], function(tx, rs){\r\n					removeAllData();\r\n					for(var i=0; i<rs.rows.length; i++){\r\n						showData(rs.rows.item(i));\r\n					}\r\n				});\r\n			});\r\n		}\r\n\r\n		function addData(name, message, time){\r\n			db.transaction(function(tx){\r\n				tx.executeSql(\'INSERT INTO MsgData VALUES(?, ?, ?)\', [name, message, time], function(tx, rs){\r\n					alert(\"成功保存数据！\");\r\n				}, function(tx, error){\r\n					alert(error.source + \"::\" + error.message);\r\n				});\r\n			});\r\n		}\r\n\r\n		function saveData(){\r\n			var name = document.getElementById(\'name\').value;\r\n			var memo = document.getElementById(\'memo\').value;\r\n			var time = new Date().getTime();\r\n			addData(name, memo, time);\r\n			showAllData();\r\n		}\r\n\r\n		window.onload = init;\r\n\r\n		var saveBtn = document.getElementById(\"saveBtn\");\r\n		saveBtn.onclick = saveData;\r\n```\r\n\r\n# [demo下载project.zip][2]\r\n\r\n\r\n  [1]: http://junhey.com/usr/uploads/2016/04/1398000061.png\r\n  [2]: http://junhey.com/usr/uploads/2016/04/2121575772.zip', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('194', '离线存储', '194', '1458493740', '1461838897', '<!--markdown--># 离线存储\r\n\r\n离线Web应用程序的基本概念\r\n离线存储中浏览器与服务器之间的交互过程\r\n进行本地缓存时所使用到的applicationCache对象\r\n\r\n# 离线Web应用程序的基本概念\r\n\r\n什么是离线Web应用程序？\r\n为什么要开发离线的Web应用程序？\r\n什么是本地缓存？\r\n本地缓存和网页缓存有什么区别？\r\n什么是manifest文件？\r\n如何在manifest文件中指定哪些内容需要进行本地缓存？哪些内容不需要？\r\n\r\n# 什么是离线Web应用程序？\r\n\r\n当客户端本地与Web应用程序的服务器没有建立连接时，也能正常在客户端本地使用该Web应用程序进行有关操作\r\n\r\n# 为什么要开发离线的Web应用程序\r\n\r\n- 离线浏览\r\n\r\n用户可以在应用离线时使用它们\r\n\r\n- 速度\r\n\r\n已缓存资源加载得更快\r\n\r\n- 减少服务器负载\r\n\r\n浏览器将只从服务器下载更新过或者更改过的资源\r\n\r\n# 浏览器对离线存储的支持\r\n\r\n![浏览器对离线存储的支持.png][1]\r\n\r\n# 什么是本地缓存？\r\n\r\n把构建Web应用程序的资源文件，如HTML文件、CSS文件、JavaScript脚本文件等等都放在本地，在没有网络连接的情况下，可以利用本地缓存中的资源文件来正常运行Web应用程序。\r\n\r\n# 本地缓存和浏览器网页缓存的区别\r\n\r\n服务对象不同\r\n本地缓存是为整个Web应用程序服务的，而浏览器的网页缓存只服务于单个网页。\r\n本地缓存比浏览器网页缓存更安全，更可靠\r\n1、无法知道网站中到底缓存了哪些网页，以及缓存了网页中的哪些资源；\r\n2、本地缓存是可靠的，我们可以控制对哪些内容进行缓存，哪些内容不需要缓存\r\n\r\n浏览器网页缓存参考资料：http://www.cnblogs.com/skynet/archive/2012/11/28/2792503.html\r\n\r\n# 什么是manifest文件\r\n\r\nManifest文件是一个简单的文本文件，在该文件中以清单的形式列举了需要被缓存和不需要被缓存的资源文件的文件名称，以及这些资源文件的访问路径\r\n\r\n如何在manifest文件中指定哪些内容需要进行本地缓存？哪些内容不需要？\r\n```\r\nCACHE MANIFEST\r\n#v12\r\n\r\nCACHE:\r\ndog1.jpg\r\ndog2.jpg\r\ndog3.jpg\r\n\r\nNETWORK:\r\nhttp://s8.qhimg.com/static/637d69428758a564/jquery/1.9.1/jquery.js\r\n```\r\n\r\n# 告知浏览器启用离线缓存\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"zh-cn\" manifest=\"mf.manifest\">\r\n</html>\r\n```\r\n\r\n# 浏览器与服务器的交互过程\r\n\r\n- 首次访问\r\n\r\n![浏览器与服务器的交互过程.png][2]\r\n\r\n- 再次访问\r\n\r\n![浏览器与服务器的交互过程再次访问.png][3]\r\n\r\n# applicationCache对象的事件\r\n\r\noncached: 当离线资源存储完成之后触发事件\r\nonchecking:当浏览器对离线资源进行更新检查的时候触发这个事件\r\nondownloading:当浏览器开始下载离线资源时触发这个事件\r\nonprogress:当浏览器在下载每一个资源的时候触发这个事件，每下载一个就触发一次；\r\nonupdateready:当浏览器对离线资源更新完成之后触发这个事件\r\nonnoupdate: 当浏览器检查更新之后发现没有资源更新时触发这个事件\r\n\r\n\r\n  [1]: http://junhey.com/usr/uploads/2016/04/537910483.png\r\n  [2]: http://junhey.com/usr/uploads/2016/04/4244981949.png\r\n  [3]: http://junhey.com/usr/uploads/2016/04/238521992.png', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('200', '博客系统的数据库设计', '200', '1460601960', '1461840415', '<!--markdown-->六张数据表的命名\r\n\r\n1. 内容表 contents\r\n2. 关系表 relationships\r\n3. 项目表 metas\r\n4. 评论表 comments\r\n5. 配置表 options\r\n6. 用户表 users\r\n\r\n内容表可以扩展出来的类型\r\n- post(文章)\r\n- draft(草稿)\r\n- page(页面)\r\n- link(链接)\r\n- attachment(文件)\r\n\r\n然后再来看看项目表里的类型\r\n- category(分类)\r\n- tag(标签)\r\n- link_category(链接分类)\r\n\r\n数据字典\r\n\r\ncontents表\r\n键名	类型	属性	解释\r\ncid	int(10)	主键,非负,自增	post表主键\r\ntitle	varchar(200)	可为空	内容标题\r\nslug	varchar(128)	索引,可为空	内容缩略名\r\nuri	varchar(200)	可为空	资源描述符\r\ncreated	int(10)	索引,非负,可为空	内容生成时的GMT unix时间戳\r\nmodified	int(10)	非负,可为空	内容更改时的GMT unix时间戳\r\ntext	text	可为空	内容文字\r\ntags	varchar(200)	可为空	内容标签,冗余字段\r\nmeta	int(10)	索引,非负,可为空	首选项id,冗余字段\r\nauthor	int(10)	索引,非负,可为空	内容所属用户id\r\ntemplate	varchar(32)	可为空	内容使用的模板\r\ntype	varchar(32)	索引	内容类别\r\npassword	varchar(32)	可为空	受保护内容,此字段对应内容保护密码\r\ncommentsNum	int(10)	非负,可为空	内容所属评论数,冗余字段\r\nallowComment	enum(enable, disable)	可为空	是否允许评论\r\nallowPing	enum(enable, disable)	可为空	是否允许ping\r\nallowFeed	enum(enable, disable)	可为空	允许出现在聚合中\r\n\r\n\r\nrelationships表\r\n键名	类型	属性	解释\r\ncid	int(10)	主键,非负	内容主键\r\nmid	int(10)	主键,非负	项目主键\r\n\r\n\r\nmetas表\r\n键名	类型	属性	解释\r\nmid	int(10)	主键,非负	项目主键\r\nname	varchar(200)	可为空	名称\r\nslug	varchar(128)	索引,可为空	项目缩略名\r\ntype	varchar(32)	索引	项目类型\r\ndescription	varchar(200)	可为空	选项描述\r\ncount	int(10)	非负,可为空	项目所属内容个数\r\nsort	int(10)	非负,索引,可为空	项目排序\r\n\r\n\r\ncomments表\r\n键名	类型	属性	解释\r\ncoid	int(10)	主键,非负,自增	comment表主键\r\ncid	int(10)	索引,非负	post表主键,关联字段\r\ncreated	int(10)	非负,可为空	评论生成时的GMT unix时间戳\r\nauthor	varchar(200)	可为空	评论作者\r\nmail	varchar(200)	可为空	评论者邮件\r\nurl	varchar(200)	可为空	评论者网址\r\nip	varchar(64)	可为空	评论者ip地址\r\nagent	varchar(200)	可为空	评论者客户端\r\ntext	text	可为空	评论文字\r\ntype	enum(\'pingback\', \'trackback\', \'comment\')	可为空	评论类型\r\nstatus	enum(\'approved\', \'spam\', \'waiting\')	可为空	评论状态\r\nparent	int(10)	可为空	父级评论\r\n\r\n\r\noptions表\r\n键名	类型	属性	解释\r\nname	varchar(32)	主键	配置名称\r\nuser	int(10)	主键,非负	配置所属用户,默认为0(全局配置)\r\nvalue	text	可为空	配置值\r\n\r\n\r\nusers表\r\n键名	类型	属性	解释\r\nuid	int(10)	主键,非负,自增	user表主键\r\nname	varchar(32)	唯一	用户名称\r\npassword	varchar(32)	可为空	用户密码\r\nmail	varchar(200)	唯一	用户的邮箱\r\nurl	varchar(200)	可为空	用户的主页\r\nscreenName	varchar(32)	可为空	用户显示的名称\r\ncreated	int(10)	非负,可为空	用户注册时的GMT unix时间戳\r\nactivated	int(10)	非负,可为空	最后活动时间\r\nlogged	int(10)	非负,可为空	上次登录最后活跃时间\r\ngroup	enum(\'administrator\', \'editor\', \'contributor\', \'subscriber\', \'visitor\')	N/A	用户组\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('199', 'project.zip', 'project-zip', '1461839003', '1461839003', 'a:5:{s:4:\"name\";s:11:\"project.zip\";s:4:\"path\";s:35:\"/usr/uploads/2016/04/2121575772.zip\";s:4:\"size\";i:33189;s:4:\"type\";s:3:\"zip\";s:4:\"mime\";s:15:\"application/zip\";}', '2', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '192');
INSERT INTO `typecho_contents` VALUES ('202', '正则的应用', '202', '1463130600', '1470282488', '<!--markdown-->遇到的情况\r\n\r\n```\r\n<td>\r\n	<a href=\"http://school.times-rank.cn/LeedsBeckett.html\">利兹贝克特大学(Leeds Beckett)</a>\r\n</td>\r\n<td>\r\n	<a href=\"http://school.times-rank.cn/LeedsBeckett.html\">详细</a>\r\n</td>\r\n\r\n```\r\n要修改为\r\n```\r\n<td>\r\n	<a href=\"http://www.myoffer.cn/search/利兹贝克特大学\">利兹贝克特大学(Leeds Beckett)</a>\r\n</td>\r\n<td>\r\n	<a href=\"http://www.myoffer.cn/search/利兹贝克特大学\">详细</a>\r\n</td>\r\n```\r\n\r\n\r\n正则表达式\r\n\r\n```\r\n<td>\\s+<a href=\"http://school.times-rank.cn/[\\w_]+.html\">(.+?)(([a-zA-Z])*)</a>\\s+</td>\\s+<td>\\s+<a href=\"http://school.times-rank.cn/.+.html\">详细</a>\\s+</td>\r\n\r\n<td>\\s+<a href=\"http://www.myoffer.cn/search/\\1\">\\1\\2</a>\\s+</td>\\s+<td>\\s+<a href=\"http://www.myoffer.cn/search/\\1\">详细</a>\\s+</td>\r\n```\r\n\r\n[Notepad++的正则表达式替换和替换](http://www.crifan.com/files/doc/docbook/rec_soft_npp/release/htmls/npp_func_regex_replace.html)\r\n\r\n[正则表达式 - 语法](http://www.runoob.com/regexp/regexp-syntax.html)\r\n\r\n![正则匹配.png][1]\r\n\r\n问题解决OK\r\n\r\n\r\n  [1]: http://junhey.com/usr/uploads/2016/08/872741702.png', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('203', '毫秒转时间', '203', '1463647320', '1463647358', '<!--markdown-->``` \r\n//毫秒转时间\r\n        function MillisecondToDate(msd) {\r\n            var time = parseFloat(msd) /1000;\r\n            if (null!= time &&\"\"!= time) {\r\n                if (time >60&& time <60*60) {\r\n                    time = parseInt(time /60.0) +\"分钟\"+ parseInt((parseFloat(time /60.0) -\r\n                            parseInt(time /60.0)) *60) +\"秒\";\r\n                }else if (time >=60*60&& time <60*60*24) {\r\n                    time = parseInt(time /3600.0) +\"小时\"+ parseInt((parseFloat(time /3600.0) -\r\n                            parseInt(time /3600.0)) *60) +\"分钟\"+\r\n                        parseInt((parseFloat((parseFloat(time /3600.0) - parseInt(time /3600.0)) *60) -\r\n                            parseInt((parseFloat(time /3600.0) - parseInt(time /3600.0)) *60)) *60) +\"秒\";\r\n                }else {\r\n                    time = parseInt(time) +\"秒\";\r\n                }\r\n            }else{\r\n                time = \"0 时 0 分0 秒\";\r\n            }\r\n            return time;\r\n        }\r\n```', '0', '1', null, 'post', 'publish', null, '2', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('205', 'mmap(xxx bytes) failed; errno 12解决方法', '205', '1466133000', '1466134215', '<!--markdown--># 缘由\r\n\r\n已经两三次英国同事找到我说网站除了首页其他页面都访问不了了，然后迅速看了下网站，发现日志如下\r\n```\r\n160605 20:55:51 mysqld_safe mysqld restarted\r\n160605 20:55:52 [Note] Plugin \'FEDERATED\' is disabled.\r\n160605 20:55:52 InnoDB: The InnoDB memory heap is disabled\r\n160605 20:55:52 InnoDB: Mutexes and rw_locks use GCC atomic builtins\r\n160605 20:55:52 InnoDB: Compressed tables use zlib 1.2.3\r\n160605 20:55:52 InnoDB: Using Linux native AIO\r\n160605 20:55:52 InnoDB: Initializing buffer pool, size = 64.0M\r\nInnoDB: mmap(68681728 bytes) failed; errno 12\r\n160605 20:55:52 InnoDB: Completed initialization of buffer pool\r\n160605 20:55:52 InnoDB: Fatal error: cannot allocate memory for the buffer pool\r\n160605 20:55:52 [ERROR] Plugin \'InnoDB\' init function returned error.\r\n160605 20:55:52 [ERROR] Plugin \'InnoDB\' registration as a STORAGE ENGINE failed.\r\n160605 20:55:52 [ERROR] Unknown/unsupported storage engine: InnoDB\r\n160605 20:55:52 [ERROR] Aborting\r\n```\r\n\r\n```\r\n160606 10:46:03 InnoDB: The InnoDB memory heap is disabled\r\n160606 10:46:03 InnoDB: Mutexes and rw_locks use GCC atomic builtins\r\n160606 10:46:03 InnoDB: Compressed tables use zlib 1.2.3\r\n160606 10:46:03 InnoDB: Using Linux native AIO\r\n160606 10:46:03 InnoDB: Initializing buffer pool, size = 64.0M\r\n160606 10:46:03 InnoDB: Completed initialization of buffer pool\r\n160606 10:46:03 InnoDB: highest supported file format is Barracuda.\r\nInnoDB: Log scan progressed past the checkpoint lsn 2189254361\r\n160606 10:46:04  InnoDB: Database was not shut down normally!\r\nInnoDB: Starting crash recovery.\r\nInnoDB: Reading tablespace information from the .ibd files...\r\nInnoDB: Restoring possible half-written data pages from the doublewrite\r\nInnoDB: buffer...\r\nInnoDB: Doing recovery: scanned up to log sequence number 2189254381\r\nInnoDB: Last MySQL binlog file position 0 143701705, file name ./mysql-bin.000016\r\n```\r\n\r\n果然是挂了，发现是mysql的问题，之后试着重启了下mysql就好了，任务多就没多大体会，然后就搁置了。\r\n\r\n正好找了空今天把这个问题解决了，解决方法当然是google了，这么好的工具不用浪费啦，发现原来是swap问题。O(∩_∩)O哈哈~\r\n\r\n# 解决方法：\r\n\r\n> 在 /etc/my.cnf 的 mysqld 下增加下面一句：\r\n\r\n```\r\ninnodb_buffer_pool_size = 512M\r\n\r\n```\r\n\r\n> 设置一下swap分区，通过fdisk -l 和 1mount 看不到swap的信息，需要手动添加一下。\r\n\r\n```\r\ndd if=/dev/zero of=/swapfile bs=1M count=1024\r\nmkswap /swapfile\r\nswapon /swapfile\r\n添加这行： /swapfile swap swap defaults 0 0 到 /etc/fstab\r\n```\r\n\r\n> 重启mysql\r\n\r\n```\r\n/etc/init.d/mysqld restart\r\n\r\n```\r\n或者\r\n```\r\nservice mysqld restart\r\n```\r\n\r\n\r\n参考链接:\r\n\r\n- [http://hongjiang.info/aliyun-vps-mysql-aborting/](http://hongjiang.info/aliyun-vps-mysql-aborting/)\r\n\r\n- [http://stackoverflow.com/questions/10284532/amazon-ec2-mysql-aborting-start-because-innodb-mmap-x-bytes-failed-errno-12](http://stackoverflow.com/questions/10284532/amazon-ec2-mysql-aborting-start-because-innodb-mmap-x-bytes-failed-errno-12)\r\n\r\n- [http://www.cnblogs.com/olinux/p/5144205.html](http://www.cnblogs.com/olinux/p/5144205.html)\r\n\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('207', 'JavaScript面向对象精要总结一', '207', '1467473640', '1467473840', '<!--markdown-->\r\n---\r\n\r\n全书从6个方面总结，分别是原始对象、引用对象、函数、理解对象、构造函数和原型对象、继承、对象模式。\r\n\r\n面向对象的几个特性：封装、继承、多态。\r\n\r\n原始类型保持为简单的数据值\r\n\r\n引用类型保存为对象\r\n\r\n> javaScript有五种原始类型\r\n\r\n 1. boolean\r\n 2. number\r\n 3. string\r\n 4. null\r\n 5. undefined\r\n\r\n> 鉴别原始类型\r\n\r\nconsole.log(typeof \"junhey\")\r\n\r\n> 创建对象\r\n\r\nvar object=new Object();\r\n\r\n> 内建类型实例化\r\n\r\nArray 数组类型\r\nDate 日期和时间类型\r\nError 运行期错误类型\r\nFunction 函数类型\r\nObject 通用对象类型\r\nRegExp 正则表达式类型\r\n\r\n可以new来实例化每一个内建引用类型，如下：\r\n```\r\nvar item=new Array();\r\nvar now=new Date();\r\nvar error=new Error(\'Something bad happened\');\r\nvar func=new Function(\"console.log(\'Hi\');\");\r\nvar object=new Object();\r\nvar re=new RegExp(\'\\\\d+\');\r\n```\r\n\r\n> 鉴别引用类型\r\n\r\nconsole.log(items instanceof Array);\r\n\r\n\r\n> 函数两种字面形式\r\n\r\n- 函数声明\r\n\r\n```\r\nfunction add(num1,num2){\r\n    return num1+num2;\r\n} \r\n```\r\n- 函数表达式\r\n\r\n```\r\nvar add=function(num1,num2){\r\n    return num1+num2;\r\n}\r\n```\r\n\r\n参数\r\n```\r\nfunction sum(){\r\n   var result=0,\r\n       i=0,\r\n       len=arguments.length;\r\n   while(i<len){\r\n       result+=arguments[i];\r\n       i++;\r\n    }\r\n   return result;\r\n}\r\n```\r\n\r\n> this对象\r\n\r\n全局作用域中，this代表全局对象。\r\n当一个函数作为对象的方法被调用时，默认this的值等于那个对象。\r\n\r\n> 改变this\r\n\r\n```\r\nvar name=\"junhey\";\r\nfunction sayNameForAll(label){\r\n    console.log(label+\":\"+this.name);\r\n}\r\nvar person1={\r\n    name:\"junhey\"\r\n}\r\n\r\nsayNameForAll.call(peoson1,\"person1\");//output \"person1:junhey\"\r\nsayNameForAll.apply(person1,[\"person1\"]);//output \"person1:junhey\"\r\n\r\n```\r\n\r\n- call()\r\n\r\ncall()的第一个参数指定了函数执行时this的值，其后的所有参数都是需要被传入函数的参数。\r\n\r\n\r\n\r\n- apply()\r\n\r\n只接受两个参数：this的值和一个数组或者类似数组的对象', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('208', '未命名文档', '208', '1467900462', '1467900471', '<!--markdown-->### 预习工作\r\n\r\n\r\n\r\n安装软件\r\n\r\n- Node.js http://nodejs.org/\r\n\r\n- MongoDB  http://mongodb.org/\r\n\r\n- VSCode https://code.visualstudio.com/download\r\n\r\n\r\n\r\n阅读文档\r\n\r\nhttps://github.com/17koa/koa-guide\r\n\r\n## 看一下Koa 2 帅帅的代码\r\n\r\n### restful api\r\n\r\n```\r\n\r\n/**\r\n\r\n * Auto generate RESTful url routes.\r\n\r\n *\r\n\r\n * URL routes:\r\n\r\n *\r\n\r\n *  GET    /users[/]        => user.list()\r\n\r\n *  GET    /users/new       => user.new()\r\n\r\n *  GET    /users/:id       => user.show()\r\n\r\n *  GET    /users/:id/edit  => user.edit()\r\n\r\n *  POST   /users[/]        => user.create()\r\n\r\n *  PATCH  /users/:id       => user.update()\r\n\r\n *  DELETE /users/:id       => user.destroy()\r\n\r\n *\r\n\r\n */\r\n\r\n```\r\n\r\n看起来很爽有木有？\r\n\r\n### 目录结构\r\n\r\n![](http://nodeonly.com/nodesang/images/models.png)\r\n\r\n### 中间件\r\n\r\nKoa 2.x最常见的modern中间件\r\n\r\n```\r\n\r\nexports.list = (ctx, next) => {\r\n\r\n  console.log(ctx.method + \' /users => list, query: \' + JSON.stringify(ctx.query));\r\n\r\n  return User.getAllAsync().then(( users)=>{\r\n\r\n    return ctx.render(\'users/index\', {\r\n\r\n      users : users\r\n\r\n    })\r\n\r\n  }).catch((err)=>{\r\n\r\n      return ctx.api_error(err);\r\n\r\n  });\r\n\r\n};\r\n\r\n```\r\n\r\n只要懂promise/a+规范，就能搞定，所以你以前玩express的经验，还是会非常有用呢~\r\n\r\nKoa 2.x中使用generator\r\n\r\n```\r\n\r\nexports.list = function *(ctx, next) {\r\n\r\n  console.log(ctx.method + \' /students => list, query: \' + JSON.stringify(ctx.query));\r\n\r\n  \r\n\r\n  let students = yield Student.getAllAsync();\r\n\r\n  \r\n\r\n  yield ctx.render(\'students/index\', {\r\n\r\n    students : students\r\n\r\n  })\r\n\r\n};\r\n\r\n```\r\n\r\n有木有同步的感觉？\r\n\r\n```\r\n\r\nlet students = yield Student.getAllAsync();\r\n\r\n```\r\n\r\n本来从数据库里获取所有学生信息是异步的操作，但是yield把它掰弯成同步的，有木有很爽？\r\n\r\n实际上，它也是co包过的，这样更便于处理err\r\n\r\n```\r\n\r\nrouter.get(\'/list\', (ctx, next) => {\r\n\r\n  return co.wrap($.list)(ctx, next).catch(err => {\r\n\r\n    return ctx.api_error(err);\r\n\r\n  })\r\n\r\n}); \r\n\r\n```\r\n\r\n代码就这么精简\r\n\r\nKoa 2.x中使用async/await\r\n\r\n```\r\n\r\nexports.list = async (ctx, next) => {\r\n\r\n  console.log(ctx.method + \' /students => list, query: \' + JSON.stringify(ctx.query));\r\n\r\n  try {\r\n\r\n    let students = await Student.getAllAsync();\r\n\r\n  \r\n\r\n    await ctx.render(\'students/index\', {\r\n\r\n      students : students\r\n\r\n    })\r\n\r\n  } catch (err) {\r\n\r\n    return ctx.api_error(err);\r\n\r\n  }\r\n\r\n};\r\n\r\n```\r\n\r\n它和generator其实没有太多区别，一样简单、命令，一通百通。\r\n\r\n### 性感的ava测试\r\n\r\n```\r\n\r\n// *  GET    /users[/]        => user.list()\r\n\r\ntest(\'GET /\' + model, function * (t) {\r\n\r\n  var res = yield superkoa(\'../../app.js\')\r\n\r\n    .get(\'/\' + model)\r\n\r\n  t.is(200, res.status)\r\n\r\n  t.regex(res.text, /table/g)\r\n\r\n})\r\n\r\n```\r\n\r\n测试也成了同步的感觉，有木有爽爽哒？\r\n\r\n来个更复杂的原子性测试\r\n\r\n```\r\n\r\n// *  GET    /users/:id       => user.show()\r\n\r\ntest(\'GET /\' + model + \'/:id show\', function * (t) {\r\n\r\n  var res1 = yield superkoa(\'../../app.js\')\r\n\r\n    .post(\'/api/\' + model)\r\n\r\n    .send(mockUser)\r\n\r\n    .set(\'Accept\', \'application/json\')\r\n\r\n    .expect(\'Content-Type\', /json/)\r\n\r\n  user = res1.body.user\r\n\r\n  var res = yield superkoa(\'../../app.js\')\r\n\r\n    .get(\'/\' + model + \'/\' + user._id)\r\n\r\n  t.is(200, res.status)\r\n\r\n  t.regex(res.text, /Edit/)\r\n\r\n})\r\n\r\n```\r\n\r\n想要测试展示，就要先创建，每一步都是同步的，是不是代码逻辑看起来更清楚？', '0', '1', null, 'post_draft', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('209', 'ubuntu git install', '209', '1468390332', '1468390845', '<!--markdown-->1. 通过ubuntu的APT安装\r\n\r\n```\r\nsudo apt-get update\r\nsudo apt-get install git\r\n```\r\n\r\n2. 配置自己的git账号信息\r\n\r\n```\r\ngit config --global user.name \"Your Name\"\r\ngit config --global user.email \"youremail@domain.com\"\r\n```\r\n\r\n3. 查看git的配置信息\r\n\r\n```\r\ngit config --list\r\n```\r\n\r\n4. 创建验证用的公钥\r\n\r\n```\r\nssh-keygen -C \'you email address@gmail.com\' -t rsa\r\n```\r\n\r\n5. 上传公钥\r\n\r\n在 github.com 的界面中 选择右上角的 Account Settings，然后选择 SSH Public Keys ，选择新加。\r\nTitle 可以随便命名，Key 的内容拷贝自 ~/.ssh/id_rsa.pub 中的内容，完成后，可以再使用 ssh -v git@github.com 进行测试。\r\n\r\n6. 测试\r\n\r\n```\r\nssh -v git@github.com\r\n```\r\n\r\n![git.png][1]\r\n\r\n\r\n  [1]: http://junhey.com/usr/uploads/2016/07/2082907628.png', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('210', 'git.png', 'git-png', '1468390801', '1468390801', 'a:5:{s:4:\"name\";s:7:\"git.png\";s:4:\"path\";s:35:\"/usr/uploads/2016/07/2082907628.png\";s:4:\"size\";i:484941;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '209');
INSERT INTO `typecho_contents` VALUES ('211', 'nvm 和 n 的区别', '211', '1468488480', '1468488518', '<!--markdown-->http://www.jb51.net/article/73424.htm', '0', '1', null, 'post_draft', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('212', 'n和nvm管理Node的版本', '212', '1469081735', '1469081846', '<!--markdown-->\r\nNode版本的迭代速度很快，版本很多（横跨0.6到0.11），升级Node版本成为了一个问题。目前有n和nvm这两个工具可以对Node进行无痛升级，本文简单介绍一下二者的使用。\r\nn\r\n\r\nn是Node的一个模块，作者是TJ Holowaychuk（鼎鼎大名的Express框架作者），就像它的名字一样，它的理念就是简单：\r\n\r\n\"no subshells, no profile setup, no convoluted api, just simple\"\r\n\r\n安装很简单：\r\n\r\n$ sudo npm install -g n\r\n\r\n安装完成之后，直接输入n后输出当前已经安装的node版本以及正在使用的版本（前面有一个o），你可以通过移动上下方向键来选择要使用的版本，最后按回车生效。\r\n\r\n$ n\r\n    0.10.1 \r\n    0.10.15 \r\no   0.10.21 \r\n    0.11.8\r\n\r\n如果你要安装其他的版本（比如0.11.12），那么如下：\r\n\r\n$ n 0.11.12\r\ninstall : 0.11.12\r\n   mkdir : /usr/local/n/versions/0.11.12\r\n   fetch : http://nodejs.org/dist/v0.11.12/node-v0.11.12-darwin-x64.tar.gz\r\n\r\n安装最新的版本\r\n\r\n$ n latest\r\n\r\n安装稳定版本\r\n\r\n$ n stable\r\n\r\n删除某个版本\r\n\r\n$ n rm 0.10.1 \r\n\r\n以指定的版本来执行脚本\r\n\r\n$ n use 0.10.21 some.js\r\n\r\nnvm\r\n\r\nnvm全称Node Version Manager，它与n的实现方式不同，其是通过shell脚本实现的。\r\n\r\n安装方式有两种：\r\n\r\n$ curl https://raw.github.com/creationix/nvm/v0.4.0/install.sh | sh\r\n\r\n或者\r\n\r\n$ wget -qO- https://raw.github.com/creationix/nvm/v0.4.0/install.sh | sh\r\n\r\n以上脚本会把nvm库clone到~/.nvm，然后会在~/.bash_profile, ~/.zshrc或`~/.profile末尾添加source，安装完成之后，你可以用以下命令来安装node\r\n\r\n$ nvm install 0.10\r\n\r\n使用指定的版本\r\n\r\n$ nvm use 0.10\r\n\r\n查看当前已经安装的版本\r\n\r\n$ nvm ls\r\n.nvm\r\n->  v0.10.24\r\n\r\n查看正在使用的版本\r\n\r\n$ nvm current\r\nv0.10.24\r\n\r\n以指定版本执行脚本\r\n\r\n$ nvm run 0.10.24 myApp.js\r\n\r\n卸载nvm\r\n\r\n$ rm -rf ~/.nvm\r\n\r\n总结\r\n\r\n以上就是两种Node版本管理工具的安装和基本使用方法，选择适合你的那一种口味。\r\n参考\r\n\r\n    https://github.com/creationix/nvm\r\n    https://github.com/visionmedia/n\r\n\r\n(完) \r\n\r\n作者: JeremyWei \r\n网址: http://weizhifeng.net/node-version-management-via-n-and-nvm.html', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('213', 'linux下文件权限修改 git也被记录', '213', '1469176504', '1469176982', '<!--markdown--># 问题描述\r\n\r\n这几天试着在ubuntu上进行开发，遇到问题挺多的，移动目录之后webstorm识别不了目录，然后通过chown修改目录权限之后想提交代码，然后就出现修改权限之后代码更新的提示，是全部都有提示，而我只改了部分代码，之后git diff 之后发现是修改权限git识别到并把文件权限作为文件修改的一部分。其实有一个很好的办法就是移动目录之后，更改目录所属用户就不会出现webstorm的问题。\r\n\r\n# 解决办法\r\n\r\ngit中可以加入忽略文件权限的配置，具体如下：\r\n```\r\n$ git config core.filemode false\r\n\r\n$ git config --list\r\n```\r\n还有一个小问题，在设置这个属性之前权限就混乱的话，是无法自动修复的。\r\n这时候，如果仅仅是权限混乱的话，直接git reset --hard恢复，git会将项目完全恢复到最近一次提交，包括权限。\r\n如果文件已经修改过了调整后出现这个问题那就先备份一下项目在操作。', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('216', '正则的应用', '@202', '1463130600', '1470282489', '<!--markdown-->遇到的情况\r\n\r\n```\r\n<td>\r\n	<a href=\"http://school.times-rank.cn/LeedsBeckett.html\">利兹贝克特大学(Leeds Beckett)</a>\r\n</td>\r\n<td>\r\n	<a href=\"http://school.times-rank.cn/LeedsBeckett.html\">详细</a>\r\n</td>\r\n\r\n```\r\n要修改为\r\n```\r\n<td>\r\n	<a href=\"http://www.myoffer.cn/search/利兹贝克特大学\">利兹贝克特大学(Leeds Beckett)</a>\r\n</td>\r\n<td>\r\n	<a href=\"http://www.myoffer.cn/search/利兹贝克特大学\">详细</a>\r\n</td>\r\n```\r\n\r\n\r\n正则表达式\r\n\r\n```\r\n<td>\\s+<a href=\"http://school.times-rank.cn/[\\w_]+.html\">(.+?)(([a-zA-Z])*)</a>\\s+</td>\\s+<td>\\s+<a href=\"http://school.times-rank.cn/.+.html\">详细</a>\\s+</td>\r\n\r\n<td>\\s+<a href=\"http://www.myoffer.cn/search/\\1\">\\1\\2</a>\\s+</td>\\s+<td>\\s+<a href=\"http://www.myoffer.cn/search/\\1\">详细</a>\\s+</td>\r\n```\r\n\r\n[Notepad++的正则表达式替换和替换](http://www.crifan.com/files/doc/docbook/rec_soft_npp/release/htmls/npp_func_regex_replace.html)\r\n\r\n[正则表达式 - 语法](http://www.runoob.com/regexp/regexp-syntax.html)\r\n\r\n![正则匹配.png][1]\r\n\r\n问题解决OK\r\n\r\n\r\n  [1]: http://junhey.com/usr/uploads/2016/08/872741702.png', '0', '1', null, 'post_draft', 'publish', null, '0', '1', '1', '1', '202');
INSERT INTO `typecho_contents` VALUES ('215', '正则匹配.png', '正则匹配-png', '1470282483', '1470282483', 'a:5:{s:4:\"name\";s:16:\"正则匹配.png\";s:4:\"path\";s:34:\"/usr/uploads/2016/08/872741702.png\";s:4:\"size\";i:242708;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '202');
INSERT INTO `typecho_contents` VALUES ('219', 'Webpack学习笔记', '219', '1474682640', '1476324849', '<!--markdown-->> Webpack是前端一个工具，可以让各个模块进行加载，预处理，再进行打包，它能有Grunt或Gulp所有基本功能。\r\n\r\n1. 支持commonJS和AMD模块。\r\n2. 支持很多模块加载器的调用，可以使模块加载器灵活定制，比如babel-loader加载器，该加载器能使我们使用ES6的语法来编写代码。\r\n3. 可以通过配置打包成多个文件，有效的利用浏览器的缓存功能提升性能。\r\n4. 使用模块加载器，可以支持sass，less等处理器进行打包且支持静态资源样式及图片进行打包。\r\n\r\n> 安装webpack\r\n\r\n- 我们可以直接使用npm进行全局安装\r\n```\r\nnpm install webpack -g\r\n```\r\n- 在常规项目中把webpack依赖加入到package.json\r\n```\r\nnpm init npm install webpack --save\r\n```\r\n\r\n> webpak命令行\r\n\r\n- 启动\r\n```\r\nwebpack\r\n```\r\n- webpack实时编译\r\n```\r\nwebpack --watch\r\n```\r\n- 默认的配置文件webpack.config.js改成自定义文件\r\n```\r\nwebpack --config customconfig.js\r\n```\r\n\r\n> webpack.config.js代码\r\n```\r\nmodule.exports = {\r\n  entry: \"./src/main.js\",\r\n  output: {\r\n    filename: \"build/build.js\"\r\n  },\r\n  module: {\r\n    loaders: [\r\n       //.css 文件使用 style-loader 和 css-loader 来处理\r\n      { test: /\\.css$/, loader: \"style!css\" },\r\n      //.js 文件使用 jsx-loader 来编译处理\r\n      { test: /\\.js$/,    loader: \"jsx-loader\" }\r\n    ]\r\n  },\r\n  resolve: {\r\n    extensions: [\'\', \'.js\', \'.jsx\']\r\n  },\r\n  plugins: []\r\n};\r\n```\r\n> Webpack提供了一套加载器，比如css-loader,less-loader,style-loader，url-loader等，用于将不同的文件加载到js文件中，比如url-loader用于在js中加载png/jpg格式的图片文件，css/style loader用于加载css文件，less-loader加载器是将less编译成css文件\r\n\r\n可以尝试下实现[https://webpack.github.io/docs/list-of-plugins.html](https://webpack.github.io/docs/list-of-plugins.html)里的Plugin\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('220', 'Mac下安装nginx', '220', '1478504218', '1478504524', '<!--markdown--># Mac安装nginx\r\n\r\n\r\n## 安装brew(由于MAC自带ruby，所以安装起来很方便)\r\n\r\n```\r\nruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" \r\n```\r\n\r\n安装后命令存在 /usr/local/bin/brew\r\n\r\n## brew安装nginx\r\n```\r\nbrew install nginx   （或者 /usr/local/bin/brew install nginx）\r\n```\r\n过后等着就行了。会自动安装pcre和ssl等。', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('221', 'Mac上Nginx配置', '221', '1478081760', '1478514079', '<!--markdown-->背景\r\n\r\n之前一直使用Apache做静态资源私服及反向代理, 配置稍显复杂, 今天使用nginx来替换Apache, 在此小记一下探索的过程及碰到的问题.\r\n\r\n安装\r\n\r\n本人使用Mac系统, 偷懒的使用了homebrew, 一键完成了安装. 对于其它OS使用解压zip的方式.\r\n\r\n下面从安装–>配置(静态资源私服 php 反向代理)–>问题展开吧\r\n\r\n安装Homebrew\r\n\r\n\r\nruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\r\n\r\nbrew cleanup\r\n\r\nbrew doctor\r\n安装Nginx\r\n\r\n安装\r\n\r\n\r\nbrew install nginx\r\n启动\r\n\r\n\r\nsudo nginx\r\n停止\r\n\r\n\r\nsudo nginx -s stop\r\n配置\r\n\r\n文件目录\r\n\r\nnginx安装文件目录\r\n\r\n\r\n/usr/local/Cellar/nginx\r\nnginx配置文件目录\r\n\r\n\r\n/usr/local/etc/nginx\r\n系统hosts位置\r\n\r\n\r\n/private/etc/hosts\r\n配置nginx\r\n\r\n使用多个配置来管理nginx下的多个websites\r\n\r\n\r\ncd /usr/local/etc/nginx\r\n\r\nmkdir conf.d\r\n\r\nvim /usr/local/etc/nginx/nginx.conf\r\n在nginx.conf中进行修改, 大致配置可如下, 详细配置见官方文档\r\n\r\n\r\nuser  your_username staff;\r\nworker_processes  1;\r\n\r\nevents {\r\n    worker_connections  1024;\r\n}\r\n\r\nhttp {\r\n    include       mime.types;\r\n    default_type  application/octet-stream;\r\n    sendfile        on;\r\n    keepalive_timeout  65;\r\n    include conf.d/*.conf;\r\n}\r\n注意修改该配置中的your_username为你的Mac用户名.\r\n\r\n到此父级配置已配置完成, 接下来配置用户希望的功能, 例如静态资源私服或反向代理.\r\n\r\n配置自己的静态资源服务器(username.conf), 如下\r\n\r\n\r\nserver {\r\n        listen       80;\r\n        server_name  resource.com;\r\n        charset utf-8,gbk; \r\n        location / {\r\n            root   /Users/username/resource;\r\n            #index  index.html index.htm;\r\n            autoindex on;\r\n            autoindex_exact_size on;\r\n            autoindex_localtime on;\r\n        }\r\n}\r\n配置反向代理, 如下\r\n\r\n\r\nserver {\r\n    listen       80;\r\n    server_name  app.com;\r\n	\r\n	# oauth2的资源服务器\r\n	location / {\r\n		proxy_set_header        Host $http_host;\r\n	    proxy_pass http://localhost:8080/resource-app/;\r\n	}\r\n\r\n	location /resource-app/ {\r\n		proxy_set_header        Host $http_host;\r\n	    proxy_pass http://localhost:8080/resource-app/;\r\n	}\r\n	\r\n	# oauth2的授权服务器	\r\n	location /actor-app/ {\r\n		proxy_set_header        Host $http_host;\r\n	    proxy_pass http://localhost:8082/actor-app/;\r\n	}\r\n\r\n}\r\n配置Php\r\n\r\n安装php-fpm\r\n\r\nMac OSX 10.9的系统自带了PHP、php-fpm，省去了安装php-fpm的麻烦。 这里需要简单地修改下php-fpm的配置，否则运行php-fpm会报错。\r\n\r\n\r\n\r\nsudo cp /private/etc/php-fpm.conf.default /private/etc/php-fpm.conf\r\nvim /private/etc/php-fpm.conf\r\n修改php-fpm.conf文件中的error_log项，默认该项被注释掉，这里需要去注释并且修改为error_log = /usr/local/var/log/php-fpm.log。如果不修改该值，运行php-fpm的时候会提示log文件输出路径不存在的错误。\r\n\r\n配置hosts\r\n\r\n\r\nvim /private/etc/hosts\r\n在末尾加入如下代码, 该域名是nginx中server指定的server_name\r\n\r\n\r\n# 针对静态资源私服\r\n127.0.0.1 resource.com\r\n# 针对反向代理\r\n127.0.0.1 app.com\r\n配置完毕, 在浏览器中键入http://resource.com/可以对指定目录的文件进行浏览,下载; 键入http://app.com/resource-app或http://app.com/actor-app可分别进入不同的应用.\r\n\r\n测试\r\n\r\n在root根目录中创建文件index.php, 内容如下,\r\n\r\n\r\n<?php phpinfo(); ?>\r\n启动nginx\r\n\r\n\r\nsudo nginx\r\n重启nginx\r\n\r\n\r\nsudo nginx -s reload\r\n停止nginx\r\n\r\n\r\nsudo nginx -s stop\r\n启动php\r\n\r\n\r\nsudo php-fpm\r\n在浏览器中输入http://resource.com/index.php即可看到php的详细信息.\r\n\r\n问题\r\n\r\n1.键入http://resource.com/, 服务器返回403界面\r\n\r\n该问题是因为访问权限不够造成, 在nginx.conf首行配置即可,\r\n\r\nuser  your_username staff;\r\n\r\n2.目录未显示, 只显示index.html页面\r\n\r\n该问题是指定站点(website)未启用目录浏览功能, 在指定server的location节点启用目录浏览功能,如下,\r\n\r\nautoindex on;\r\nautoindex_exact_size \r\nautoindex_localtime on;\r\n\r\n\r\n来自：[http://arccode.net/2015/02/27/Nginx%E9%85%8D%E7%BD%AE%E5%B0%8F%E8%AE%B0/](http://arccode.net/2015/02/27/Nginx%E9%85%8D%E7%BD%AE%E5%B0%8F%E8%AE%B0/)\r\n', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('222', 'mac上用的比较多的快捷键（常更新）', '222', '1478746500', '1484032510', '<!--markdown-->Mac OS X 菜单中的修饰键符号\r\n\r\nCommand 键图标（Command 键） - 在某些 Apple 键盘上，此键也可能带有 Apple 标志（apple 标志）\r\nControl 键图标（Control 键）\r\nOption 或 Alt 键图标（Option 键）-“Alt”可能也出现在此键上\r\nShift 键图标（Shift 键）\r\nCaps lock 键图标（Caps Lock 键）- 切换大写字母锁定开或关\r\nfn（功能键） \r\n\r\n![mac快捷键.png][1]\r\n\r\ncontrol+command+f 全屏的快捷键\r\n\r\ncommand+option+i  开发者模式\r\n\r\nCommand+W 关分页\r\n\r\nCommand+R 刷新\r\n\r\nCommand+T  新开分页\r\n\r\nshift+Command+3全屏和+4局部  截屏键\r\n\r\nfinder =>command + option + 拖拽到桌面上  桌面快捷方式\r\n\r\ncommand +f3 回到桌面切换(非全屏模式下)\r\n\r\ncommand+control+f 程序全屏切换\r\n\r\ncommand+tab 程序切换\r\n\r\ncmd+c→cmd+v 复制粘贴\r\n\r\ncmd+c→cmd+option+v 剪切粘贴\r\n\r\ncommand+q 完全退出程序\r\n\r\n\r\n  [1]: http://junhey.com/usr/uploads/2017/01/630794881.png', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('223', 'rem布局', '223', '1479957360', '1479959718', '<!--markdown--># rem\r\n\r\nrem(font size of the root element)是指相对于根元素的字体大小的单位\r\n\r\n# rem布局主要有两种形式\r\n\r\n- css媒体查询 设置好font-size\r\n\r\n- js动态计算font-size\r\n\r\n# viewport设置\r\n```\r\n<meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1, minimum-scale=1\">\r\n```\r\n# rem 初始化\r\n\r\n\r\n> copy from taobao\r\n\r\n```\r\n<script>\r\n    !function (win) {\r\n        function refreshRem() {\r\n            var width = docEl.getBoundingClientRect().width;\r\n            width / dpr > 540 && (width = 540 * dpr), win.rem = width / 16, docEl.style.fontSize = win.rem + \"px\"\r\n        }\r\n        var dpr, scale, tid, doc = win.document, docEl = doc.documentElement, metaEl = doc.querySelector(\'meta[name=\"viewport\"]\'), flexibleEl = doc.querySelector(\'meta[name=\"flexible\"]\');\r\n        if (metaEl) {\r\n            var match = metaEl.getAttribute(\"content\").match(/initial\\-scale=([\"\']?)([\\d\\.]+)\\1?/);\r\n            match && (scale = parseFloat(match[2]), dpr = parseInt(1 / scale))\r\n        } else if (flexibleEl) {\r\n            var match2 = flexibleEl.getAttribute(\"content\").match(/initial\\-dpr=([\"\']?)([\\d\\.]+)\\1?/);\r\n            match2 && (dpr = parseFloat(match2[2]), scale = parseFloat((1 / dpr).toFixed(2)))\r\n        }\r\n        if (!dpr && !scale) {\r\n            var k = (win.navigator.appVersion.match(/android/gi), win.navigator.appVersion.match(/iphone/gi)), devicePixelRatio = win.devicePixelRatio;\r\n            dpr = k ? devicePixelRatio >= 3 ? 3 : devicePixelRatio >= 2 ? 2 : 1 : 1, scale = 1 / dpr\r\n        }\r\n        if (docEl.setAttribute(\"data-dpr\", dpr), !metaEl)if (metaEl = doc.createElement(\"meta\"), metaEl.setAttribute(\"name\", \"viewport\"), metaEl.setAttribute(\"content\", \"initial-scale=\" + scale + \", maximum-scale=\" + scale + \", minimum-scale=\" + scale + \", user-scalable=no\"), docEl.firstElementChild) {\r\n            docEl.firstElementChild.appendChild(metaEl);\r\n        }else {\r\n            var l = doc.createElement(\"div\");\r\n            l.appendChild(metaEl), doc.write(l.innerHTML)\r\n        }\r\n        win.dpr = dpr, win.addEventListener(\"resize\", function () {\r\n            clearTimeout(tid), tid = setTimeout(refreshRem, 300)\r\n        }, !1), win.addEventListener(\"pageshow\", function (e) {\r\n            e.persisted && (clearTimeout(tid), tid = setTimeout(refreshRem, 300))\r\n        }, !1), \"complete\" === doc.readyState ? doc.body.style.fontSize = 12 * dpr + \"px\" : doc.addEventListener(\"DOMContentLoaded\", function () {\r\n            doc.body.style.fontSize = 12 * dpr + \"px\"\r\n        }, !1), refreshRem()\r\n    }(window);\r\n</script>\r\n```', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('224', 'JavaScript中的立即执行函数', '224', '1480403880', '1480404300', '<!--markdown-->注：此文只在理解立即执行函数，不在所谓原创，文中大量引用[阮一峰的JavaScript标准参考教程](http://javascript.ruanyifeng.com/grammar/function.html#toc23)、[MDN的JavaScript 参考文档](http://javascript.ruanyifeng.com/grammar/function.html#toc23)和[深入理解JavaScript系列（4）：立即调用的函数表达式](http://www.cnblogs.com/tomxu/archive/2011/12/31/2289423.html)的内容。\r\n\r\n描述\r\n立即执行函数通常有下面两种写法：\r\n```\r\n(function(){ \r\n   ...\r\n})();\r\n\r\n(function(){ \r\n    ...\r\n}());\r\n```\r\n在Javascript中，一对圆括号“()”是一种运算符，跟在函数名之后，表示调用该函数。比如，print()就表示调用print函数。\r\n这个写法和我们想象的写法不一样（知道的人当然已经习以为常）很多人刚开始理解立即执行函数的时候，觉得应该是这样的：\r\n```\r\nfunction (){ ... }()；\r\n\r\n//或者\r\n\r\nfunction fName(){ ... }();\r\n```\r\n然而事实却是这样：SyntaxError: Unexpected token (。这是为什么呢？\r\n\r\n解释\r\n要理解立即执行函数，需要先理解一些函数的基本概念：函数声明、函数表达式,因为我们定义一个函数通常都是通过这两种方式\r\n\r\n函数声明 (function 语句)\r\n```\r\nfunction name([param[, param[, ... param]]]) {\r\n   statements\r\n}\r\n```\r\nname：函数名；\r\nparam：被传入函数的参数的名称,一个函数最多可以有255个参数；\r\nstatements：这些语句组成了函数的函数体。\r\n\r\n函数表达式 (function expression)\r\n\r\n函数表达式和函数声明非常类似,它们甚至有相同的语法。\r\n```\r\nfunction [name]([param] [, param] [..., param]) {\r\n   statements\r\n}\r\n```\r\nname：函数名,可以省略,省略函数名的话,该函数就成为了匿名函数；\r\nparam：被传入函数的参数的名称,一个函数最多可以有255个参数；\r\nstatements：这些语句组成了函数的函数体。\r\n\r\n下面我们给出一些栗子说明：\r\n```\r\n// 声明函数f1\r\nfunction f1() {\r\n    console.log(\"f1\");\r\n}\r\n// 通过()来调用此函数\r\nf1();\r\n\r\n\r\n//一个匿名函数的函数表达式，被赋值给变量f2:\r\nvar f2 = function() {\r\n    console.log(\"f2\");\r\n}\r\n//通过()来调用此函数\r\nf2();\r\n\r\n\r\n//一个命名为f3的函数的函数表达式(这里的函数名可以随意命名，可以不必和变量f3重名)，被赋值给变量f3:\r\nvar f3 = function f3() {\r\n    console.log(\"f2\");\r\n}\r\n//通过()来调用此函数\r\nf3();\r\n```\r\n上面所起的作用都差不多，但还是有一些差别\r\n1、函数名和函数的变量存在着差别。函数名不能被改变，但函数的变量却能够被再分配。函数名只能在函数体内使用。倘若在函数体外使用函数名将会导致错误：\r\n```\r\nvar y = function x() {};\r\nalert(x); // throws an erro\r\n```\r\n2、函数声明定义的函数可以在它被声明之前使用\r\n```\r\nfoo(); // alerts FOO!\r\nfunction foo() {\r\n   alert(\'FOO!\');\r\n}\r\n```\r\n但函数声明非常容易（经常是意外地）转换为函数表达式。当它不再是一个函数声明：\r\n\r\n成为表达式的一部分\r\n不再是函数或者script自身的“源元素” （source element）。在script或者函数体内“源元素”并非是内嵌的语句（statement）\r\n```\r\nvar x = 0;               // source element\r\nif (x == 0) {            // source element\r\n   x = 10;               // 非source element\r\n   function boo() {}     // 非 source element\r\n}\r\nfunction foo() {         // source element\r\n   var y = 20;           // source element\r\n   function bar() {}     // source element\r\n   while (y == 10) {     // source element\r\n      function blah() {} // 非 source element\r\n      y++;               //非source element\r\n   }\r\n}\r\n```\r\nExamples:\r\n```\r\n// 函数声明\r\nfunction foo() {}\r\n\r\n// 函数表达式 \r\n(function bar() {})\r\n\r\n// 函数表达式\r\nx = function hello() {}\r\n\r\n\r\nif (x) {\r\n   // 函数表达式\r\n   function world() {}\r\n}\r\n\r\n\r\n// 函数声明\r\nfunction a() {\r\n   // 函数声明\r\n   function b() {}\r\n   if (0) {\r\n      //函数表达式\r\n      function c() {}\r\n   }\r\n}\r\n```\r\n现在我们来解释上面的SyntaxError: Unexpected token (：\r\n产生这个错误的原因是，Javascript引擎看到function关键字之后，认为后面跟的是函数定义语句，不应该以圆括号结尾。\r\n解决方法就是让引擎知道，圆括号前面的部分不是函数定义语句，而是一个表达式，可以对此进行运算。所以应该这样写：\r\n```\r\n(function(){ /* code */ }()); \r\n\r\n// 或者\r\n\r\n(function(){ /* code */ })();\r\n```\r\n这两种写法都是以圆括号开头，引擎就会认为后面跟的是一个表示式，而不是函数定义，所以就避免了错误。这就叫做“立即调用的函数表达式”（Immediately-Invoked Function Expression），简称IIFE。\r\n\r\n注意，上面的两种写法的结尾，都必须加上分号。\r\n推而广之，任何让解释器以表达式来处理函数定义的方法，都能产生同样的效果，比如下面三种写法。\r\n```\r\nvar i = function(){ return 10; }();\r\n\r\ntrue && function(){ /* code */ }();\r\n\r\n0, function(){ /* code */ }();\r\n```\r\n甚至像这样写：\r\n```\r\n!function(){ /* code */ }();\r\n\r\n~function(){ /* code */ }();\r\n\r\n-function(){ /* code */ }();\r\n\r\n+function(){ /* code */ }();\r\n```\r\nnew关键字也能达到这个效果：\r\n```\r\nnew function(){ /* code */ }\r\n\r\nnew function(){ /* code */ }() // 只有传递参数时，才需要最后那个圆括号。\r\n```\r\n使用\r\n那我们通常为什么使用函数立即表达式呢，以及我如何使用呢？\r\n\r\n通常情况下，只对匿名函数使用这种“立即执行的函数表达式”。它的目的有两个：\r\n\r\n一是不必为函数命名，避免了污染全局变量；\r\n二是IIFE内部形成了一个单独的作用域，可以封装一些外部无法读取的私有变量。\r\n```\r\n// 写法一\r\nvar tmp = newData;\r\nprocessData(tmp);\r\nstoreData(tmp);\r\n\r\n// 写法二\r\n(function (){\r\n  var tmp = newData;\r\n  processData(tmp);\r\n  storeData(tmp);\r\n}());\r\n```\r\n上面代码中，写法二比写法一更好，因为完全避免了污染全局变量。\r\n\r\n最后在举一个真实的栗子：在JavaScript的OOP中，我们可以通过IIFE来实现一个单例(关于单例的优化不再此处讨论)\r\n\r\n// 创建一个立即调用的匿名函数表达式\r\n// return一个变量，其中这个变量里包含你要暴露的东西\r\n// 返回的这个变量将赋值给counter，而不是外面声明的function自身\r\n```\r\nvar counter = (function () {\r\n    var i = 0;\r\n\r\n    return {\r\n        get: function () {\r\n            return i;\r\n        },\r\n        set: function (val) {\r\n            i = val;\r\n        },\r\n        increment: function () {\r\n            return ++i;\r\n        }\r\n    };\r\n} ());\r\n\r\n// counter是一个带有多个属性的对象，上面的代码对于属性的体现其实是方法\r\n\r\ncounter.get(); // 0\r\ncounter.set(3);\r\ncounter.increment(); // 4\r\ncounter.increment(); // 5\r\n\r\ncounter.i; // undefined 因为i不是返回对象的属性\r\ni; // 引用错误: i 没有定义（因为i只存在于闭包）\r\n```\r\n\r\n原文地址：[https://segmentfault.com/a/1190000003902899](https://segmentfault.com/a/1190000003902899)\r\n文章转载，如有冒犯请联系。', '0', '1', null, 'post', 'publish', null, '0', '1', '1', '1', '0');
INSERT INTO `typecho_contents` VALUES ('227', 'mac快捷键.png', 'mac快捷键-png', '1484032505', '1484032505', 'a:5:{s:4:\"name\";s:16:\"mac快捷键.png\";s:4:\"path\";s:34:\"/usr/uploads/2017/01/630794881.png\";s:4:\"size\";i:3982;s:4:\"type\";s:3:\"png\";s:4:\"mime\";s:9:\"image/png\";}', '1', '1', null, 'attachment', 'publish', null, '0', '1', '0', '1', '222');

-- ----------------------------
-- Table structure for `typecho_fields`
-- ----------------------------
DROP TABLE IF EXISTS `typecho_fields`;
CREATE TABLE `typecho_fields` (
  `cid` int(10) unsigned NOT NULL,
  `name` varchar(200) NOT NULL,
  `type` varchar(8) DEFAULT 'str',
  `str_value` text,
  `int_value` int(10) DEFAULT '0',
  `float_value` float DEFAULT '0',
  PRIMARY KEY (`cid`,`name`),
  KEY `int_value` (`int_value`),
  KEY `float_value` (`float_value`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of typecho_fields
-- ----------------------------

-- ----------------------------
-- Table structure for `typecho_metas`
-- ----------------------------
DROP TABLE IF EXISTS `typecho_metas`;
CREATE TABLE `typecho_metas` (
  `mid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) DEFAULT NULL,
  `slug` varchar(200) DEFAULT NULL,
  `type` varchar(32) NOT NULL,
  `description` varchar(200) DEFAULT NULL,
  `count` int(10) unsigned DEFAULT '0',
  `order` int(10) unsigned DEFAULT '0',
  `parent` int(10) unsigned DEFAULT '0',
  PRIMARY KEY (`mid`),
  KEY `slug` (`slug`)
) ENGINE=MyISAM AUTO_INCREMENT=60 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of typecho_metas
-- ----------------------------
INSERT INTO `typecho_metas` VALUES ('10', 'eclipse', 'eclipse', 'tag', null, '2', '0', '0');
INSERT INTO `typecho_metas` VALUES ('2', 'css', 'css', 'tag', null, '4', '0', '0');
INSERT INTO `typecho_metas` VALUES ('4', 'CSS', 'css', 'category', null, '4', '2', '0');
INSERT INTO `typecho_metas` VALUES ('5', 'JavaScript', 'javascript', 'category', null, '26', '3', '0');
INSERT INTO `typecho_metas` VALUES ('6', 'Jquery', 'jquery', 'category', null, '4', '4', '0');
INSERT INTO `typecho_metas` VALUES ('7', 'PHP', 'php', 'category', null, '6', '5', '0');
INSERT INTO `typecho_metas` VALUES ('8', 'UI', 'ui', 'category', null, '10', '6', '0');
INSERT INTO `typecho_metas` VALUES ('9', 'Editor', 'editor', 'category', null, '8', '7', '0');
INSERT INTO `typecho_metas` VALUES ('11', 'java', 'java', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('12', 'java', 'java', 'category', 'java', '1', '8', '0');
INSERT INTO `typecho_metas` VALUES ('13', 'js', 'js', 'tag', null, '3', '0', '0');
INSERT INTO `typecho_metas` VALUES ('14', 'thinkphp', 'thinkphp', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('15', 'html', 'html', 'tag', null, '4', '0', '0');
INSERT INTO `typecho_metas` VALUES ('16', 'http', 'http', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('17', 'web', 'web', 'tag', null, '3', '0', '0');
INSERT INTO `typecho_metas` VALUES ('18', '移动', '移动', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('19', 'php', 'php', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('20', 'html5', 'html5', 'tag', null, '3', '0', '0');
INSERT INTO `typecho_metas` VALUES ('21', 'json', 'json', 'tag', null, '2', '0', '0');
INSERT INTO `typecho_metas` VALUES ('22', 'query', 'query', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('23', 'ps', 'ps', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('24', 'git', 'git', 'tag', null, '7', '0', '0');
INSERT INTO `typecho_metas` VALUES ('25', 'mongo', 'mongo', 'tag', null, '2', '0', '0');
INSERT INTO `typecho_metas` VALUES ('26', 'db', 'db', 'category', '数据库，大数据等开发', '5', '9', '0');
INSERT INTO `typecho_metas` VALUES ('27', '服务器', '服务器', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('28', 'server', 'server', 'category', null, '23', '10', '0');
INSERT INTO `typecho_metas` VALUES ('29', '代码搬运工', '代码搬运工', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('30', '创业', '创业', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('31', '移动web', '移动web', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('32', '布局', '布局', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('33', 'mysql', 'mysql', 'tag', null, '2', '0', '0');
INSERT INTO `typecho_metas` VALUES ('34', '查找', '查找', 'tag', null, '0', '0', '0');
INSERT INTO `typecho_metas` VALUES ('35', 'linux', 'linux', 'tag', null, '6', '0', '0');
INSERT INTO `typecho_metas` VALUES ('36', 'jquery', 'jquery', 'tag', null, '3', '0', '0');
INSERT INTO `typecho_metas` VALUES ('37', 'javascript', 'javascript', 'tag', null, '4', '0', '0');
INSERT INTO `typecho_metas` VALUES ('38', 'centos', 'centos', 'tag', null, '2', '0', '0');
INSERT INTO `typecho_metas` VALUES ('39', '正则', '正则', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('40', 'node', 'node', 'tag', null, '6', '0', '0');
INSERT INTO `typecho_metas` VALUES ('41', 'angular', 'angular', 'tag', null, '2', '0', '0');
INSERT INTO `typecho_metas` VALUES ('42', 'sofeware', 'sofeware', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('43', 'book', 'book', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('44', 'sublime', 'sublime', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('45', 'route', 'route', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('46', 'cnodejs', 'cnodejs', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('47', 'ubuntu', 'ubuntu', 'tag', null, '2', '0', '0');
INSERT INTO `typecho_metas` VALUES ('48', 'webstorm', 'webstorm', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('49', 'npm', 'npm', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('50', 'apache', 'apache', 'tag', null, '2', '0', '0');
INSERT INTO `typecho_metas` VALUES ('51', 'httpd', 'httpd', 'tag', null, '2', '0', '0');
INSERT INTO `typecho_metas` VALUES ('52', '离线缓存', '离线缓存', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('53', '数据表设计', '数据表设计', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('54', 'mongoose', 'mongoose', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('55', '正则表达式', '正则表达式', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('56', 'github', 'github', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('57', 'webpack', 'webpack', 'tag', null, '1', '0', '0');
INSERT INTO `typecho_metas` VALUES ('58', 'mac', 'mac', 'tag', null, '3', '0', '0');
INSERT INTO `typecho_metas` VALUES ('59', 'nginx', 'nginx', 'tag', null, '1', '0', '0');

-- ----------------------------
-- Table structure for `typecho_options`
-- ----------------------------
DROP TABLE IF EXISTS `typecho_options`;
CREATE TABLE `typecho_options` (
  `name` varchar(32) NOT NULL,
  `user` int(10) unsigned NOT NULL DEFAULT '0',
  `value` text,
  PRIMARY KEY (`name`,`user`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of typecho_options
-- ----------------------------
INSERT INTO `typecho_options` VALUES ('theme', '0', 'default');
INSERT INTO `typecho_options` VALUES ('theme:default', '0', 'a:2:{s:7:\"logoUrl\";N;s:12:\"sidebarBlock\";a:5:{i:0;s:15:\"ShowRecentPosts\";i:1;s:18:\"ShowRecentComments\";i:2;s:12:\"ShowCategory\";i:3;s:11:\"ShowArchive\";i:4;s:9:\"ShowOther\";}}');
INSERT INTO `typecho_options` VALUES ('timezone', '0', '28800');
INSERT INTO `typecho_options` VALUES ('lang', '0', null);
INSERT INTO `typecho_options` VALUES ('charset', '0', 'UTF-8');
INSERT INTO `typecho_options` VALUES ('contentType', '0', 'text/html');
INSERT INTO `typecho_options` VALUES ('gzip', '0', '0');
INSERT INTO `typecho_options` VALUES ('generator', '0', 'Typecho 1.0/14.10.10');
INSERT INTO `typecho_options` VALUES ('title', '0', '疯狂的迈步');
INSERT INTO `typecho_options` VALUES ('description', '0', 'just do it');
INSERT INTO `typecho_options` VALUES ('keywords', '0', 'php,blog,web,想法，随笔，思考，感叹，瞬间，笔记...');
INSERT INTO `typecho_options` VALUES ('rewrite', '0', '1');
INSERT INTO `typecho_options` VALUES ('frontPage', '0', 'recent');
INSERT INTO `typecho_options` VALUES ('frontArchive', '0', '0');
INSERT INTO `typecho_options` VALUES ('commentsRequireMail', '0', '1');
INSERT INTO `typecho_options` VALUES ('commentsWhitelist', '0', '1');
INSERT INTO `typecho_options` VALUES ('commentsRequireURL', '0', '0');
INSERT INTO `typecho_options` VALUES ('commentsRequireModeration', '0', '1');
INSERT INTO `typecho_options` VALUES ('plugins', '0', 'a:2:{s:9:\"activated\";a:0:{}s:7:\"handles\";a:0:{}}');
INSERT INTO `typecho_options` VALUES ('commentDateFormat', '0', 'F jS, Y \\a\\t h:i a');
INSERT INTO `typecho_options` VALUES ('siteUrl', '0', 'http://junhey.com');
INSERT INTO `typecho_options` VALUES ('defaultCategory', '0', '1');
INSERT INTO `typecho_options` VALUES ('allowRegister', '0', '0');
INSERT INTO `typecho_options` VALUES ('defaultAllowComment', '0', '1');
INSERT INTO `typecho_options` VALUES ('defaultAllowPing', '0', '1');
INSERT INTO `typecho_options` VALUES ('defaultAllowFeed', '0', '1');
INSERT INTO `typecho_options` VALUES ('pageSize', '0', '10');
INSERT INTO `typecho_options` VALUES ('postsListSize', '0', '10');
INSERT INTO `typecho_options` VALUES ('commentsListSize', '0', '10');
INSERT INTO `typecho_options` VALUES ('commentsHTMLTagAllowed', '0', null);
INSERT INTO `typecho_options` VALUES ('postDateFormat', '0', 'Y-m-d');
INSERT INTO `typecho_options` VALUES ('feedFullText', '0', '1');
INSERT INTO `typecho_options` VALUES ('editorSize', '0', '350');
INSERT INTO `typecho_options` VALUES ('autoSave', '0', '0');
INSERT INTO `typecho_options` VALUES ('markdown', '0', '1');
INSERT INTO `typecho_options` VALUES ('commentsMaxNestingLevels', '0', '5');
INSERT INTO `typecho_options` VALUES ('commentsPostTimeout', '0', '2592000');
INSERT INTO `typecho_options` VALUES ('commentsUrlNofollow', '0', '1');
INSERT INTO `typecho_options` VALUES ('commentsShowUrl', '0', '1');
INSERT INTO `typecho_options` VALUES ('commentsMarkdown', '0', '1');
INSERT INTO `typecho_options` VALUES ('commentsPageBreak', '0', '1');
INSERT INTO `typecho_options` VALUES ('commentsThreaded', '0', '1');
INSERT INTO `typecho_options` VALUES ('commentsPageSize', '0', '20');
INSERT INTO `typecho_options` VALUES ('commentsPageDisplay', '0', 'last');
INSERT INTO `typecho_options` VALUES ('commentsOrder', '0', 'DESC');
INSERT INTO `typecho_options` VALUES ('commentsCheckReferer', '0', '1');
INSERT INTO `typecho_options` VALUES ('commentsAutoClose', '0', '0');
INSERT INTO `typecho_options` VALUES ('commentsPostIntervalEnable', '0', '1');
INSERT INTO `typecho_options` VALUES ('commentsPostInterval', '0', '60');
INSERT INTO `typecho_options` VALUES ('commentsShowCommentOnly', '0', '0');
INSERT INTO `typecho_options` VALUES ('commentsAvatar', '0', '0');
INSERT INTO `typecho_options` VALUES ('commentsAvatarRating', '0', 'G');
INSERT INTO `typecho_options` VALUES ('commentsAntiSpam', '0', '1');
INSERT INTO `typecho_options` VALUES ('routingTable', '0', 'a:26:{i:0;a:25:{s:5:\"index\";a:6:{s:3:\"url\";s:1:\"/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:8:\"|^[/]?$|\";s:6:\"format\";s:1:\"/\";s:6:\"params\";a:0:{}}s:7:\"archive\";a:6:{s:3:\"url\";s:6:\"/blog/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:13:\"|^/blog[/]?$|\";s:6:\"format\";s:6:\"/blog/\";s:6:\"params\";a:0:{}}s:2:\"do\";a:6:{s:3:\"url\";s:22:\"/action/[action:alpha]\";s:6:\"widget\";s:9:\"Widget_Do\";s:6:\"action\";s:6:\"action\";s:4:\"regx\";s:32:\"|^/action/([_0-9a-zA-Z-]+)[/]?$|\";s:6:\"format\";s:10:\"/action/%s\";s:6:\"params\";a:1:{i:0;s:6:\"action\";}}s:4:\"post\";a:6:{s:3:\"url\";s:23:\"/[category]/[slug].html\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:30:\"|^/([^/]+)/([^/]+)\\.html[/]?$|\";s:6:\"format\";s:11:\"/%s/%s.html\";s:6:\"params\";a:2:{i:0;s:8:\"category\";i:1;s:4:\"slug\";}}s:10:\"attachment\";a:6:{s:3:\"url\";s:26:\"/attachment/[cid:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:28:\"|^/attachment/([0-9]+)[/]?$|\";s:6:\"format\";s:15:\"/attachment/%s/\";s:6:\"params\";a:1:{i:0;s:3:\"cid\";}}s:8:\"category\";a:6:{s:3:\"url\";s:17:\"/category/[slug]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:25:\"|^/category/([^/]+)[/]?$|\";s:6:\"format\";s:13:\"/category/%s/\";s:6:\"params\";a:1:{i:0;s:4:\"slug\";}}s:3:\"tag\";a:6:{s:3:\"url\";s:12:\"/tag/[slug]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:20:\"|^/tag/([^/]+)[/]?$|\";s:6:\"format\";s:8:\"/tag/%s/\";s:6:\"params\";a:1:{i:0;s:4:\"slug\";}}s:6:\"author\";a:6:{s:3:\"url\";s:22:\"/author/[uid:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:24:\"|^/author/([0-9]+)[/]?$|\";s:6:\"format\";s:11:\"/author/%s/\";s:6:\"params\";a:1:{i:0;s:3:\"uid\";}}s:6:\"search\";a:6:{s:3:\"url\";s:19:\"/search/[keywords]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:23:\"|^/search/([^/]+)[/]?$|\";s:6:\"format\";s:11:\"/search/%s/\";s:6:\"params\";a:1:{i:0;s:8:\"keywords\";}}s:10:\"index_page\";a:6:{s:3:\"url\";s:21:\"/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:22:\"|^/page/([0-9]+)[/]?$|\";s:6:\"format\";s:9:\"/page/%s/\";s:6:\"params\";a:1:{i:0;s:4:\"page\";}}s:12:\"archive_page\";a:6:{s:3:\"url\";s:26:\"/blog/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:27:\"|^/blog/page/([0-9]+)[/]?$|\";s:6:\"format\";s:14:\"/blog/page/%s/\";s:6:\"params\";a:1:{i:0;s:4:\"page\";}}s:13:\"category_page\";a:6:{s:3:\"url\";s:32:\"/category/[slug]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:34:\"|^/category/([^/]+)/([0-9]+)[/]?$|\";s:6:\"format\";s:16:\"/category/%s/%s/\";s:6:\"params\";a:2:{i:0;s:4:\"slug\";i:1;s:4:\"page\";}}s:8:\"tag_page\";a:6:{s:3:\"url\";s:27:\"/tag/[slug]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:29:\"|^/tag/([^/]+)/([0-9]+)[/]?$|\";s:6:\"format\";s:11:\"/tag/%s/%s/\";s:6:\"params\";a:2:{i:0;s:4:\"slug\";i:1;s:4:\"page\";}}s:11:\"author_page\";a:6:{s:3:\"url\";s:37:\"/author/[uid:digital]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:33:\"|^/author/([0-9]+)/([0-9]+)[/]?$|\";s:6:\"format\";s:14:\"/author/%s/%s/\";s:6:\"params\";a:2:{i:0;s:3:\"uid\";i:1;s:4:\"page\";}}s:11:\"search_page\";a:6:{s:3:\"url\";s:34:\"/search/[keywords]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:32:\"|^/search/([^/]+)/([0-9]+)[/]?$|\";s:6:\"format\";s:14:\"/search/%s/%s/\";s:6:\"params\";a:2:{i:0;s:8:\"keywords\";i:1;s:4:\"page\";}}s:12:\"archive_year\";a:6:{s:3:\"url\";s:18:\"/[year:digital:4]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:19:\"|^/([0-9]{4})[/]?$|\";s:6:\"format\";s:4:\"/%s/\";s:6:\"params\";a:1:{i:0;s:4:\"year\";}}s:13:\"archive_month\";a:6:{s:3:\"url\";s:36:\"/[year:digital:4]/[month:digital:2]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:30:\"|^/([0-9]{4})/([0-9]{2})[/]?$|\";s:6:\"format\";s:7:\"/%s/%s/\";s:6:\"params\";a:2:{i:0;s:4:\"year\";i:1;s:5:\"month\";}}s:11:\"archive_day\";a:6:{s:3:\"url\";s:52:\"/[year:digital:4]/[month:digital:2]/[day:digital:2]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:41:\"|^/([0-9]{4})/([0-9]{2})/([0-9]{2})[/]?$|\";s:6:\"format\";s:10:\"/%s/%s/%s/\";s:6:\"params\";a:3:{i:0;s:4:\"year\";i:1;s:5:\"month\";i:2;s:3:\"day\";}}s:17:\"archive_year_page\";a:6:{s:3:\"url\";s:38:\"/[year:digital:4]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:33:\"|^/([0-9]{4})/page/([0-9]+)[/]?$|\";s:6:\"format\";s:12:\"/%s/page/%s/\";s:6:\"params\";a:2:{i:0;s:4:\"year\";i:1;s:4:\"page\";}}s:18:\"archive_month_page\";a:6:{s:3:\"url\";s:56:\"/[year:digital:4]/[month:digital:2]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:44:\"|^/([0-9]{4})/([0-9]{2})/page/([0-9]+)[/]?$|\";s:6:\"format\";s:15:\"/%s/%s/page/%s/\";s:6:\"params\";a:3:{i:0;s:4:\"year\";i:1;s:5:\"month\";i:2;s:4:\"page\";}}s:16:\"archive_day_page\";a:6:{s:3:\"url\";s:72:\"/[year:digital:4]/[month:digital:2]/[day:digital:2]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:55:\"|^/([0-9]{4})/([0-9]{2})/([0-9]{2})/page/([0-9]+)[/]?$|\";s:6:\"format\";s:18:\"/%s/%s/%s/page/%s/\";s:6:\"params\";a:4:{i:0;s:4:\"year\";i:1;s:5:\"month\";i:2;s:3:\"day\";i:3;s:4:\"page\";}}s:12:\"comment_page\";a:6:{s:3:\"url\";s:53:\"[permalink:string]/comment-page-[commentPage:digital]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:36:\"|^(.+)/comment\\-page\\-([0-9]+)[/]?$|\";s:6:\"format\";s:18:\"%s/comment-page-%s\";s:6:\"params\";a:2:{i:0;s:9:\"permalink\";i:1;s:11:\"commentPage\";}}s:4:\"feed\";a:6:{s:3:\"url\";s:20:\"/feed[feed:string:0]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:4:\"feed\";s:4:\"regx\";s:17:\"|^/feed(.*)[/]?$|\";s:6:\"format\";s:7:\"/feed%s\";s:6:\"params\";a:1:{i:0;s:4:\"feed\";}}s:8:\"feedback\";a:6:{s:3:\"url\";s:31:\"[permalink:string]/[type:alpha]\";s:6:\"widget\";s:15:\"Widget_Feedback\";s:6:\"action\";s:6:\"action\";s:4:\"regx\";s:29:\"|^(.+)/([_0-9a-zA-Z-]+)[/]?$|\";s:6:\"format\";s:5:\"%s/%s\";s:6:\"params\";a:2:{i:0;s:9:\"permalink\";i:1;s:4:\"type\";}}s:4:\"page\";a:6:{s:3:\"url\";s:12:\"/[slug].html\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";s:4:\"regx\";s:22:\"|^/([^/]+)\\.html[/]?$|\";s:6:\"format\";s:8:\"/%s.html\";s:6:\"params\";a:1:{i:0;s:4:\"slug\";}}}s:5:\"index\";a:3:{s:3:\"url\";s:1:\"/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:7:\"archive\";a:3:{s:3:\"url\";s:6:\"/blog/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:2:\"do\";a:3:{s:3:\"url\";s:22:\"/action/[action:alpha]\";s:6:\"widget\";s:9:\"Widget_Do\";s:6:\"action\";s:6:\"action\";}s:4:\"post\";a:3:{s:3:\"url\";s:23:\"/[category]/[slug].html\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:10:\"attachment\";a:3:{s:3:\"url\";s:26:\"/attachment/[cid:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:8:\"category\";a:3:{s:3:\"url\";s:17:\"/category/[slug]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:3:\"tag\";a:3:{s:3:\"url\";s:12:\"/tag/[slug]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:6:\"author\";a:3:{s:3:\"url\";s:22:\"/author/[uid:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:6:\"search\";a:3:{s:3:\"url\";s:19:\"/search/[keywords]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:10:\"index_page\";a:3:{s:3:\"url\";s:21:\"/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:12:\"archive_page\";a:3:{s:3:\"url\";s:26:\"/blog/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:13:\"category_page\";a:3:{s:3:\"url\";s:32:\"/category/[slug]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:8:\"tag_page\";a:3:{s:3:\"url\";s:27:\"/tag/[slug]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:11:\"author_page\";a:3:{s:3:\"url\";s:37:\"/author/[uid:digital]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:11:\"search_page\";a:3:{s:3:\"url\";s:34:\"/search/[keywords]/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:12:\"archive_year\";a:3:{s:3:\"url\";s:18:\"/[year:digital:4]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:13:\"archive_month\";a:3:{s:3:\"url\";s:36:\"/[year:digital:4]/[month:digital:2]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:11:\"archive_day\";a:3:{s:3:\"url\";s:52:\"/[year:digital:4]/[month:digital:2]/[day:digital:2]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:17:\"archive_year_page\";a:3:{s:3:\"url\";s:38:\"/[year:digital:4]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:18:\"archive_month_page\";a:3:{s:3:\"url\";s:56:\"/[year:digital:4]/[month:digital:2]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:16:\"archive_day_page\";a:3:{s:3:\"url\";s:72:\"/[year:digital:4]/[month:digital:2]/[day:digital:2]/page/[page:digital]/\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:12:\"comment_page\";a:3:{s:3:\"url\";s:53:\"[permalink:string]/comment-page-[commentPage:digital]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}s:4:\"feed\";a:3:{s:3:\"url\";s:20:\"/feed[feed:string:0]\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:4:\"feed\";}s:8:\"feedback\";a:3:{s:3:\"url\";s:31:\"[permalink:string]/[type:alpha]\";s:6:\"widget\";s:15:\"Widget_Feedback\";s:6:\"action\";s:6:\"action\";}s:4:\"page\";a:3:{s:3:\"url\";s:12:\"/[slug].html\";s:6:\"widget\";s:14:\"Widget_Archive\";s:6:\"action\";s:6:\"render\";}}');
INSERT INTO `typecho_options` VALUES ('actionTable', '0', 'a:0:{}');
INSERT INTO `typecho_options` VALUES ('panelTable', '0', 'a:0:{}');
INSERT INTO `typecho_options` VALUES ('attachmentTypes', '0', '@image@,@media@,@doc@');
INSERT INTO `typecho_options` VALUES ('secret', '0', 'sKivo$ZUFNlqxzyhSN6jpVFuf(B*t4LL');
INSERT INTO `typecho_options` VALUES ('autoSave', '1', '1');
INSERT INTO `typecho_options` VALUES ('markdown', '1', '1');
INSERT INTO `typecho_options` VALUES ('defaultAllowComment', '1', '1');
INSERT INTO `typecho_options` VALUES ('defaultAllowPing', '1', '1');
INSERT INTO `typecho_options` VALUES ('defaultAllowFeed', '1', '1');

-- ----------------------------
-- Table structure for `typecho_relationships`
-- ----------------------------
DROP TABLE IF EXISTS `typecho_relationships`;
CREATE TABLE `typecho_relationships` (
  `cid` int(10) unsigned NOT NULL,
  `mid` int(10) unsigned NOT NULL,
  PRIMARY KEY (`cid`,`mid`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of typecho_relationships
-- ----------------------------
INSERT INTO `typecho_relationships` VALUES ('5', '2');
INSERT INTO `typecho_relationships` VALUES ('5', '4');
INSERT INTO `typecho_relationships` VALUES ('6', '2');
INSERT INTO `typecho_relationships` VALUES ('6', '4');
INSERT INTO `typecho_relationships` VALUES ('7', '2');
INSERT INTO `typecho_relationships` VALUES ('7', '4');
INSERT INTO `typecho_relationships` VALUES ('9', '11');
INSERT INTO `typecho_relationships` VALUES ('9', '12');
INSERT INTO `typecho_relationships` VALUES ('10', '9');
INSERT INTO `typecho_relationships` VALUES ('10', '10');
INSERT INTO `typecho_relationships` VALUES ('11', '9');
INSERT INTO `typecho_relationships` VALUES ('11', '10');
INSERT INTO `typecho_relationships` VALUES ('33', '5');
INSERT INTO `typecho_relationships` VALUES ('33', '13');
INSERT INTO `typecho_relationships` VALUES ('34', '7');
INSERT INTO `typecho_relationships` VALUES ('35', '7');
INSERT INTO `typecho_relationships` VALUES ('35', '14');
INSERT INTO `typecho_relationships` VALUES ('38', '5');
INSERT INTO `typecho_relationships` VALUES ('38', '13');
INSERT INTO `typecho_relationships` VALUES ('41', '8');
INSERT INTO `typecho_relationships` VALUES ('41', '15');
INSERT INTO `typecho_relationships` VALUES ('42', '9');
INSERT INTO `typecho_relationships` VALUES ('42', '16');
INSERT INTO `typecho_relationships` VALUES ('44', '5');
INSERT INTO `typecho_relationships` VALUES ('44', '17');
INSERT INTO `typecho_relationships` VALUES ('45', '5');
INSERT INTO `typecho_relationships` VALUES ('45', '17');
INSERT INTO `typecho_relationships` VALUES ('45', '18');
INSERT INTO `typecho_relationships` VALUES ('46', '7');
INSERT INTO `typecho_relationships` VALUES ('46', '19');
INSERT INTO `typecho_relationships` VALUES ('47', '9');
INSERT INTO `typecho_relationships` VALUES ('48', '4');
INSERT INTO `typecho_relationships` VALUES ('48', '20');
INSERT INTO `typecho_relationships` VALUES ('49', '7');
INSERT INTO `typecho_relationships` VALUES ('49', '21');
INSERT INTO `typecho_relationships` VALUES ('51', '8');
INSERT INTO `typecho_relationships` VALUES ('51', '20');
INSERT INTO `typecho_relationships` VALUES ('53', '5');
INSERT INTO `typecho_relationships` VALUES ('54', '8');
INSERT INTO `typecho_relationships` VALUES ('54', '15');
INSERT INTO `typecho_relationships` VALUES ('56', '2');
INSERT INTO `typecho_relationships` VALUES ('56', '8');
INSERT INTO `typecho_relationships` VALUES ('59', '6');
INSERT INTO `typecho_relationships` VALUES ('59', '22');
INSERT INTO `typecho_relationships` VALUES ('60', '8');
INSERT INTO `typecho_relationships` VALUES ('60', '17');
INSERT INTO `typecho_relationships` VALUES ('60', '23');
INSERT INTO `typecho_relationships` VALUES ('61', '9');
INSERT INTO `typecho_relationships` VALUES ('61', '24');
INSERT INTO `typecho_relationships` VALUES ('63', '8');
INSERT INTO `typecho_relationships` VALUES ('64', '25');
INSERT INTO `typecho_relationships` VALUES ('64', '26');
INSERT INTO `typecho_relationships` VALUES ('65', '27');
INSERT INTO `typecho_relationships` VALUES ('65', '28');
INSERT INTO `typecho_relationships` VALUES ('67', '5');
INSERT INTO `typecho_relationships` VALUES ('67', '15');
INSERT INTO `typecho_relationships` VALUES ('70', '7');
INSERT INTO `typecho_relationships` VALUES ('70', '29');
INSERT INTO `typecho_relationships` VALUES ('75', '26');
INSERT INTO `typecho_relationships` VALUES ('75', '30');
INSERT INTO `typecho_relationships` VALUES ('79', '8');
INSERT INTO `typecho_relationships` VALUES ('79', '31');
INSERT INTO `typecho_relationships` VALUES ('81', '8');
INSERT INTO `typecho_relationships` VALUES ('81', '32');
INSERT INTO `typecho_relationships` VALUES ('85', '28');
INSERT INTO `typecho_relationships` VALUES ('85', '33');
INSERT INTO `typecho_relationships` VALUES ('86', '28');
INSERT INTO `typecho_relationships` VALUES ('86', '35');
INSERT INTO `typecho_relationships` VALUES ('87', '28');
INSERT INTO `typecho_relationships` VALUES ('87', '35');
INSERT INTO `typecho_relationships` VALUES ('90', '28');
INSERT INTO `typecho_relationships` VALUES ('94', '28');
INSERT INTO `typecho_relationships` VALUES ('100', '7');
INSERT INTO `typecho_relationships` VALUES ('104', '6');
INSERT INTO `typecho_relationships` VALUES ('104', '36');
INSERT INTO `typecho_relationships` VALUES ('116', '6');
INSERT INTO `typecho_relationships` VALUES ('116', '36');
INSERT INTO `typecho_relationships` VALUES ('117', '5');
INSERT INTO `typecho_relationships` VALUES ('117', '37');
INSERT INTO `typecho_relationships` VALUES ('121', '6');
INSERT INTO `typecho_relationships` VALUES ('121', '36');
INSERT INTO `typecho_relationships` VALUES ('124', '28');
INSERT INTO `typecho_relationships` VALUES ('124', '38');
INSERT INTO `typecho_relationships` VALUES ('127', '28');
INSERT INTO `typecho_relationships` VALUES ('127', '38');
INSERT INTO `typecho_relationships` VALUES ('128', '28');
INSERT INTO `typecho_relationships` VALUES ('128', '35');
INSERT INTO `typecho_relationships` VALUES ('129', '5');
INSERT INTO `typecho_relationships` VALUES ('129', '39');
INSERT INTO `typecho_relationships` VALUES ('130', '28');
INSERT INTO `typecho_relationships` VALUES ('130', '35');
INSERT INTO `typecho_relationships` VALUES ('131', '26');
INSERT INTO `typecho_relationships` VALUES ('131', '40');
INSERT INTO `typecho_relationships` VALUES ('137', '28');
INSERT INTO `typecho_relationships` VALUES ('137', '35');
INSERT INTO `typecho_relationships` VALUES ('137', '40');
INSERT INTO `typecho_relationships` VALUES ('141', '9');
INSERT INTO `typecho_relationships` VALUES ('141', '24');
INSERT INTO `typecho_relationships` VALUES ('144', '5');
INSERT INTO `typecho_relationships` VALUES ('144', '41');
INSERT INTO `typecho_relationships` VALUES ('148', '8');
INSERT INTO `typecho_relationships` VALUES ('148', '42');
INSERT INTO `typecho_relationships` VALUES ('149', '24');
INSERT INTO `typecho_relationships` VALUES ('149', '28');
INSERT INTO `typecho_relationships` VALUES ('150', '24');
INSERT INTO `typecho_relationships` VALUES ('150', '28');
INSERT INTO `typecho_relationships` VALUES ('154', '24');
INSERT INTO `typecho_relationships` VALUES ('154', '28');
INSERT INTO `typecho_relationships` VALUES ('157', '28');
INSERT INTO `typecho_relationships` VALUES ('157', '43');
INSERT INTO `typecho_relationships` VALUES ('160', '28');
INSERT INTO `typecho_relationships` VALUES ('160', '40');
INSERT INTO `typecho_relationships` VALUES ('161', '8');
INSERT INTO `typecho_relationships` VALUES ('161', '15');
INSERT INTO `typecho_relationships` VALUES ('163', '9');
INSERT INTO `typecho_relationships` VALUES ('163', '44');
INSERT INTO `typecho_relationships` VALUES ('164', '5');
INSERT INTO `typecho_relationships` VALUES ('164', '40');
INSERT INTO `typecho_relationships` VALUES ('167', '5');
INSERT INTO `typecho_relationships` VALUES ('167', '41');
INSERT INTO `typecho_relationships` VALUES ('167', '45');
INSERT INTO `typecho_relationships` VALUES ('167', '46');
INSERT INTO `typecho_relationships` VALUES ('173', '9');
INSERT INTO `typecho_relationships` VALUES ('173', '48');
INSERT INTO `typecho_relationships` VALUES ('174', '28');
INSERT INTO `typecho_relationships` VALUES ('174', '47');
INSERT INTO `typecho_relationships` VALUES ('178', '5');
INSERT INTO `typecho_relationships` VALUES ('178', '21');
INSERT INTO `typecho_relationships` VALUES ('179', '5');
INSERT INTO `typecho_relationships` VALUES ('186', '25');
INSERT INTO `typecho_relationships` VALUES ('186', '26');
INSERT INTO `typecho_relationships` VALUES ('188', '28');
INSERT INTO `typecho_relationships` VALUES ('188', '40');
INSERT INTO `typecho_relationships` VALUES ('188', '49');
INSERT INTO `typecho_relationships` VALUES ('189', '28');
INSERT INTO `typecho_relationships` VALUES ('189', '50');
INSERT INTO `typecho_relationships` VALUES ('189', '51');
INSERT INTO `typecho_relationships` VALUES ('190', '28');
INSERT INTO `typecho_relationships` VALUES ('190', '50');
INSERT INTO `typecho_relationships` VALUES ('190', '51');
INSERT INTO `typecho_relationships` VALUES ('192', '5');
INSERT INTO `typecho_relationships` VALUES ('194', '5');
INSERT INTO `typecho_relationships` VALUES ('194', '37');
INSERT INTO `typecho_relationships` VALUES ('194', '52');
INSERT INTO `typecho_relationships` VALUES ('200', '26');
INSERT INTO `typecho_relationships` VALUES ('200', '53');
INSERT INTO `typecho_relationships` VALUES ('201', '28');
INSERT INTO `typecho_relationships` VALUES ('201', '54');
INSERT INTO `typecho_relationships` VALUES ('202', '5');
INSERT INTO `typecho_relationships` VALUES ('202', '55');
INSERT INTO `typecho_relationships` VALUES ('203', '5');
INSERT INTO `typecho_relationships` VALUES ('203', '13');
INSERT INTO `typecho_relationships` VALUES ('205', '28');
INSERT INTO `typecho_relationships` VALUES ('205', '33');
INSERT INTO `typecho_relationships` VALUES ('207', '5');
INSERT INTO `typecho_relationships` VALUES ('207', '37');
INSERT INTO `typecho_relationships` VALUES ('209', '5');
INSERT INTO `typecho_relationships` VALUES ('209', '24');
INSERT INTO `typecho_relationships` VALUES ('209', '47');
INSERT INTO `typecho_relationships` VALUES ('209', '56');
INSERT INTO `typecho_relationships` VALUES ('211', '5');
INSERT INTO `typecho_relationships` VALUES ('211', '40');
INSERT INTO `typecho_relationships` VALUES ('212', '5');
INSERT INTO `typecho_relationships` VALUES ('212', '40');
INSERT INTO `typecho_relationships` VALUES ('213', '5');
INSERT INTO `typecho_relationships` VALUES ('213', '24');
INSERT INTO `typecho_relationships` VALUES ('213', '35');
INSERT INTO `typecho_relationships` VALUES ('216', '5');
INSERT INTO `typecho_relationships` VALUES ('216', '55');
INSERT INTO `typecho_relationships` VALUES ('217', '5');
INSERT INTO `typecho_relationships` VALUES ('219', '5');
INSERT INTO `typecho_relationships` VALUES ('219', '57');
INSERT INTO `typecho_relationships` VALUES ('220', '5');
INSERT INTO `typecho_relationships` VALUES ('220', '58');
INSERT INTO `typecho_relationships` VALUES ('221', '28');
INSERT INTO `typecho_relationships` VALUES ('221', '58');
INSERT INTO `typecho_relationships` VALUES ('221', '59');
INSERT INTO `typecho_relationships` VALUES ('222', '5');
INSERT INTO `typecho_relationships` VALUES ('222', '58');
INSERT INTO `typecho_relationships` VALUES ('223', '5');
INSERT INTO `typecho_relationships` VALUES ('223', '20');
INSERT INTO `typecho_relationships` VALUES ('224', '5');
INSERT INTO `typecho_relationships` VALUES ('224', '37');

-- ----------------------------
-- Table structure for `typecho_users`
-- ----------------------------
DROP TABLE IF EXISTS `typecho_users`;
CREATE TABLE `typecho_users` (
  `uid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(32) DEFAULT NULL,
  `password` varchar(64) DEFAULT NULL,
  `mail` varchar(200) DEFAULT NULL,
  `url` varchar(200) DEFAULT NULL,
  `screenName` varchar(32) DEFAULT NULL,
  `created` int(10) unsigned DEFAULT '0',
  `activated` int(10) unsigned DEFAULT '0',
  `logged` int(10) unsigned DEFAULT '0',
  `group` varchar(16) DEFAULT 'visitor',
  `authCode` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`uid`),
  UNIQUE KEY `name` (`name`),
  UNIQUE KEY `mail` (`mail`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of typecho_users
-- ----------------------------
INSERT INTO `typecho_users` VALUES ('1', 'junhey', '$P$BBSr9dr0HnJ7cErrltPl9CWej0Scfu.', 'junhey@qq.com', 'http://www.junhey.com', 'junhey', '1446218267', '1487858864', '1487255761', 'administrator', '08c28ebad4d8ffa9b119f59f095e7f4d');
